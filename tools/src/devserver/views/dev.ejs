<!DOCTYPE html>
<!doctype html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <link rel="stylesheet" href="/build/css/razorflow.css"/>
    <script type="text/javascript" src="/build/js/templates.js"></script>
    <% for(var i = -1; ++i < vendorScripts.length;) { %>
    <script type="text/javascript" src="/assets/vendor/js/<%= vendorScripts[i] %>"></script>
    <% } %>
    <script type="text/javascript">
        require.config({
            baseUrl: '/assets/js'
        });
    </script>
    <script>
        require(["core/main"], function (rf) {
            StandaloneDashboard(function (db) {
                db.setDashboardTitle('KPI Types Supported in RazorFlow');

                // var c1 = new KPIComponent();
                // c1.setDimensions(3, 3);
                // c1.setCaption({md: 'Average Monthly Sales', sm: "Sales"});
                // c1.setValue(513.22);
                // db.addComponent(c1);

                var c2 = new GaugeComponent();
                c2.setDimensions(3, 3);
                c2.setCaption('Average Monthly Cost');
                c2.setValue(90);
                c2.setLimits(0, 100);

                db.addComponent(c2);


                var c3 = new TableComponent();
                c3.setDimensions(8, 6);
                c3.setRowsPerPage('10');
                c3.setCaption("table component");
                for (var i = 0; i < 5; i++) {
                    c3.addColumn("a" + i, "Column A" + i, {
                        dataType: "number",
                        numberPrefix: "$"
                    });
                    c3.addColumn("b" + i, "Column B" + i, {
                        dataType: "number",
                        numberSuffix: "%"
                    });
                }

                for (var i = 0; i < 85; i++) {
                    var obj = {};
                    for (var j = 0; j < 5; j++) {
                        obj["a" + j] = Math.floor(Math.random
                                () * 10000);
                        obj["b" + j] = Math.floor(Math.random() * 10000);
                    }

                    c3.addRow(obj);
                }
                db.addComponent(c3);

                // var c4 = new ChartComponent();
                // c4.setDimensions(12, 6);
                // c4.setCaption('New Chart');
                // c4.setCaption('Yearly Sales for Top 5 Genres');
                // c4.setLabels(['2007', '2008', '2009', '2010', '2011']);
                // c4.addSeries('rock', 'Rock', [178.20, 155.43, 161.37, 157.41, 174.24], {seriesDisplayType: 'pie', numberPrefix: "$"});
                // c4.addSeries('latin', 'Latin', [82.17, 77.22, 80.19, 63.36, 79.20], {numberPrefix: "$"});
                // c4.addSeries('metal', 'Metal', [61.38, 53.46, 30.69, 80.39, 44.45], {numberPrefix: "$"});
                // c4.addSeries('blues', 'Blues', [62.37, 59.60, 45.54, 38.61, 5.94], {numberPrefix: "$"});
                // c4.addSeries('jazz', 'Jazz', [174.24, 79.20, 55.45, 55.44, 21.78], {numberPrefix: "$"});
                // c4.setYAxis('hello', {numberPrefix: '$'});
                // db.addComponent(c4);


                // var filter = new FilterComponent();
                // filter.setDimensions(6,6);
                // filter.setCaption('A test filter component');
                // filter.addTextFilter('name', 'Enter your name');
                // filter.addSelectFilter('category', 'Enter your category', ['Dragon', 'Horse', 'Cat', 'Dog', 'Human']);
                // filter.addMultiSelectFilter('multi', 'Enter your category', ['Dragon', 'Horse', 'Cat', 'Dog', 'Human']);
                // filter.addDateFilter('delivery', 'Delivery Date');
                // filter.addDateRangeFilter('daterange', 'Delivery Range');
                // filter.addNumericRangeFilter('unitrange', 'Units Range');
                // filter.addCheckboxFilter('truthtest', 'Did you take this form seriously?');
                // filter.onApplyClicked(function(obj) {
                //     debugger
                // });
                // db.addComponent(filter);
                setTimeout(function () {
                    // c1.setValue(55);
                    // c1.unlock();
                    // c3.clearRows();
//                    c3.addRow ({a: 5, b: 6}); 
                    // c2.setValue(55);
                }, 3000);
//                 
//                 

                //console.log(JSON.stringify(db.pro._serializeComponents()));
            });
        });
    </script>

</head>
<body>
<div id="dbTarget" style='position: relative;width: 80%' class='rf rf-click rf-lg'>
</div>
</body>
</html>
    
