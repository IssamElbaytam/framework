

/** File: application/3.0.2/assets/desktop/js/modernizr.js **/

/* Modernizr 2.7.0 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-flexboxlegacy-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-draganddrop-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-smil-svg-svgclippaths-touch-webgl-shiv-mq-cssclasses-addtest-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load
 */
;window.Modernizr=function(a,b,c){function D(a){j.cssText=a}function E(a,b){return D(n.join(a+";")+(b||""))}function F(a,b){return typeof a===b}function G(a,b){return!!~(""+a).indexOf(b)}function H(a,b){for(var d in a){var e=a[d];if(!G(e,"-")&&j[e]!==c)return b=="pfx"?e:!0}return!1}function I(a,b,d){for(var e in a){var f=b[a[e]];if(f!==c)return d===!1?a[e]:F(f,"function")?f.bind(d||b):f}return!1}function J(a,b,c){var d=a.charAt(0).toUpperCase()+a.slice(1),e=(a+" "+p.join(d+" ")+d).split(" ");return F(b,"string")||F(b,"undefined")?H(e,b):(e=(a+" "+q.join(d+" ")+d).split(" "),I(e,b,c))}function K(){e.input=function(c){for(var d=0,e=c.length;d<e;d++)u[c[d]]=c[d]in k;return u.list&&(u.list=!!b.createElement("datalist")&&!!a.HTMLDataListElement),u}("autocomplete autofocus list placeholder max min multiple pattern required step".split(" ")),e.inputtypes=function(a){for(var d=0,e,f,h,i=a.length;d<i;d++)k.setAttribute("type",f=a[d]),e=k.type!=="text",e&&(k.value=l,k.style.cssText="position:absolute;visibility:hidden;",/^range$/.test(f)&&k.style.WebkitAppearance!==c?(g.appendChild(k),h=b.defaultView,e=h.getComputedStyle&&h.getComputedStyle(k,null).WebkitAppearance!=="textfield"&&k.offsetHeight!==0,g.removeChild(k)):/^(search|tel)$/.test(f)||(/^(url|email)$/.test(f)?e=k.checkValidity&&k.checkValidity()===!1:e=k.value!=l)),t[a[d]]=!!e;return t}("search tel url email datetime date month week time datetime-local number range color".split(" "))}var d="2.7.0",e={},f=!0,g=b.documentElement,h="modernizr",i=b.createElement(h),j=i.style,k=b.createElement("input"),l=":)",m={}.toString,n=" -webkit- -moz- -o- -ms- ".split(" "),o="Webkit Moz O ms",p=o.split(" "),q=o.toLowerCase().split(" "),r={svg:"http://www.w3.org/2000/svg"},s={},t={},u={},v=[],w=v.slice,x,y=function(a,c,d,e){var f,i,j,k,l=b.createElement("div"),m=b.body,n=m||b.createElement("body");if(parseInt(d,10))while(d--)j=b.createElement("div"),j.id=e?e[d]:h+(d+1),l.appendChild(j);return f=["&#173;",'<style id="s',h,'">',a,"</style>"].join(""),l.id=h,(m?l:n).innerHTML+=f,n.appendChild(l),m||(n.style.background="",n.style.overflow="hidden",k=g.style.overflow,g.style.overflow="hidden",g.appendChild(n)),i=c(l,a),m?l.parentNode.removeChild(l):(n.parentNode.removeChild(n),g.style.overflow=k),!!i},z=function(b){var c=a.matchMedia||a.msMatchMedia;if(c)return c(b).matches;var d;return y("@media "+b+" { #"+h+" { position: absolute; } }",function(b){d=(a.getComputedStyle?getComputedStyle(b,null):b.currentStyle)["position"]=="absolute"}),d},A=function(){function d(d,e){e=e||b.createElement(a[d]||"div"),d="on"+d;var f=d in e;return f||(e.setAttribute||(e=b.createElement("div")),e.setAttribute&&e.removeAttribute&&(e.setAttribute(d,""),f=F(e[d],"function"),F(e[d],"undefined")||(e[d]=c),e.removeAttribute(d))),e=null,f}var a={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};return d}(),B={}.hasOwnProperty,C;!F(B,"undefined")&&!F(B.call,"undefined")?C=function(a,b){return B.call(a,b)}:C=function(a,b){return b in a&&F(a.constructor.prototype[b],"undefined")},Function.prototype.bind||(Function.prototype.bind=function(b){var c=this;if(typeof c!="function")throw new TypeError;var d=w.call(arguments,1),e=function(){if(this instanceof e){var a=function(){};a.prototype=c.prototype;var f=new a,g=c.apply(f,d.concat(w.call(arguments)));return Object(g)===g?g:f}return c.apply(b,d.concat(w.call(arguments)))};return e}),s.flexbox=function(){return J("flexWrap")},s.flexboxlegacy=function(){return J("boxDirection")},s.canvas=function(){var a=b.createElement("canvas");return!!a.getContext&&!!a.getContext("2d")},s.canvastext=function(){return!!e.canvas&&!!F(b.createElement("canvas").getContext("2d").fillText,"function")},s.webgl=function(){return!!a.WebGLRenderingContext},s.touch=function(){var c;return"ontouchstart"in a||a.DocumentTouch&&b instanceof DocumentTouch?c=!0:y(["@media (",n.join("touch-enabled),("),h,")","{#modernizr{top:9px;position:absolute}}"].join(""),function(a){c=a.offsetTop===9}),c},s.geolocation=function(){return"geolocation"in navigator},s.postmessage=function(){return!!a.postMessage},s.websqldatabase=function(){return!!a.openDatabase},s.indexedDB=function(){return!!J("indexedDB",a)},s.hashchange=function(){return A("hashchange",a)&&(b.documentMode===c||b.documentMode>7)},s.history=function(){return!!a.history&&!!history.pushState},s.draganddrop=function(){var a=b.createElement("div");return"draggable"in a||"ondragstart"in a&&"ondrop"in a},s.websockets=function(){return"WebSocket"in a||"MozWebSocket"in a},s.rgba=function(){return D("background-color:rgba(150,255,150,.5)"),G(j.backgroundColor,"rgba")},s.hsla=function(){return D("background-color:hsla(120,40%,100%,.5)"),G(j.backgroundColor,"rgba")||G(j.backgroundColor,"hsla")},s.multiplebgs=function(){return D("background:url(https://),url(https://),red url(https://)"),/(url\s*\(.*?){3}/.test(j.background)},s.backgroundsize=function(){return J("backgroundSize")},s.borderimage=function(){return J("borderImage")},s.borderradius=function(){return J("borderRadius")},s.boxshadow=function(){return J("boxShadow")},s.textshadow=function(){return b.createElement("div").style.textShadow===""},s.opacity=function(){return E("opacity:.55"),/^0.55$/.test(j.opacity)},s.cssanimations=function(){return J("animationName")},s.csscolumns=function(){return J("columnCount")},s.cssgradients=function(){var a="background-image:",b="gradient(linear,left top,right bottom,from(#9f9),to(white));",c="linear-gradient(left top,#9f9, white);";return D((a+"-webkit- ".split(" ").join(b+a)+n.join(c+a)).slice(0,-a.length)),G(j.backgroundImage,"gradient")},s.cssreflections=function(){return J("boxReflect")},s.csstransforms=function(){return!!J("transform")},s.csstransforms3d=function(){var a=!!J("perspective");return a&&"webkitPerspective"in g.style&&y("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}",function(b,c){a=b.offsetLeft===9&&b.offsetHeight===3}),a},s.csstransitions=function(){return J("transition")},s.fontface=function(){var a;return y('@font-face {font-family:"font";src:url("https://")}',function(c,d){var e=b.getElementById("smodernizr"),f=e.sheet||e.styleSheet,g=f?f.cssRules&&f.cssRules[0]?f.cssRules[0].cssText:f.cssText||"":"";a=/src/i.test(g)&&g.indexOf(d.split(" ")[0])===0}),a},s.generatedcontent=function(){var a;return y(["#",h,"{font:0/0 a}#",h,':after{content:"',l,'";visibility:hidden;font:3px/1 a}'].join(""),function(b){a=b.offsetHeight>=3}),a},s.video=function(){var a=b.createElement("video"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/,""),c.h264=a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/,""),c.webm=a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,"")}catch(d){}return c},s.audio=function(){var a=b.createElement("audio"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),c.mp3=a.canPlayType("audio/mpeg;").replace(/^no$/,""),c.wav=a.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),c.m4a=(a.canPlayType("audio/x-m4a;")||a.canPlayType("audio/aac;")).replace(/^no$/,"")}catch(d){}return c},s.localstorage=function(){try{return localStorage.setItem(h,h),localStorage.removeItem(h),!0}catch(a){return!1}},s.sessionstorage=function(){try{return sessionStorage.setItem(h,h),sessionStorage.removeItem(h),!0}catch(a){return!1}},s.webworkers=function(){return!!a.Worker},s.applicationcache=function(){return!!a.applicationCache},s.svg=function(){return!!b.createElementNS&&!!b.createElementNS(r.svg,"svg").createSVGRect},s.inlinesvg=function(){var a=b.createElement("div");return a.innerHTML="<svg/>",(a.firstChild&&a.firstChild.namespaceURI)==r.svg},s.smil=function(){return!!b.createElementNS&&/SVGAnimate/.test(m.call(b.createElementNS(r.svg,"animate")))},s.svgclippaths=function(){return!!b.createElementNS&&/SVGClipPath/.test(m.call(b.createElementNS(r.svg,"clipPath")))};for(var L in s)C(s,L)&&(x=L.toLowerCase(),e[x]=s[L](),v.push((e[x]?"":"no-")+x));return e.input||K(),e.addTest=function(a,b){if(typeof a=="object")for(var d in a)C(a,d)&&e.addTest(d,a[d]);else{a=a.toLowerCase();if(e[a]!==c)return e;b=typeof b=="function"?b():b,typeof f!="undefined"&&f&&(g.className+=" "+(b?"":"no-")+a),e[a]=b}return e},D(""),i=k=null,function(a,b){function l(a,b){var c=a.createElement("p"),d=a.getElementsByTagName("head")[0]||a.documentElement;return c.innerHTML="x<style>"+b+"</style>",d.insertBefore(c.lastChild,d.firstChild)}function m(){var a=s.elements;return typeof a=="string"?a.split(" "):a}function n(a){var b=j[a[h]];return b||(b={},i++,a[h]=i,j[i]=b),b}function o(a,c,d){c||(c=b);if(k)return c.createElement(a);d||(d=n(c));var g;return d.cache[a]?g=d.cache[a].cloneNode():f.test(a)?g=(d.cache[a]=d.createElem(a)).cloneNode():g=d.createElem(a),g.canHaveChildren&&!e.test(a)&&!g.tagUrn?d.frag.appendChild(g):g}function p(a,c){a||(a=b);if(k)return a.createDocumentFragment();c=c||n(a);var d=c.frag.cloneNode(),e=0,f=m(),g=f.length;for(;e<g;e++)d.createElement(f[e]);return d}function q(a,b){b.cache||(b.cache={},b.createElem=a.createElement,b.createFrag=a.createDocumentFragment,b.frag=b.createFrag()),a.createElement=function(c){return s.shivMethods?o(c,a,b):b.createElem(c)},a.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+m().join().replace(/[\w\-]+/g,function(a){return b.createElem(a),b.frag.createElement(a),'c("'+a+'")'})+");return n}")(s,b.frag)}function r(a){a||(a=b);var c=n(a);return s.shivCSS&&!g&&!c.hasCSS&&(c.hasCSS=!!l(a,"article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")),k||q(a,c),a}var c="3.7.0",d=a.html5||{},e=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,f=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,g,h="_html5shiv",i=0,j={},k;(function(){try{var a=b.createElement("a");a.innerHTML="<xyz></xyz>",g="hidden"in a,k=a.childNodes.length==1||function(){b.createElement("a");var a=b.createDocumentFragment();return typeof a.cloneNode=="undefined"||typeof a.createDocumentFragment=="undefined"||typeof a.createElement=="undefined"}()}catch(c){g=!0,k=!0}})();var s={elements:d.elements||"abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video",version:c,shivCSS:d.shivCSS!==!1,supportsUnknownElements:k,shivMethods:d.shivMethods!==!1,type:"default",shivDocument:r,createElement:o,createDocumentFragment:p};a.html5=s,r(b)}(this,b),e._version=d,e._prefixes=n,e._domPrefixes=q,e._cssomPrefixes=p,e.mq=z,e.hasEvent=A,e.testProp=function(a){return H([a])},e.testAllProps=J,e.testStyles=y,e.prefixed=function(a,b,c){return b?J(a,b,c):J(a,"pfx")},g.className=g.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(f?" js "+v.join(" "):""),e}(this,this.document),function(a,b,c){function d(a){return"[object Function]"==o.call(a)}function e(a){return"string"==typeof a}function f(){}function g(a){return!a||"loaded"==a||"complete"==a||"uninitialized"==a}function h(){var a=p.shift();q=1,a?a.t?m(function(){("c"==a.t?B.injectCss:B.injectJs)(a.s,0,a.a,a.x,a.e,1)},0):(a(),h()):q=0}function i(a,c,d,e,f,i,j){function k(b){if(!o&&g(l.readyState)&&(u.r=o=1,!q&&h(),l.onload=l.onreadystatechange=null,b)){"img"!=a&&m(function(){t.removeChild(l)},50);for(var d in y[c])y[c].hasOwnProperty(d)&&y[c][d].onload()}}var j=j||B.errorTimeout,l=b.createElement(a),o=0,r=0,u={t:d,s:c,e:f,a:i,x:j};1===y[c]&&(r=1,y[c]=[]),"object"==a?l.data=c:(l.src=c,l.type=a),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){k.call(this,r)},p.splice(e,0,u),"img"!=a&&(r||2===y[c]?(t.insertBefore(l,s?null:n),m(k,j)):y[c].push(l))}function j(a,b,c,d,f){return q=0,b=b||"j",e(a)?i("c"==b?v:u,a,b,this.i++,c,d,f):(p.splice(this.i++,0,a),1==p.length&&h()),this}function k(){var a=B;return a.loader={load:j,i:0},a}var l=b.documentElement,m=a.setTimeout,n=b.getElementsByTagName("script")[0],o={}.toString,p=[],q=0,r="MozAppearance"in l.style,s=r&&!!b.createRange().compareNode,t=s?l:n.parentNode,l=a.opera&&"[object Opera]"==o.call(a.opera),l=!!b.attachEvent&&!l,u=r?"object":l?"script":"img",v=l?"script":u,w=Array.isArray||function(a){return"[object Array]"==o.call(a)},x=[],y={},z={timeout:function(a,b){return b.length&&(a.timeout=b[0]),a}},A,B;B=function(a){function b(a){var a=a.split("!"),b=x.length,c=a.pop(),d=a.length,c={url:c,origUrl:c,prefixes:a},e,f,g;for(f=0;f<d;f++)g=a[f].split("="),(e=z[g.shift()])&&(c=e(c,g));for(f=0;f<b;f++)c=x[f](c);return c}function g(a,e,f,g,h){var i=b(a),j=i.autoCallback;i.url.split(".").pop().split("?").shift(),i.bypass||(e&&(e=d(e)?e:e[a]||e[g]||e[a.split("/").pop().split("?")[0]]),i.instead?i.instead(a,e,f,g,h):(y[i.url]?i.noexec=!0:y[i.url]=1,f.load(i.url,i.forceCSS||!i.forceJS&&"css"==i.url.split(".").pop().split("?").shift()?"c":c,i.noexec,i.attrs,i.timeout),(d(e)||d(j))&&f.load(function(){k(),e&&e(i.origUrl,h,g),j&&j(i.origUrl,h,g),y[i.url]=2})))}function h(a,b){function c(a,c){if(a){if(e(a))c||(j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}),g(a,j,b,0,h);else if(Object(a)===a)for(n in m=function(){var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++;return b}(),a)a.hasOwnProperty(n)&&(!c&&!--m&&(d(j)?j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}:j[n]=function(a){return function(){var b=[].slice.call(arguments);a&&a.apply(this,b),l()}}(k[n])),g(a[n],j,b,n,h))}else!c&&l()}var h=!!a.test,i=a.load||a.both,j=a.callback||f,k=j,l=a.complete||f,m,n;c(h?a.yep:a.nope,!!i),i&&c(i)}var i,j,l=this.yepnope.loader;if(e(a))g(a,0,l,0);else if(w(a))for(i=0;i<a.length;i++)j=a[i],e(j)?g(j,0,l,0):w(j)?B(j):Object(j)===j&&h(j,l);else Object(a)===a&&h(a,l)},B.addPrefix=function(a,b){z[a]=b},B.addFilter=function(a){x.push(a)},B.errorTimeout=1e4,null==b.readyState&&b.addEventListener&&(b.readyState="loading",b.addEventListener("DOMContentLoaded",A=function(){b.removeEventListener("DOMContentLoaded",A,0),b.readyState="complete"},0)),a.yepnope=k(),a.yepnope.executeStack=h,a.yepnope.injectJs=function(a,c,d,e,i,j){var k=b.createElement("script"),l,o,e=e||B.errorTimeout;k.src=a;for(o in d)k.setAttribute(o,d[o]);c=j?h:c||f,k.onreadystatechange=k.onload=function(){!l&&g(k.readyState)&&(l=1,c(),k.onload=k.onreadystatechange=null)},m(function(){l||(l=1,c(1))},e),i?k.onload():n.parentNode.insertBefore(k,n)},a.yepnope.injectCss=function(a,c,d,e,g,i){var e=b.createElement("link"),j,c=i?h:c||f;e.href=a,e.rel="stylesheet",e.type="text/css";for(j in d)e.setAttribute(j,d[j]);g||(n.parentNode.insertBefore(e,n),m(c,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};


/** File: application/3.0.2/assets/desktop/js/jquery-1.8.3.min.js **/

/*! jQuery v1.8.3 jquery.com | jquery.org/license */
(function(e,t){function _(e){var t=M[e]={};return v.each(e.split(y),function(e,n){t[n]=!0}),t}function H(e,n,r){if(r===t&&e.nodeType===1){var i="data-"+n.replace(P,"-$1").toLowerCase();r=e.getAttribute(i);if(typeof r=="string"){try{r=r==="true"?!0:r==="false"?!1:r==="null"?null:+r+""===r?+r:D.test(r)?v.parseJSON(r):r}catch(s){}v.data(e,n,r)}else r=t}return r}function B(e){var t;for(t in e){if(t==="data"&&v.isEmptyObject(e[t]))continue;if(t!=="toJSON")return!1}return!0}function et(){return!1}function tt(){return!0}function ut(e){return!e||!e.parentNode||e.parentNode.nodeType===11}function at(e,t){do e=e[t];while(e&&e.nodeType!==1);return e}function ft(e,t,n){t=t||0;if(v.isFunction(t))return v.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):n==="input"&&Et.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):n==="option"?t.selected=e.defaultSelected:n==="input"||n==="textarea"?t.defaultValue=e.defaultValue:n==="script"&&t.text!==e.text&&(t.text=e.text),t.removeAttribute(v.expando)}function Mt(e){return typeof e.getElementsByTagName!="undefined"?e.getElementsByTagName("*"):typeof e.querySelectorAll!="undefined"?e.querySelectorAll("*"):[]}function _t(e){Et.test(e.type)&&(e.defaultChecked=e.checked)}function Qt(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=Jt.length;while(i--){t=Jt[i]+n;if(t in e)return t}return r}function Gt(e,t){return e=t||e,v.css(e,"display")==="none"||!v.contains(e.ownerDocument,e)}function Yt(e,t){var n,r,i=[],s=0,o=e.length;for(;s<o;s++){n=e[s];if(!n.style)continue;i[s]=v._data(n,"olddisplay"),t?(!i[s]&&n.style.display==="none"&&(n.style.display=""),n.style.display===""&&Gt(n)&&(i[s]=v._data(n,"olddisplay",nn(n.nodeName)))):(r=Dt(n,"display"),!i[s]&&r!=="none"&&v._data(n,"olddisplay",r))}for(s=0;s<o;s++){n=e[s];if(!n.style)continue;if(!t||n.style.display==="none"||n.style.display==="")n.style.display=t?i[s]||"":"none"}return e}function Zt(e,t,n){var r=Rt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function en(e,t,n,r){var i=n===(r?"border":"content")?4:t==="width"?1:0,s=0;for(;i<4;i+=2)n==="margin"&&(s+=v.css(e,n+$t[i],!0)),r?(n==="content"&&(s-=parseFloat(Dt(e,"padding"+$t[i]))||0),n!=="margin"&&(s-=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0)):(s+=parseFloat(Dt(e,"padding"+$t[i]))||0,n!=="padding"&&(s+=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0));return s}function tn(e,t,n){var r=t==="width"?e.offsetWidth:e.offsetHeight,i=!0,s=v.support.boxSizing&&v.css(e,"boxSizing")==="border-box";if(r<=0||r==null){r=Dt(e,t);if(r<0||r==null)r=e.style[t];if(Ut.test(r))return r;i=s&&(v.support.boxSizingReliable||r===e.style[t]),r=parseFloat(r)||0}return r+en(e,t,n||(s?"border":"content"),i)+"px"}function nn(e){if(Wt[e])return Wt[e];var t=v("<"+e+">").appendTo(i.body),n=t.css("display");t.remove();if(n==="none"||n===""){Pt=i.body.appendChild(Pt||v.extend(i.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!Ht||!Pt.createElement)Ht=(Pt.contentWindow||Pt.contentDocument).document,Ht.write("<!doctype html><html><body>"),Ht.close();t=Ht.body.appendChild(Ht.createElement(e)),n=Dt(t,"display"),i.body.removeChild(Pt)}return Wt[e]=n,n}function fn(e,t,n,r){var i;if(v.isArray(t))v.each(t,function(t,i){n||sn.test(e)?r(e,i):fn(e+"["+(typeof i=="object"?t:"")+"]",i,n,r)});else if(!n&&v.type(t)==="object")for(i in t)fn(e+"["+i+"]",t[i],n,r);else r(e,t)}function Cn(e){return function(t,n){typeof t!="string"&&(n=t,t="*");var r,i,s,o=t.toLowerCase().split(y),u=0,a=o.length;if(v.isFunction(n))for(;u<a;u++)r=o[u],s=/^\+/.test(r),s&&(r=r.substr(1)||"*"),i=e[r]=e[r]||[],i[s?"unshift":"push"](n)}}function kn(e,n,r,i,s,o){s=s||n.dataTypes[0],o=o||{},o[s]=!0;var u,a=e[s],f=0,l=a?a.length:0,c=e===Sn;for(;f<l&&(c||!u);f++)u=a[f](n,r,i),typeof u=="string"&&(!c||o[u]?u=t:(n.dataTypes.unshift(u),u=kn(e,n,r,i,u,o)));return(c||!u)&&!o["*"]&&(u=kn(e,n,r,i,"*",o)),u}function Ln(e,n){var r,i,s=v.ajaxSettings.flatOptions||{};for(r in n)n[r]!==t&&((s[r]?e:i||(i={}))[r]=n[r]);i&&v.extend(!0,e,i)}function An(e,n,r){var i,s,o,u,a=e.contents,f=e.dataTypes,l=e.responseFields;for(s in l)s in r&&(n[l[s]]=r[s]);while(f[0]==="*")f.shift(),i===t&&(i=e.mimeType||n.getResponseHeader("content-type"));if(i)for(s in a)if(a[s]&&a[s].test(i)){f.unshift(s);break}if(f[0]in r)o=f[0];else{for(s in r){if(!f[0]||e.converters[s+" "+f[0]]){o=s;break}u||(u=s)}o=o||u}if(o)return o!==f[0]&&f.unshift(o),r[o]}function On(e,t){var n,r,i,s,o=e.dataTypes.slice(),u=o[0],a={},f=0;e.dataFilter&&(t=e.dataFilter(t,e.dataType));if(o[1])for(n in e.converters)a[n.toLowerCase()]=e.converters[n];for(;i=o[++f];)if(i!=="*"){if(u!=="*"&&u!==i){n=a[u+" "+i]||a["* "+i];if(!n)for(r in a){s=r.split(" ");if(s[1]===i){n=a[u+" "+s[0]]||a["* "+s[0]];if(n){n===!0?n=a[r]:a[r]!==!0&&(i=s[0],o.splice(f--,0,i));break}}}if(n!==!0)if(n&&e["throws"])t=n(t);else try{t=n(t)}catch(l){return{state:"parsererror",error:n?l:"No conversion from "+u+" to "+i}}}u=i}return{state:"success",data:t}}function Fn(){try{return new e.XMLHttpRequest}catch(t){}}function In(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function $n(){return setTimeout(function(){qn=t},0),qn=v.now()}function Jn(e,t){v.each(t,function(t,n){var r=(Vn[t]||[]).concat(Vn["*"]),i=0,s=r.length;for(;i<s;i++)if(r[i].call(e,t,n))return})}function Kn(e,t,n){var r,i=0,s=0,o=Xn.length,u=v.Deferred().always(function(){delete a.elem}),a=function(){var t=qn||$n(),n=Math.max(0,f.startTime+f.duration-t),r=n/f.duration||0,i=1-r,s=0,o=f.tweens.length;for(;s<o;s++)f.tweens[s].run(i);return u.notifyWith(e,[f,i,n]),i<1&&o?n:(u.resolveWith(e,[f]),!1)},f=u.promise({elem:e,props:v.extend({},t),opts:v.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:qn||$n(),duration:n.duration,tweens:[],createTween:function(t,n,r){var i=v.Tween(e,f.opts,t,n,f.opts.specialEasing[t]||f.opts.easing);return f.tweens.push(i),i},stop:function(t){var n=0,r=t?f.tweens.length:0;for(;n<r;n++)f.tweens[n].run(1);return t?u.resolveWith(e,[f,t]):u.rejectWith(e,[f,t]),this}}),l=f.props;Qn(l,f.opts.specialEasing);for(;i<o;i++){r=Xn[i].call(f,e,l,f.opts);if(r)return r}return Jn(f,l),v.isFunction(f.opts.start)&&f.opts.start.call(e,f),v.fx.timer(v.extend(a,{anim:f,queue:f.opts.queue,elem:e})),f.progress(f.opts.progress).done(f.opts.done,f.opts.complete).fail(f.opts.fail).always(f.opts.always)}function Qn(e,t){var n,r,i,s,o;for(n in e){r=v.camelCase(n),i=t[r],s=e[n],v.isArray(s)&&(i=s[1],s=e[n]=s[0]),n!==r&&(e[r]=s,delete e[n]),o=v.cssHooks[r];if(o&&"expand"in o){s=o.expand(s),delete e[r];for(n in s)n in e||(e[n]=s[n],t[n]=i)}else t[r]=i}}function Gn(e,t,n){var r,i,s,o,u,a,f,l,c,h=this,p=e.style,d={},m=[],g=e.nodeType&&Gt(e);n.queue||(l=v._queueHooks(e,"fx"),l.unqueued==null&&(l.unqueued=0,c=l.empty.fire,l.empty.fire=function(){l.unqueued||c()}),l.unqueued++,h.always(function(){h.always(function(){l.unqueued--,v.queue(e,"fx").length||l.empty.fire()})})),e.nodeType===1&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],v.css(e,"display")==="inline"&&v.css(e,"float")==="none"&&(!v.support.inlineBlockNeedsLayout||nn(e.nodeName)==="inline"?p.display="inline-block":p.zoom=1)),n.overflow&&(p.overflow="hidden",v.support.shrinkWrapBlocks||h.done(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t){s=t[r];if(Un.exec(s)){delete t[r],a=a||s==="toggle";if(s===(g?"hide":"show"))continue;m.push(r)}}o=m.length;if(o){u=v._data(e,"fxshow")||v._data(e,"fxshow",{}),"hidden"in u&&(g=u.hidden),a&&(u.hidden=!g),g?v(e).show():h.done(function(){v(e).hide()}),h.done(function(){var t;v.removeData(e,"fxshow",!0);for(t in d)v.style(e,t,d[t])});for(r=0;r<o;r++)i=m[r],f=h.createTween(i,g?u[i]:0),d[i]=u[i]||v.style(e,i),i in u||(u[i]=f.start,g&&(f.end=f.start,f.start=i==="width"||i==="height"?1:0))}}function Yn(e,t,n,r,i){return new Yn.prototype.init(e,t,n,r,i)}function Zn(e,t){var n,r={height:e},i=0;t=t?1:0;for(;i<4;i+=2-t)n=$t[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function tr(e){return v.isWindow(e)?e:e.nodeType===9?e.defaultView||e.parentWindow:!1}var n,r,i=e.document,s=e.location,o=e.navigator,u=e.jQuery,a=e.$,f=Array.prototype.push,l=Array.prototype.slice,c=Array.prototype.indexOf,h=Object.prototype.toString,p=Object.prototype.hasOwnProperty,d=String.prototype.trim,v=function(e,t){return new v.fn.init(e,t,n)},m=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,g=/\S/,y=/\s+/,b=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,w=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,E=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,S=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,T=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,N=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,C=/^-ms-/,k=/-([\da-z])/gi,L=function(e,t){return(t+"").toUpperCase()},A=function(){i.addEventListener?(i.removeEventListener("DOMContentLoaded",A,!1),v.ready()):i.readyState==="complete"&&(i.detachEvent("onreadystatechange",A),v.ready())},O={};v.fn=v.prototype={constructor:v,init:function(e,n,r){var s,o,u,a;if(!e)return this;if(e.nodeType)return this.context=this[0]=e,this.length=1,this;if(typeof e=="string"){e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3?s=[null,e,null]:s=w.exec(e);if(s&&(s[1]||!n)){if(s[1])return n=n instanceof v?n[0]:n,a=n&&n.nodeType?n.ownerDocument||n:i,e=v.parseHTML(s[1],a,!0),E.test(s[1])&&v.isPlainObject(n)&&this.attr.call(e,n,!0),v.merge(this,e);o=i.getElementById(s[2]);if(o&&o.parentNode){if(o.id!==s[2])return r.find(e);this.length=1,this[0]=o}return this.context=i,this.selector=e,this}return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e)}return v.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),v.makeArray(e,this))},selector:"",jquery:"1.8.3",length:0,size:function(){return this.length},toArray:function(){return l.call(this)},get:function(e){return e==null?this.toArray():e<0?this[this.length+e]:this[e]},pushStack:function(e,t,n){var r=v.merge(this.constructor(),e);return r.prevObject=this,r.context=this.context,t==="find"?r.selector=this.selector+(this.selector?" ":"")+n:t&&(r.selector=this.selector+"."+t+"("+n+")"),r},each:function(e,t){return v.each(this,e,t)},ready:function(e){return v.ready.promise().done(e),this},eq:function(e){return e=+e,e===-1?this.slice(e):this.slice(e,e+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(l.apply(this,arguments),"slice",l.call(arguments).join(","))},map:function(e){return this.pushStack(v.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:[].sort,splice:[].splice},v.fn.init.prototype=v.fn,v.extend=v.fn.extend=function(){var e,n,r,i,s,o,u=arguments[0]||{},a=1,f=arguments.length,l=!1;typeof u=="boolean"&&(l=u,u=arguments[1]||{},a=2),typeof u!="object"&&!v.isFunction(u)&&(u={}),f===a&&(u=this,--a);for(;a<f;a++)if((e=arguments[a])!=null)for(n in e){r=u[n],i=e[n];if(u===i)continue;l&&i&&(v.isPlainObject(i)||(s=v.isArray(i)))?(s?(s=!1,o=r&&v.isArray(r)?r:[]):o=r&&v.isPlainObject(r)?r:{},u[n]=v.extend(l,o,i)):i!==t&&(u[n]=i)}return u},v.extend({noConflict:function(t){return e.$===v&&(e.$=a),t&&e.jQuery===v&&(e.jQuery=u),v},isReady:!1,readyWait:1,holdReady:function(e){e?v.readyWait++:v.ready(!0)},ready:function(e){if(e===!0?--v.readyWait:v.isReady)return;if(!i.body)return setTimeout(v.ready,1);v.isReady=!0;if(e!==!0&&--v.readyWait>0)return;r.resolveWith(i,[v]),v.fn.trigger&&v(i).trigger("ready").off("ready")},isFunction:function(e){return v.type(e)==="function"},isArray:Array.isArray||function(e){return v.type(e)==="array"},isWindow:function(e){return e!=null&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return e==null?String(e):O[h.call(e)]||"object"},isPlainObject:function(e){if(!e||v.type(e)!=="object"||e.nodeType||v.isWindow(e))return!1;try{if(e.constructor&&!p.call(e,"constructor")&&!p.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||p.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw new Error(e)},parseHTML:function(e,t,n){var r;return!e||typeof e!="string"?null:(typeof t=="boolean"&&(n=t,t=0),t=t||i,(r=E.exec(e))?[t.createElement(r[1])]:(r=v.buildFragment([e],t,n?null:[]),v.merge([],(r.cacheable?v.clone(r.fragment):r.fragment).childNodes)))},parseJSON:function(t){if(!t||typeof t!="string")return null;t=v.trim(t);if(e.JSON&&e.JSON.parse)return e.JSON.parse(t);if(S.test(t.replace(T,"@").replace(N,"]").replace(x,"")))return(new Function("return "+t))();v.error("Invalid JSON: "+t)},parseXML:function(n){var r,i;if(!n||typeof n!="string")return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(s){r=t}return(!r||!r.documentElement||r.getElementsByTagName("parsererror").length)&&v.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&g.test(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(C,"ms-").replace(k,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,n,r){var i,s=0,o=e.length,u=o===t||v.isFunction(e);if(r){if(u){for(i in e)if(n.apply(e[i],r)===!1)break}else for(;s<o;)if(n.apply(e[s++],r)===!1)break}else if(u){for(i in e)if(n.call(e[i],i,e[i])===!1)break}else for(;s<o;)if(n.call(e[s],s,e[s++])===!1)break;return e},trim:d&&!d.call("\ufeff\u00a0")?function(e){return e==null?"":d.call(e)}:function(e){return e==null?"":(e+"").replace(b,"")},makeArray:function(e,t){var n,r=t||[];return e!=null&&(n=v.type(e),e.length==null||n==="string"||n==="function"||n==="regexp"||v.isWindow(e)?f.call(r,e):v.merge(r,e)),r},inArray:function(e,t,n){var r;if(t){if(c)return c.call(t,e,n);r=t.length,n=n?n<0?Math.max(0,r+n):n:0;for(;n<r;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,s=0;if(typeof r=="number")for(;s<r;s++)e[i++]=n[s];else while(n[s]!==t)e[i++]=n[s++];return e.length=i,e},grep:function(e,t,n){var r,i=[],s=0,o=e.length;n=!!n;for(;s<o;s++)r=!!t(e[s],s),n!==r&&i.push(e[s]);return i},map:function(e,n,r){var i,s,o=[],u=0,a=e.length,f=e instanceof v||a!==t&&typeof a=="number"&&(a>0&&e[0]&&e[a-1]||a===0||v.isArray(e));if(f)for(;u<a;u++)i=n(e[u],u,r),i!=null&&(o[o.length]=i);else for(s in e)i=n(e[s],s,r),i!=null&&(o[o.length]=i);return o.concat.apply([],o)},guid:1,proxy:function(e,n){var r,i,s;return typeof n=="string"&&(r=e[n],n=e,e=r),v.isFunction(e)?(i=l.call(arguments,2),s=function(){return e.apply(n,i.concat(l.call(arguments)))},s.guid=e.guid=e.guid||v.guid++,s):t},access:function(e,n,r,i,s,o,u){var a,f=r==null,l=0,c=e.length;if(r&&typeof r=="object"){for(l in r)v.access(e,n,l,r[l],1,o,i);s=1}else if(i!==t){a=u===t&&v.isFunction(i),f&&(a?(a=n,n=function(e,t,n){return a.call(v(e),n)}):(n.call(e,i),n=null));if(n)for(;l<c;l++)n(e[l],r,a?i.call(e[l],l,n(e[l],r)):i,u);s=1}return s?e:f?n.call(e):c?n(e[0],r):o},now:function(){return(new Date).getTime()}}),v.ready.promise=function(t){if(!r){r=v.Deferred();if(i.readyState==="complete")setTimeout(v.ready,1);else if(i.addEventListener)i.addEventListener("DOMContentLoaded",A,!1),e.addEventListener("load",v.ready,!1);else{i.attachEvent("onreadystatechange",A),e.attachEvent("onload",v.ready);var n=!1;try{n=e.frameElement==null&&i.documentElement}catch(s){}n&&n.doScroll&&function o(){if(!v.isReady){try{n.doScroll("left")}catch(e){return setTimeout(o,50)}v.ready()}}()}}return r.promise(t)},v.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(e,t){O["[object "+t+"]"]=t.toLowerCase()}),n=v(i);var M={};v.Callbacks=function(e){e=typeof e=="string"?M[e]||_(e):v.extend({},e);var n,r,i,s,o,u,a=[],f=!e.once&&[],l=function(t){n=e.memory&&t,r=!0,u=s||0,s=0,o=a.length,i=!0;for(;a&&u<o;u++)if(a[u].apply(t[0],t[1])===!1&&e.stopOnFalse){n=!1;break}i=!1,a&&(f?f.length&&l(f.shift()):n?a=[]:c.disable())},c={add:function(){if(a){var t=a.length;(function r(t){v.each(t,function(t,n){var i=v.type(n);i==="function"?(!e.unique||!c.has(n))&&a.push(n):n&&n.length&&i!=="string"&&r(n)})})(arguments),i?o=a.length:n&&(s=t,l(n))}return this},remove:function(){return a&&v.each(arguments,function(e,t){var n;while((n=v.inArray(t,a,n))>-1)a.splice(n,1),i&&(n<=o&&o--,n<=u&&u--)}),this},has:function(e){return v.inArray(e,a)>-1},empty:function(){return a=[],this},disable:function(){return a=f=n=t,this},disabled:function(){return!a},lock:function(){return f=t,n||c.disable(),this},locked:function(){return!f},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],a&&(!r||f)&&(i?f.push(t):l(t)),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},v.extend({Deferred:function(e){var t=[["resolve","done",v.Callbacks("once memory"),"resolved"],["reject","fail",v.Callbacks("once memory"),"rejected"],["notify","progress",v.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return v.Deferred(function(n){v.each(t,function(t,r){var s=r[0],o=e[t];i[r[1]](v.isFunction(o)?function(){var e=o.apply(this,arguments);e&&v.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[s+"With"](this===i?n:this,[e])}:n[s])}),e=null}).promise()},promise:function(e){return e!=null?v.extend(e,r):r}},i={};return r.pipe=r.then,v.each(t,function(e,s){var o=s[2],u=s[3];r[s[1]]=o.add,u&&o.add(function(){n=u},t[e^1][2].disable,t[2][2].lock),i[s[0]]=o.fire,i[s[0]+"With"]=o.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=l.call(arguments),r=n.length,i=r!==1||e&&v.isFunction(e.promise)?r:0,s=i===1?e:v.Deferred(),o=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?l.call(arguments):r,n===u?s.notifyWith(t,n):--i||s.resolveWith(t,n)}},u,a,f;if(r>1){u=new Array(r),a=new Array(r),f=new Array(r);for(;t<r;t++)n[t]&&v.isFunction(n[t].promise)?n[t].promise().done(o(t,f,n)).fail(s.reject).progress(o(t,a,u)):--i}return i||s.resolveWith(f,n),s.promise()}}),v.support=function(){var t,n,r,s,o,u,a,f,l,c,h,p=i.createElement("div");p.setAttribute("className","t"),p.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=p.getElementsByTagName("*"),r=p.getElementsByTagName("a")[0];if(!n||!r||!n.length)return{};s=i.createElement("select"),o=s.appendChild(i.createElement("option")),u=p.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:r.getAttribute("href")==="/a",opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:u.value==="on",optSelected:o.selected,getSetAttribute:p.className!=="t",enctype:!!i.createElement("form").enctype,html5Clone:i.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:i.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},u.checked=!0,t.noCloneChecked=u.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!o.disabled;try{delete p.test}catch(d){t.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",h=function(){t.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick"),p.detachEvent("onclick",h)),u=i.createElement("input"),u.value="t",u.setAttribute("type","radio"),t.radioValue=u.value==="t",u.setAttribute("checked","checked"),u.setAttribute("name","t"),p.appendChild(u),a=i.createDocumentFragment(),a.appendChild(p.lastChild),t.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,t.appendChecked=u.checked,a.removeChild(u),a.appendChild(p);if(p.attachEvent)for(l in{submit:!0,change:!0,focusin:!0})f="on"+l,c=f in p,c||(p.setAttribute(f,"return;"),c=typeof p[f]=="function"),t[l+"Bubbles"]=c;return v(function(){var n,r,s,o,u="padding:0;margin:0;border:0;display:block;overflow:hidden;",a=i.getElementsByTagName("body")[0];if(!a)return;n=i.createElement("div"),n.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",a.insertBefore(n,a.firstChild),r=i.createElement("div"),n.appendChild(r),r.innerHTML="<table><tr><td></td><td>t</td></tr></table>",s=r.getElementsByTagName("td"),s[0].style.cssText="padding:0;margin:0;border:0;display:none",c=s[0].offsetHeight===0,s[0].style.display="",s[1].style.display="none",t.reliableHiddenOffsets=c&&s[0].offsetHeight===0,r.innerHTML="",r.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=r.offsetWidth===4,t.doesNotIncludeMarginInBodyOffset=a.offsetTop!==1,e.getComputedStyle&&(t.pixelPosition=(e.getComputedStyle(r,null)||{}).top!=="1%",t.boxSizingReliable=(e.getComputedStyle(r,null)||{width:"4px"}).width==="4px",o=i.createElement("div"),o.style.cssText=r.style.cssText=u,o.style.marginRight=o.style.width="0",r.style.width="1px",r.appendChild(o),t.reliableMarginRight=!parseFloat((e.getComputedStyle(o,null)||{}).marginRight)),typeof r.style.zoom!="undefined"&&(r.innerHTML="",r.style.cssText=u+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=r.offsetWidth===3,r.style.display="block",r.style.overflow="visible",r.innerHTML="<div></div>",r.firstChild.style.width="5px",t.shrinkWrapBlocks=r.offsetWidth!==3,n.style.zoom=1),a.removeChild(n),n=r=s=o=null}),a.removeChild(p),n=r=s=o=u=a=p=null,t}();var D=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,P=/([A-Z])/g;v.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(v.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?v.cache[e[v.expando]]:e[v.expando],!!e&&!B(e)},data:function(e,n,r,i){if(!v.acceptData(e))return;var s,o,u=v.expando,a=typeof n=="string",f=e.nodeType,l=f?v.cache:e,c=f?e[u]:e[u]&&u;if((!c||!l[c]||!i&&!l[c].data)&&a&&r===t)return;c||(f?e[u]=c=v.deletedIds.pop()||v.guid++:c=u),l[c]||(l[c]={},f||(l[c].toJSON=v.noop));if(typeof n=="object"||typeof n=="function")i?l[c]=v.extend(l[c],n):l[c].data=v.extend(l[c].data,n);return s=l[c],i||(s.data||(s.data={}),s=s.data),r!==t&&(s[v.camelCase(n)]=r),a?(o=s[n],o==null&&(o=s[v.camelCase(n)])):o=s,o},removeData:function(e,t,n){if(!v.acceptData(e))return;var r,i,s,o=e.nodeType,u=o?v.cache:e,a=o?e[v.expando]:v.expando;if(!u[a])return;if(t){r=n?u[a]:u[a].data;if(r){v.isArray(t)||(t in r?t=[t]:(t=v.camelCase(t),t in r?t=[t]:t=t.split(" ")));for(i=0,s=t.length;i<s;i++)delete r[t[i]];if(!(n?B:v.isEmptyObject)(r))return}}if(!n){delete u[a].data;if(!B(u[a]))return}o?v.cleanData([e],!0):v.support.deleteExpando||u!=u.window?delete u[a]:u[a]=null},_data:function(e,t,n){return v.data(e,t,n,!0)},acceptData:function(e){var t=e.nodeName&&v.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),v.fn.extend({data:function(e,n){var r,i,s,o,u,a=this[0],f=0,l=null;if(e===t){if(this.length){l=v.data(a);if(a.nodeType===1&&!v._data(a,"parsedAttrs")){s=a.attributes;for(u=s.length;f<u;f++)o=s[f].name,o.indexOf("data-")||(o=v.camelCase(o.substring(5)),H(a,o,l[o]));v._data(a,"parsedAttrs",!0)}}return l}return typeof e=="object"?this.each(function(){v.data(this,e)}):(r=e.split(".",2),r[1]=r[1]?"."+r[1]:"",i=r[1]+"!",v.access(this,function(n){if(n===t)return l=this.triggerHandler("getData"+i,[r[0]]),l===t&&a&&(l=v.data(a,e),l=H(a,e,l)),l===t&&r[1]?this.data(r[0]):l;r[1]=n,this.each(function(){var t=v(this);t.triggerHandler("setData"+i,r),v.data(this,e,n),t.triggerHandler("changeData"+i,r)})},null,n,arguments.length>1,null,!1))},removeData:function(e){return this.each(function(){v.removeData(this,e)})}}),v.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=v._data(e,t),n&&(!r||v.isArray(n)?r=v._data(e,t,v.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=v.queue(e,t),r=n.length,i=n.shift(),s=v._queueHooks(e,t),o=function(){v.dequeue(e,t)};i==="inprogress"&&(i=n.shift(),r--),i&&(t==="fx"&&n.unshift("inprogress"),delete s.stop,i.call(e,o,s)),!r&&s&&s.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return v._data(e,n)||v._data(e,n,{empty:v.Callbacks("once memory").add(function(){v.removeData(e,t+"queue",!0),v.removeData(e,n,!0)})})}}),v.fn.extend({queue:function(e,n){var r=2;return typeof e!="string"&&(n=e,e="fx",r--),arguments.length<r?v.queue(this[0],e):n===t?this:this.each(function(){var t=v.queue(this,e,n);v._queueHooks(this,e),e==="fx"&&t[0]!=="inprogress"&&v.dequeue(this,e)})},dequeue:function(e){return this.each(function(){v.dequeue(this,e)})},delay:function(e,t){return e=v.fx?v.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,s=v.Deferred(),o=this,u=this.length,a=function(){--i||s.resolveWith(o,[o])};typeof e!="string"&&(n=e,e=t),e=e||"fx";while(u--)r=v._data(o[u],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(a));return a(),s.promise(n)}});var j,F,I,q=/[\t\r\n]/g,R=/\r/g,U=/^(?:button|input)$/i,z=/^(?:button|input|object|select|textarea)$/i,W=/^a(?:rea|)$/i,X=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,V=v.support.getSetAttribute;v.fn.extend({attr:function(e,t){return v.access(this,v.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){v.removeAttr(this,e)})},prop:function(e,t){return v.access(this,v.prop,e,t,arguments.length>1)},removeProp:function(e){return e=v.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,s,o,u;if(v.isFunction(e))return this.each(function(t){v(this).addClass(e.call(this,t,this.className))});if(e&&typeof e=="string"){t=e.split(y);for(n=0,r=this.length;n<r;n++){i=this[n];if(i.nodeType===1)if(!i.className&&t.length===1)i.className=e;else{s=" "+i.className+" ";for(o=0,u=t.length;o<u;o++)s.indexOf(" "+t[o]+" ")<0&&(s+=t[o]+" ");i.className=v.trim(s)}}}return this},removeClass:function(e){var n,r,i,s,o,u,a;if(v.isFunction(e))return this.each(function(t){v(this).removeClass(e.call(this,t,this.className))});if(e&&typeof e=="string"||e===t){n=(e||"").split(y);for(u=0,a=this.length;u<a;u++){i=this[u];if(i.nodeType===1&&i.className){r=(" "+i.className+" ").replace(q," ");for(s=0,o=n.length;s<o;s++)while(r.indexOf(" "+n[s]+" ")>=0)r=r.replace(" "+n[s]+" "," ");i.className=e?v.trim(r):""}}}return this},toggleClass:function(e,t){var n=typeof e,r=typeof t=="boolean";return v.isFunction(e)?this.each(function(n){v(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(n==="string"){var i,s=0,o=v(this),u=t,a=e.split(y);while(i=a[s++])u=r?u:!o.hasClass(i),o[u?"addClass":"removeClass"](i)}else if(n==="undefined"||n==="boolean")this.className&&v._data(this,"__className__",this.className),this.className=this.className||e===!1?"":v._data(this,"__className__")||""})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;n<r;n++)if(this[n].nodeType===1&&(" "+this[n].className+" ").replace(q," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,s=this[0];if(!arguments.length){if(s)return n=v.valHooks[s.type]||v.valHooks[s.nodeName.toLowerCase()],n&&"get"in n&&(r=n.get(s,"value"))!==t?r:(r=s.value,typeof r=="string"?r.replace(R,""):r==null?"":r);return}return i=v.isFunction(e),this.each(function(r){var s,o=v(this);if(this.nodeType!==1)return;i?s=e.call(this,r,o.val()):s=e,s==null?s="":typeof s=="number"?s+="":v.isArray(s)&&(s=v.map(s,function(e){return e==null?"":e+""})),n=v.valHooks[this.type]||v.valHooks[this.nodeName.toLowerCase()];if(!n||!("set"in n)||n.set(this,s,"value")===t)this.value=s})}}),v.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,s=e.type==="select-one"||i<0,o=s?null:[],u=s?i+1:r.length,a=i<0?u:s?i:0;for(;a<u;a++){n=r[a];if((n.selected||a===i)&&(v.support.optDisabled?!n.disabled:n.getAttribute("disabled")===null)&&(!n.parentNode.disabled||!v.nodeName(n.parentNode,"optgroup"))){t=v(n).val();if(s)return t;o.push(t)}}return o},set:function(e,t){var n=v.makeArray(t);return v(e).find("option").each(function(){this.selected=v.inArray(v(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attrFn:{},attr:function(e,n,r,i){var s,o,u,a=e.nodeType;if(!e||a===3||a===8||a===2)return;if(i&&v.isFunction(v.fn[n]))return v(e)[n](r);if(typeof e.getAttribute=="undefined")return v.prop(e,n,r);u=a!==1||!v.isXMLDoc(e),u&&(n=n.toLowerCase(),o=v.attrHooks[n]||(X.test(n)?F:j));if(r!==t){if(r===null){v.removeAttr(e,n);return}return o&&"set"in o&&u&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+""),r)}return o&&"get"in o&&u&&(s=o.get(e,n))!==null?s:(s=e.getAttribute(n),s===null?t:s)},removeAttr:function(e,t){var n,r,i,s,o=0;if(t&&e.nodeType===1){r=t.split(y);for(;o<r.length;o++)i=r[o],i&&(n=v.propFix[i]||i,s=X.test(i),s||v.attr(e,i,""),e.removeAttribute(V?i:n),s&&n in e&&(e[n]=!1))}},attrHooks:{type:{set:function(e,t){if(U.test(e.nodeName)&&e.parentNode)v.error("type property can't be changed");else if(!v.support.radioValue&&t==="radio"&&v.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}},value:{get:function(e,t){return j&&v.nodeName(e,"button")?j.get(e,t):t in e?e.value:null},set:function(e,t,n){if(j&&v.nodeName(e,"button"))return j.set(e,t,n);e.value=t}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,s,o,u=e.nodeType;if(!e||u===3||u===8||u===2)return;return o=u!==1||!v.isXMLDoc(e),o&&(n=v.propFix[n]||n,s=v.propHooks[n]),r!==t?s&&"set"in s&&(i=s.set(e,r,n))!==t?i:e[n]=r:s&&"get"in s&&(i=s.get(e,n))!==null?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):z.test(e.nodeName)||W.test(e.nodeName)&&e.href?0:t}}}}),F={get:function(e,n){var r,i=v.prop(e,n);return i===!0||typeof i!="boolean"&&(r=e.getAttributeNode(n))&&r.nodeValue!==!1?n.toLowerCase():t},set:function(e,t,n){var r;return t===!1?v.removeAttr(e,n):(r=v.propFix[n]||n,r in e&&(e[r]=!0),e.setAttribute(n,n.toLowerCase())),n}},V||(I={name:!0,id:!0,coords:!0},j=v.valHooks.button={get:function(e,n){var r;return r=e.getAttributeNode(n),r&&(I[n]?r.value!=="":r.specified)?r.value:t},set:function(e,t,n){var r=e.getAttributeNode(n);return r||(r=i.createAttribute(n),e.setAttributeNode(r)),r.value=t+""}},v.each(["width","height"],function(e,t){v.attrHooks[t]=v.extend(v.attrHooks[t],{set:function(e,n){if(n==="")return e.setAttribute(t,"auto"),n}})}),v.attrHooks.contenteditable={get:j.get,set:function(e,t,n){t===""&&(t="false"),j.set(e,t,n)}}),v.support.hrefNormalized||v.each(["href","src","width","height"],function(e,n){v.attrHooks[n]=v.extend(v.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return r===null?t:r}})}),v.support.style||(v.attrHooks.style={get:function(e){return e.style.cssText.toLowerCase()||t},set:function(e,t){return e.style.cssText=t+""}}),v.support.optSelected||(v.propHooks.selected=v.extend(v.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),v.support.enctype||(v.propFix.enctype="encoding"),v.support.checkOn||v.each(["radio","checkbox"],function(){v.valHooks[this]={get:function(e){return e.getAttribute("value")===null?"on":e.value}}}),v.each(["radio","checkbox"],function(){v.valHooks[this]=v.extend(v.valHooks[this],{set:function(e,t){if(v.isArray(t))return e.checked=v.inArray(v(e).val(),t)>=0}})});var $=/^(?:textarea|input|select)$/i,J=/^([^\.]*|)(?:\.(.+)|)$/,K=/(?:^|\s)hover(\.\S+|)\b/,Q=/^key/,G=/^(?:mouse|contextmenu)|click/,Y=/^(?:focusinfocus|focusoutblur)$/,Z=function(e){return v.event.special.hover?e:e.replace(K,"mouseenter$1 mouseleave$1")};v.event={add:function(e,n,r,i,s){var o,u,a,f,l,c,h,p,d,m,g;if(e.nodeType===3||e.nodeType===8||!n||!r||!(o=v._data(e)))return;r.handler&&(d=r,r=d.handler,s=d.selector),r.guid||(r.guid=v.guid++),a=o.events,a||(o.events=a={}),u=o.handle,u||(o.handle=u=function(e){return typeof v=="undefined"||!!e&&v.event.triggered===e.type?t:v.event.dispatch.apply(u.elem,arguments)},u.elem=e),n=v.trim(Z(n)).split(" ");for(f=0;f<n.length;f++){l=J.exec(n[f])||[],c=l[1],h=(l[2]||"").split(".").sort(),g=v.event.special[c]||{},c=(s?g.delegateType:g.bindType)||c,g=v.event.special[c]||{},p=v.extend({type:c,origType:l[1],data:i,handler:r,guid:r.guid,selector:s,needsContext:s&&v.expr.match.needsContext.test(s),namespace:h.join(".")},d),m=a[c];if(!m){m=a[c]=[],m.delegateCount=0;if(!g.setup||g.setup.call(e,i,h,u)===!1)e.addEventListener?e.addEventListener(c,u,!1):e.attachEvent&&e.attachEvent("on"+c,u)}g.add&&(g.add.call(e,p),p.handler.guid||(p.handler.guid=r.guid)),s?m.splice(m.delegateCount++,0,p):m.push(p),v.event.global[c]=!0}e=null},global:{},remove:function(e,t,n,r,i){var s,o,u,a,f,l,c,h,p,d,m,g=v.hasData(e)&&v._data(e);if(!g||!(h=g.events))return;t=v.trim(Z(t||"")).split(" ");for(s=0;s<t.length;s++){o=J.exec(t[s])||[],u=a=o[1],f=o[2];if(!u){for(u in h)v.event.remove(e,u+t[s],n,r,!0);continue}p=v.event.special[u]||{},u=(r?p.delegateType:p.bindType)||u,d=h[u]||[],l=d.length,f=f?new RegExp("(^|\\.)"+f.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(c=0;c<d.length;c++)m=d[c],(i||a===m.origType)&&(!n||n.guid===m.guid)&&(!f||f.test(m.namespace))&&(!r||r===m.selector||r==="**"&&m.selector)&&(d.splice(c--,1),m.selector&&d.delegateCount--,p.remove&&p.remove.call(e,m));d.length===0&&l!==d.length&&((!p.teardown||p.teardown.call(e,f,g.handle)===!1)&&v.removeEvent(e,u,g.handle),delete h[u])}v.isEmptyObject(h)&&(delete g.handle,v.removeData(e,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(n,r,s,o){if(!s||s.nodeType!==3&&s.nodeType!==8){var u,a,f,l,c,h,p,d,m,g,y=n.type||n,b=[];if(Y.test(y+v.event.triggered))return;y.indexOf("!")>=0&&(y=y.slice(0,-1),a=!0),y.indexOf(".")>=0&&(b=y.split("."),y=b.shift(),b.sort());if((!s||v.event.customEvent[y])&&!v.event.global[y])return;n=typeof n=="object"?n[v.expando]?n:new v.Event(y,n):new v.Event(y),n.type=y,n.isTrigger=!0,n.exclusive=a,n.namespace=b.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,h=y.indexOf(":")<0?"on"+y:"";if(!s){u=v.cache;for(f in u)u[f].events&&u[f].events[y]&&v.event.trigger(n,r,u[f].handle.elem,!0);return}n.result=t,n.target||(n.target=s),r=r!=null?v.makeArray(r):[],r.unshift(n),p=v.event.special[y]||{};if(p.trigger&&p.trigger.apply(s,r)===!1)return;m=[[s,p.bindType||y]];if(!o&&!p.noBubble&&!v.isWindow(s)){g=p.delegateType||y,l=Y.test(g+y)?s:s.parentNode;for(c=s;l;l=l.parentNode)m.push([l,g]),c=l;c===(s.ownerDocument||i)&&m.push([c.defaultView||c.parentWindow||e,g])}for(f=0;f<m.length&&!n.isPropagationStopped();f++)l=m[f][0],n.type=m[f][1],d=(v._data(l,"events")||{})[n.type]&&v._data(l,"handle"),d&&d.apply(l,r),d=h&&l[h],d&&v.acceptData(l)&&d.apply&&d.apply(l,r)===!1&&n.preventDefault();return n.type=y,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(s.ownerDocument,r)===!1)&&(y!=="click"||!v.nodeName(s,"a"))&&v.acceptData(s)&&h&&s[y]&&(y!=="focus"&&y!=="blur"||n.target.offsetWidth!==0)&&!v.isWindow(s)&&(c=s[h],c&&(s[h]=null),v.event.triggered=y,s[y](),v.event.triggered=t,c&&(s[h]=c)),n.result}return},dispatch:function(n){n=v.event.fix(n||e.event);var r,i,s,o,u,a,f,c,h,p,d=(v._data(this,"events")||{})[n.type]||[],m=d.delegateCount,g=l.call(arguments),y=!n.exclusive&&!n.namespace,b=v.event.special[n.type]||{},w=[];g[0]=n,n.delegateTarget=this;if(b.preDispatch&&b.preDispatch.call(this,n)===!1)return;if(m&&(!n.button||n.type!=="click"))for(s=n.target;s!=this;s=s.parentNode||this)if(s.disabled!==!0||n.type!=="click"){u={},f=[];for(r=0;r<m;r++)c=d[r],h=c.selector,u[h]===t&&(u[h]=c.needsContext?v(h,this).index(s)>=0:v.find(h,this,null,[s]).length),u[h]&&f.push(c);f.length&&w.push({elem:s,matches:f})}d.length>m&&w.push({elem:this,matches:d.slice(m)});for(r=0;r<w.length&&!n.isPropagationStopped();r++){a=w[r],n.currentTarget=a.elem;for(i=0;i<a.matches.length&&!n.isImmediatePropagationStopped();i++){c=a.matches[i];if(y||!n.namespace&&!c.namespace||n.namespace_re&&n.namespace_re.test(c.namespace))n.data=c.data,n.handleObj=c,o=((v.event.special[c.origType]||{}).handle||c.handler).apply(a.elem,g),o!==t&&(n.result=o,o===!1&&(n.preventDefault(),n.stopPropagation()))}}return b.postDispatch&&b.postDispatch.call(this,n),n.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return e.which==null&&(e.which=t.charCode!=null?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,s,o,u=n.button,a=n.fromElement;return e.pageX==null&&n.clientX!=null&&(r=e.target.ownerDocument||i,s=r.documentElement,o=r.body,e.pageX=n.clientX+(s&&s.scrollLeft||o&&o.scrollLeft||0)-(s&&s.clientLeft||o&&o.clientLeft||0),e.pageY=n.clientY+(s&&s.scrollTop||o&&o.scrollTop||0)-(s&&s.clientTop||o&&o.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?n.toElement:a),!e.which&&u!==t&&(e.which=u&1?1:u&2?3:u&4?2:0),e}},fix:function(e){if(e[v.expando])return e;var t,n,r=e,s=v.event.fixHooks[e.type]||{},o=s.props?this.props.concat(s.props):this.props;e=v.Event(r);for(t=o.length;t;)n=o[--t],e[n]=r[n];return e.target||(e.target=r.srcElement||i),e.target.nodeType===3&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,r):e},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(e,t,n){v.isWindow(this)&&(this.onbeforeunload=n)},teardown:function(e,t){this.onbeforeunload===t&&(this.onbeforeunload=null)}}},simulate:function(e,t,n,r){var i=v.extend(new v.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?v.event.trigger(i,null,t):v.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},v.event.handle=v.event.dispatch,v.removeEvent=i.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]=="undefined"&&(e[r]=null),e.detachEvent(r,n))},v.Event=function(e,t){if(!(this instanceof v.Event))return new v.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?tt:et):this.type=e,t&&v.extend(this,t),this.timeStamp=e&&e.timeStamp||v.now(),this[v.expando]=!0},v.Event.prototype={preventDefault:function(){this.isDefaultPrevented=tt;var e=this.originalEvent;if(!e)return;e.preventDefault?e.preventDefault():e.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=tt;var e=this.originalEvent;if(!e)return;e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=tt,this.stopPropagation()},isDefaultPrevented:et,isPropagationStopped:et,isImmediatePropagationStopped:et},v.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){v.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,s=e.handleObj,o=s.selector;if(!i||i!==r&&!v.contains(r,i))e.type=s.origType,n=s.handler.apply(this,arguments),e.type=t;return n}}}),v.support.submitBubbles||(v.event.special.submit={setup:function(){if(v.nodeName(this,"form"))return!1;v.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=v.nodeName(n,"input")||v.nodeName(n,"button")?n.form:t;r&&!v._data(r,"_submit_attached")&&(v.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),v._data(r,"_submit_attached",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&v.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){if(v.nodeName(this,"form"))return!1;v.event.remove(this,"._submit")}}),v.support.changeBubbles||(v.event.special.change={setup:function(){if($.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")v.event.add(this,"propertychange._change",function(e){e.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),v.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),v.event.simulate("change",this,e,!0)});return!1}v.event.add(this,"beforeactivate._change",function(e){var t=e.target;$.test(t.nodeName)&&!v._data(t,"_change_attached")&&(v.event.add(t,"change._change",function(e){this.parentNode&&!e.isSimulated&&!e.isTrigger&&v.event.simulate("change",this.parentNode,e,!0)}),v._data(t,"_change_attached",!0))})},handle:function(e){var t=e.target;if(this!==t||e.isSimulated||e.isTrigger||t.type!=="radio"&&t.type!=="checkbox")return e.handleObj.handler.apply(this,arguments)},teardown:function(){return v.event.remove(this,"._change"),!$.test(this.nodeName)}}),v.support.focusinBubbles||v.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){v.event.simulate(t,e.target,v.event.fix(e),!0)};v.event.special[t]={setup:function(){n++===0&&i.addEventListener(e,r,!0)},teardown:function(){--n===0&&i.removeEventListener(e,r,!0)}}}),v.fn.extend({on:function(e,n,r,i,s){var o,u;if(typeof e=="object"){typeof n!="string"&&(r=r||n,n=t);for(u in e)this.on(u,n,r,e[u],s);return this}r==null&&i==null?(i=n,r=n=t):i==null&&(typeof n=="string"?(i=r,r=t):(i=r,r=n,n=t));if(i===!1)i=et;else if(!i)return this;return s===1&&(o=i,i=function(e){return v().off(e),o.apply(this,arguments)},i.guid=o.guid||(o.guid=v.guid++)),this.each(function(){v.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,s;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,v(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if(typeof e=="object"){for(s in e)this.off(s,n,e[s]);return this}if(n===!1||typeof n=="function")r=n,n=t;return r===!1&&(r=et),this.each(function(){v.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},live:function(e,t,n){return v(this.context).on(e,this.selector,t,n),this},die:function(e,t){return v(this.context).off(e,this.selector||"**",t),this},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return arguments.length===1?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){v.event.trigger(e,t,this)})},triggerHandler:function(e,t){if(this[0])return v.event.trigger(e,t,this[0],!0)},toggle:function(e){var t=arguments,n=e.guid||v.guid++,r=0,i=function(n){var i=(v._data(this,"lastToggle"+e.guid)||0)%r;return v._data(this,"lastToggle"+e.guid,i+1),n.preventDefault(),t[i].apply(this,arguments)||!1};i.guid=n;while(r<t.length)t[r++].guid=n;return this.click(i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),v.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){v.fn[t]=function(e,n){return n==null&&(n=e,e=null),arguments.length>0?this.on(t,null,e,n):this.trigger(t)},Q.test(t)&&(v.event.fixHooks[t]=v.event.keyHooks),G.test(t)&&(v.event.fixHooks[t]=v.event.mouseHooks)}),function(e,t){function nt(e,t,n,r){n=n||[],t=t||g;var i,s,a,f,l=t.nodeType;if(!e||typeof e!="string")return n;if(l!==1&&l!==9)return[];a=o(t);if(!a&&!r)if(i=R.exec(e))if(f=i[1]){if(l===9){s=t.getElementById(f);if(!s||!s.parentNode)return n;if(s.id===f)return n.push(s),n}else if(t.ownerDocument&&(s=t.ownerDocument.getElementById(f))&&u(t,s)&&s.id===f)return n.push(s),n}else{if(i[2])return S.apply(n,x.call(t.getElementsByTagName(e),0)),n;if((f=i[3])&&Z&&t.getElementsByClassName)return S.apply(n,x.call(t.getElementsByClassName(f),0)),n}return vt(e.replace(j,"$1"),t,n,r,a)}function rt(e){return function(t){var n=t.nodeName.toLowerCase();return n==="input"&&t.type===e}}function it(e){return function(t){var n=t.nodeName.toLowerCase();return(n==="input"||n==="button")&&t.type===e}}function st(e){return N(function(t){return t=+t,N(function(n,r){var i,s=e([],n.length,t),o=s.length;while(o--)n[i=s[o]]&&(n[i]=!(r[i]=n[i]))})})}function ot(e,t,n){if(e===t)return n;var r=e.nextSibling;while(r){if(r===t)return-1;r=r.nextSibling}return 1}function ut(e,t){var n,r,s,o,u,a,f,l=L[d][e+" "];if(l)return t?0:l.slice(0);u=e,a=[],f=i.preFilter;while(u){if(!n||(r=F.exec(u)))r&&(u=u.slice(r[0].length)||u),a.push(s=[]);n=!1;if(r=I.exec(u))s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=r[0].replace(j," ");for(o in i.filter)(r=J[o].exec(u))&&(!f[o]||(r=f[o](r)))&&(s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=o,n.matches=r);if(!n)break}return t?u.length:u?nt.error(e):L(e,a).slice(0)}function at(e,t,r){var i=t.dir,s=r&&t.dir==="parentNode",o=w++;return t.first?function(t,n,r){while(t=t[i])if(s||t.nodeType===1)return e(t,n,r)}:function(t,r,u){if(!u){var a,f=b+" "+o+" ",l=f+n;while(t=t[i])if(s||t.nodeType===1){if((a=t[d])===l)return t.sizset;if(typeof a=="string"&&a.indexOf(f)===0){if(t.sizset)return t}else{t[d]=l;if(e(t,r,u))return t.sizset=!0,t;t.sizset=!1}}}else while(t=t[i])if(s||t.nodeType===1)if(e(t,r,u))return t}}function ft(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function lt(e,t,n,r,i){var s,o=[],u=0,a=e.length,f=t!=null;for(;u<a;u++)if(s=e[u])if(!n||n(s,r,i))o.push(s),f&&t.push(u);return o}function ct(e,t,n,r,i,s){return r&&!r[d]&&(r=ct(r)),i&&!i[d]&&(i=ct(i,s)),N(function(s,o,u,a){var f,l,c,h=[],p=[],d=o.length,v=s||dt(t||"*",u.nodeType?[u]:u,[]),m=e&&(s||!t)?lt(v,h,e,u,a):v,g=n?i||(s?e:d||r)?[]:o:m;n&&n(m,g,u,a);if(r){f=lt(g,p),r(f,[],u,a),l=f.length;while(l--)if(c=f[l])g[p[l]]=!(m[p[l]]=c)}if(s){if(i||e){if(i){f=[],l=g.length;while(l--)(c=g[l])&&f.push(m[l]=c);i(null,g=[],f,a)}l=g.length;while(l--)(c=g[l])&&(f=i?T.call(s,c):h[l])>-1&&(s[f]=!(o[f]=c))}}else g=lt(g===o?g.splice(d,g.length):g),i?i(null,o,g,a):S.apply(o,g)})}function ht(e){var t,n,r,s=e.length,o=i.relative[e[0].type],u=o||i.relative[" "],a=o?1:0,f=at(function(e){return e===t},u,!0),l=at(function(e){return T.call(t,e)>-1},u,!0),h=[function(e,n,r){return!o&&(r||n!==c)||((t=n).nodeType?f(e,n,r):l(e,n,r))}];for(;a<s;a++)if(n=i.relative[e[a].type])h=[at(ft(h),n)];else{n=i.filter[e[a].type].apply(null,e[a].matches);if(n[d]){r=++a;for(;r<s;r++)if(i.relative[e[r].type])break;return ct(a>1&&ft(h),a>1&&e.slice(0,a-1).join("").replace(j,"$1"),n,a<r&&ht(e.slice(a,r)),r<s&&ht(e=e.slice(r)),r<s&&e.join(""))}h.push(n)}return ft(h)}function pt(e,t){var r=t.length>0,s=e.length>0,o=function(u,a,f,l,h){var p,d,v,m=[],y=0,w="0",x=u&&[],T=h!=null,N=c,C=u||s&&i.find.TAG("*",h&&a.parentNode||a),k=b+=N==null?1:Math.E;T&&(c=a!==g&&a,n=o.el);for(;(p=C[w])!=null;w++){if(s&&p){for(d=0;v=e[d];d++)if(v(p,a,f)){l.push(p);break}T&&(b=k,n=++o.el)}r&&((p=!v&&p)&&y--,u&&x.push(p))}y+=w;if(r&&w!==y){for(d=0;v=t[d];d++)v(x,m,a,f);if(u){if(y>0)while(w--)!x[w]&&!m[w]&&(m[w]=E.call(l));m=lt(m)}S.apply(l,m),T&&!u&&m.length>0&&y+t.length>1&&nt.uniqueSort(l)}return T&&(b=k,c=N),x};return o.el=0,r?N(o):o}function dt(e,t,n){var r=0,i=t.length;for(;r<i;r++)nt(e,t[r],n);return n}function vt(e,t,n,r,s){var o,u,f,l,c,h=ut(e),p=h.length;if(!r&&h.length===1){u=h[0]=h[0].slice(0);if(u.length>2&&(f=u[0]).type==="ID"&&t.nodeType===9&&!s&&i.relative[u[1].type]){t=i.find.ID(f.matches[0].replace($,""),t,s)[0];if(!t)return n;e=e.slice(u.shift().length)}for(o=J.POS.test(e)?-1:u.length-1;o>=0;o--){f=u[o];if(i.relative[l=f.type])break;if(c=i.find[l])if(r=c(f.matches[0].replace($,""),z.test(u[0].type)&&t.parentNode||t,s)){u.splice(o,1),e=r.length&&u.join("");if(!e)return S.apply(n,x.call(r,0)),n;break}}}return a(e,h)(r,t,s,n,z.test(e)),n}function mt(){}var n,r,i,s,o,u,a,f,l,c,h=!0,p="undefined",d=("sizcache"+Math.random()).replace(".",""),m=String,g=e.document,y=g.documentElement,b=0,w=0,E=[].pop,S=[].push,x=[].slice,T=[].indexOf||function(e){var t=0,n=this.length;for(;t<n;t++)if(this[t]===e)return t;return-1},N=function(e,t){return e[d]=t==null||t,e},C=function(){var e={},t=[];return N(function(n,r){return t.push(n)>i.cacheLength&&delete e[t.shift()],e[n+" "]=r},e)},k=C(),L=C(),A=C(),O="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",_=M.replace("w","w#"),D="([*^$|!~]?=)",P="\\["+O+"*("+M+")"+O+"*(?:"+D+O+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+_+")|)|)"+O+"*\\]",H=":("+M+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+P+")|[^:]|\\\\.)*|.*))\\)|)",B=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+O+"*((?:-\\d)?\\d*)"+O+"*\\)|)(?=[^-]|$)",j=new RegExp("^"+O+"+|((?:^|[^\\\\])(?:\\\\.)*)"+O+"+$","g"),F=new RegExp("^"+O+"*,"+O+"*"),I=new RegExp("^"+O+"*([\\x20\\t\\r\\n\\f>+~])"+O+"*"),q=new RegExp(H),R=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,U=/^:not/,z=/[\x20\t\r\n\f]*[+~]/,W=/:not\($/,X=/h\d/i,V=/input|select|textarea|button/i,$=/\\(?!\\)/g,J={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),NAME:new RegExp("^\\[name=['\"]?("+M+")['\"]?\\]"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+H),POS:new RegExp(B,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+O+"*(even|odd|(([+-]|)(\\d*)n|)"+O+"*(?:([+-]|)"+O+"*(\\d+)|))"+O+"*\\)|)","i"),needsContext:new RegExp("^"+O+"*[>+~]|"+B,"i")},K=function(e){var t=g.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}},Q=K(function(e){return e.appendChild(g.createComment("")),!e.getElementsByTagName("*").length}),G=K(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==p&&e.firstChild.getAttribute("href")==="#"}),Y=K(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return t!=="boolean"&&t!=="string"}),Z=K(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!e.getElementsByClassName||!e.getElementsByClassName("e").length?!1:(e.lastChild.className="e",e.getElementsByClassName("e").length===2)}),et=K(function(e){e.id=d+0,e.innerHTML="<a name='"+d+"'></a><div name='"+d+"'></div>",y.insertBefore(e,y.firstChild);var t=g.getElementsByName&&g.getElementsByName(d).length===2+g.getElementsByName(d+0).length;return r=!g.getElementById(d),y.removeChild(e),t});try{x.call(y.childNodes,0)[0].nodeType}catch(tt){x=function(e){var t,n=[];for(;t=this[e];e++)n.push(t);return n}}nt.matches=function(e,t){return nt(e,null,null,t)},nt.matchesSelector=function(e,t){return nt(t,null,null,[e]).length>0},s=nt.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(i===1||i===9||i===11){if(typeof e.textContent=="string")return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=s(e)}else if(i===3||i===4)return e.nodeValue}else for(;t=e[r];r++)n+=s(t);return n},o=nt.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?t.nodeName!=="HTML":!1},u=nt.contains=y.contains?function(e,t){var n=e.nodeType===9?e.documentElement:e,r=t&&t.parentNode;return e===r||!!(r&&r.nodeType===1&&n.contains&&n.contains(r))}:y.compareDocumentPosition?function(e,t){return t&&!!(e.compareDocumentPosition(t)&16)}:function(e,t){while(t=t.parentNode)if(t===e)return!0;return!1},nt.attr=function(e,t){var n,r=o(e);return r||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):r||Y?e.getAttribute(t):(n=e.getAttributeNode(t),n?typeof e[t]=="boolean"?e[t]?t:null:n.specified?n.value:null:null)},i=nt.selectors={cacheLength:50,createPseudo:N,match:J,attrHandle:G?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},find:{ID:r?function(e,t,n){if(typeof t.getElementById!==p&&!n){var r=t.getElementById(e);return r&&r.parentNode?[r]:[]}}:function(e,n,r){if(typeof n.getElementById!==p&&!r){var i=n.getElementById(e);return i?i.id===e||typeof i.getAttributeNode!==p&&i.getAttributeNode("id").value===e?[i]:t:[]}},TAG:Q?function(e,t){if(typeof t.getElementsByTagName!==p)return t.getElementsByTagName(e)}:function(e,t){var n=t.getElementsByTagName(e);if(e==="*"){var r,i=[],s=0;for(;r=n[s];s++)r.nodeType===1&&i.push(r);return i}return n},NAME:et&&function(e,t){if(typeof t.getElementsByName!==p)return t.getElementsByName(name)},CLASS:Z&&function(e,t,n){if(typeof t.getElementsByClassName!==p&&!n)return t.getElementsByClassName(e)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace($,""),e[3]=(e[4]||e[5]||"").replace($,""),e[2]==="~="&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),e[1]==="nth"?(e[2]||nt.error(e[0]),e[3]=+(e[3]?e[4]+(e[5]||1):2*(e[2]==="even"||e[2]==="odd")),e[4]=+(e[6]+e[7]||e[2]==="odd")):e[2]&&nt.error(e[0]),e},PSEUDO:function(e){var t,n;if(J.CHILD.test(e[0]))return null;if(e[3])e[2]=e[3];else if(t=e[4])q.test(t)&&(n=ut(t,!0))&&(n=t.indexOf(")",t.length-n)-t.length)&&(t=t.slice(0,n),e[0]=e[0].slice(0,n)),e[2]=t;return e.slice(0,3)}},filter:{ID:r?function(e){return e=e.replace($,""),function(t){return t.getAttribute("id")===e}}:function(e){return e=e.replace($,""),function(t){var n=typeof t.getAttributeNode!==p&&t.getAttributeNode("id");return n&&n.value===e}},TAG:function(e){return e==="*"?function(){return!0}:(e=e.replace($,"").toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[d][e+" "];return t||(t=new RegExp("(^|"+O+")"+e+"("+O+"|$)"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==p&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r,i){var s=nt.attr(r,e);return s==null?t==="!=":t?(s+="",t==="="?s===n:t==="!="?s!==n:t==="^="?n&&s.indexOf(n)===0:t==="*="?n&&s.indexOf(n)>-1:t==="$="?n&&s.substr(s.length-n.length)===n:t==="~="?(" "+s+" ").indexOf(n)>-1:t==="|="?s===n||s.substr(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r){return e==="nth"?function(e){var t,i,s=e.parentNode;if(n===1&&r===0)return!0;if(s){i=0;for(t=s.firstChild;t;t=t.nextSibling)if(t.nodeType===1){i++;if(e===t)break}}return i-=r,i===n||i%n===0&&i/n>=0}:function(t){var n=t;switch(e){case"only":case"first":while(n=n.previousSibling)if(n.nodeType===1)return!1;if(e==="first")return!0;n=t;case"last":while(n=n.nextSibling)if(n.nodeType===1)return!1;return!0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||nt.error("unsupported pseudo: "+e);return r[d]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?N(function(e,n){var i,s=r(e,t),o=s.length;while(o--)i=T.call(e,s[o]),e[i]=!(n[i]=s[o])}):function(e){return r(e,0,n)}):r}},pseudos:{not:N(function(e){var t=[],n=[],r=a(e.replace(j,"$1"));return r[d]?N(function(e,t,n,i){var s,o=r(e,null,i,[]),u=e.length;while(u--)if(s=o[u])e[u]=!(t[u]=s)}):function(e,i,s){return t[0]=e,r(t,null,s,n),!n.pop()}}),has:N(function(e){return function(t){return nt(e,t).length>0}}),contains:N(function(e){return function(t){return(t.textContent||t.innerText||s(t)).indexOf(e)>-1}}),enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&!!e.checked||t==="option"&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},parent:function(e){return!i.pseudos.empty(e)},empty:function(e){var t;e=e.firstChild;while(e){if(e.nodeName>"@"||(t=e.nodeType)===3||t===4)return!1;e=e.nextSibling}return!0},header:function(e){return X.test(e.nodeName)},text:function(e){var t,n;return e.nodeName.toLowerCase()==="input"&&(t=e.type)==="text"&&((n=e.getAttribute("type"))==null||n.toLowerCase()===t)},radio:rt("radio"),checkbox:rt("checkbox"),file:rt("file"),password:rt("password"),image:rt("image"),submit:it("submit"),reset:it("reset"),button:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&e.type==="button"||t==="button"},input:function(e){return V.test(e.nodeName)},focus:function(e){var t=e.ownerDocument;return e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},active:function(e){return e===e.ownerDocument.activeElement},first:st(function(){return[0]}),last:st(function(e,t){return[t-1]}),eq:st(function(e,t,n){return[n<0?n+t:n]}),even:st(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:st(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:st(function(e,t,n){for(var r=n<0?n+t:n;--r>=0;)e.push(r);return e}),gt:st(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}},f=y.compareDocumentPosition?function(e,t){return e===t?(l=!0,0):(!e.compareDocumentPosition||!t.compareDocumentPosition?e.compareDocumentPosition:e.compareDocumentPosition(t)&4)?-1:1}:function(e,t){if(e===t)return l=!0,0;if(e.sourceIndex&&t.sourceIndex)return e.sourceIndex-t.sourceIndex;var n,r,i=[],s=[],o=e.parentNode,u=t.parentNode,a=o;if(o===u)return ot(e,t);if(!o)return-1;if(!u)return 1;while(a)i.unshift(a),a=a.parentNode;a=u;while(a)s.unshift(a),a=a.parentNode;n=i.length,r=s.length;for(var f=0;f<n&&f<r;f++)if(i[f]!==s[f])return ot(i[f],s[f]);return f===n?ot(e,s[f],-1):ot(i[f],t,1)},[0,0].sort(f),h=!l,nt.uniqueSort=function(e){var t,n=[],r=1,i=0;l=h,e.sort(f);if(l){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e},nt.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},a=nt.compile=function(e,t){var n,r=[],i=[],s=A[d][e+" "];if(!s){t||(t=ut(e)),n=t.length;while(n--)s=ht(t[n]),s[d]?r.push(s):i.push(s);s=A(e,pt(i,r))}return s},g.querySelectorAll&&function(){var e,t=vt,n=/'|\\/g,r=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,i=[":focus"],s=[":active"],u=y.matchesSelector||y.mozMatchesSelector||y.webkitMatchesSelector||y.oMatchesSelector||y.msMatchesSelector;K(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||i.push("\\["+O+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||i.push(":checked")}),K(function(e){e.innerHTML="<p test=''></p>",e.querySelectorAll("[test^='']").length&&i.push("[*^$]="+O+"*(?:\"\"|'')"),e.innerHTML="<input type='hidden'/>",e.querySelectorAll(":enabled").length||i.push(":enabled",":disabled")}),i=new RegExp(i.join("|")),vt=function(e,r,s,o,u){if(!o&&!u&&!i.test(e)){var a,f,l=!0,c=d,h=r,p=r.nodeType===9&&e;if(r.nodeType===1&&r.nodeName.toLowerCase()!=="object"){a=ut(e),(l=r.getAttribute("id"))?c=l.replace(n,"\\$&"):r.setAttribute("id",c),c="[id='"+c+"'] ",f=a.length;while(f--)a[f]=c+a[f].join("");h=z.test(e)&&r.parentNode||r,p=a.join(",")}if(p)try{return S.apply(s,x.call(h.querySelectorAll(p),0)),s}catch(v){}finally{l||r.removeAttribute("id")}}return t(e,r,s,o,u)},u&&(K(function(t){e=u.call(t,"div");try{u.call(t,"[test!='']:sizzle"),s.push("!=",H)}catch(n){}}),s=new RegExp(s.join("|")),nt.matchesSelector=function(t,n){n=n.replace(r,"='$1']");if(!o(t)&&!s.test(n)&&!i.test(n))try{var a=u.call(t,n);if(a||e||t.document&&t.document.nodeType!==11)return a}catch(f){}return nt(n,null,null,[t]).length>0})}(),i.pseudos.nth=i.pseudos.eq,i.filters=mt.prototype=i.pseudos,i.setFilters=new mt,nt.attr=v.attr,v.find=nt,v.expr=nt.selectors,v.expr[":"]=v.expr.pseudos,v.unique=nt.uniqueSort,v.text=nt.getText,v.isXMLDoc=nt.isXML,v.contains=nt.contains}(e);var nt=/Until$/,rt=/^(?:parents|prev(?:Until|All))/,it=/^.[^:#\[\.,]*$/,st=v.expr.match.needsContext,ot={children:!0,contents:!0,next:!0,prev:!0};v.fn.extend({find:function(e){var t,n,r,i,s,o,u=this;if(typeof e!="string")return v(e).filter(function(){for(t=0,n=u.length;t<n;t++)if(v.contains(u[t],this))return!0});o=this.pushStack("","find",e);for(t=0,n=this.length;t<n;t++){r=o.length,v.find(e,this[t],o);if(t>0)for(i=r;i<o.length;i++)for(s=0;s<r;s++)if(o[s]===o[i]){o.splice(i--,1);break}}return o},has:function(e){var t,n=v(e,this),r=n.length;return this.filter(function(){for(t=0;t<r;t++)if(v.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1),"not",e)},filter:function(e){return this.pushStack(ft(this,e,!0),"filter",e)},is:function(e){return!!e&&(typeof e=="string"?st.test(e)?v(e,this.context).index(this[0])>=0:v.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,s=[],o=st.test(e)||typeof e!="string"?v(e,t||this.context):0;for(;r<i;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&n.nodeType!==11){if(o?o.index(n)>-1:v.find.matchesSelector(n,e)){s.push(n);break}n=n.parentNode}}return s=s.length>1?v.unique(s):s,this.pushStack(s,"closest",e)},index:function(e){return e?typeof e=="string"?v.inArray(this[0],v(e)):v.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(e,t){var n=typeof e=="string"?v(e,t):v.makeArray(e&&e.nodeType?[e]:e),r=v.merge(this.get(),n);return this.pushStack(ut(n[0])||ut(r[0])?r:v.unique(r))},addBack:function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}}),v.fn.andSelf=v.fn.addBack,v.each({parent:function(e){var t=e.parentNode;return t&&t.nodeType!==11?t:null},parents:function(e){return v.dir(e,"parentNode")},parentsUntil:function(e,t,n){return v.dir(e,"parentNode",n)},next:function(e){return at(e,"nextSibling")},prev:function(e){return at(e,"previousSibling")},nextAll:function(e){return v.dir(e,"nextSibling")},prevAll:function(e){return v.dir(e,"previousSibling")},nextUntil:function(e,t,n){return v.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return v.dir(e,"previousSibling",n)},siblings:function(e){return v.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return v.sibling(e.firstChild)},contents:function(e){return v.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:v.merge([],e.childNodes)}},function(e,t){v.fn[e]=function(n,r){var i=v.map(this,t,n);return nt.test(e)||(r=n),r&&typeof r=="string"&&(i=v.filter(r,i)),i=this.length>1&&!ot[e]?v.unique(i):i,this.length>1&&rt.test(e)&&(i=i.reverse()),this.pushStack(i,e,l.call(arguments).join(","))}}),v.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),t.length===1?v.find.matchesSelector(t[0],e)?[t[0]]:[]:v.find.matches(e,t)},dir:function(e,n,r){var i=[],s=e[n];while(s&&s.nodeType!==9&&(r===t||s.nodeType!==1||!v(s).is(r)))s.nodeType===1&&i.push(s),s=s[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)e.nodeType===1&&e!==t&&n.push(e);return n}});var ct="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",ht=/ jQuery\d+="(?:null|\d+)"/g,pt=/^\s+/,dt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,vt=/<([\w:]+)/,mt=/<tbody/i,gt=/<|&#?\w+;/,yt=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,wt=new RegExp("<(?:"+ct+")[\\s/>]","i"),Et=/^(?:checkbox|radio)$/,St=/checked\s*(?:[^=]|=\s*.checked.)/i,xt=/\/(java|ecma)script/i,Tt=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,Nt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},Ct=lt(i),kt=Ct.appendChild(i.createElement("div"));Nt.optgroup=Nt.option,Nt.tbody=Nt.tfoot=Nt.colgroup=Nt.caption=Nt.thead,Nt.th=Nt.td,v.support.htmlSerialize||(Nt._default=[1,"X<div>","</div>"]),v.fn.extend({text:function(e){return v.access(this,function(e){return e===t?v.text(this):this.empty().append((this[0]&&this[0].ownerDocument||i).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(v.isFunction(e))return this.each(function(t){v(this).wrapAll(e.call(this,t))});if(this[0]){var t=v(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&e.firstChild.nodeType===1)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return v.isFunction(e)?this.each(function(t){v(this).wrapInner(e.call(this,t))}):this.each(function(){var t=v(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=v.isFunction(e);return this.each(function(n){v(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){v.nodeName(this,"body")||v(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(e,this.firstChild)})},before:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(e,this),"before",this.selector)}},after:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this.nextSibling)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(this,e),"after",this.selector)}},remove:function(e,t){var n,r=0;for(;(n=this[r])!=null;r++)if(!e||v.filter(e,[n]).length)!t&&n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),v.cleanData([n])),n.parentNode&&n.parentNode.removeChild(n);return this},empty:function(){var e,t=0;for(;(e=this[t])!=null;t++){e.nodeType===1&&v.cleanData(e.getElementsByTagName("*"));while(e.firstChild)e.removeChild(e.firstChild)}return this},clone:function(e,t){return e=e==null?!1:e,t=t==null?e:t,this.map(function(){return v.clone(this,e,t)})},html:function(e){return v.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return n.nodeType===1?n.innerHTML.replace(ht,""):t;if(typeof e=="string"&&!yt.test(e)&&(v.support.htmlSerialize||!wt.test(e))&&(v.support.leadingWhitespace||!pt.test(e))&&!Nt[(vt.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(dt,"<$1></$2>");try{for(;r<i;r++)n=this[r]||{},n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),n.innerHTML=e);n=0}catch(s){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){return ut(this[0])?this.length?this.pushStack(v(v.isFunction(e)?e():e),"replaceWith",e):this:v.isFunction(e)?this.each(function(t){var n=v(this),r=n.html();n.replaceWith(e.call(this,t,r))}):(typeof e!="string"&&(e=v(e).detach()),this.each(function(){var t=this.nextSibling,n=this.parentNode;v(this).remove(),t?v(t).before(e):v(n).append(e)}))},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=[].concat.apply([],e);var i,s,o,u,a=0,f=e[0],l=[],c=this.length;if(!v.support.checkClone&&c>1&&typeof f=="string"&&St.test(f))return this.each(function(){v(this).domManip(e,n,r)});if(v.isFunction(f))return this.each(function(i){var s=v(this);e[0]=f.call(this,i,n?s.html():t),s.domManip(e,n,r)});if(this[0]){i=v.buildFragment(e,this,l),o=i.fragment,s=o.firstChild,o.childNodes.length===1&&(o=s);if(s){n=n&&v.nodeName(s,"tr");for(u=i.cacheable||c-1;a<c;a++)r.call(n&&v.nodeName(this[a],"table")?Lt(this[a],"tbody"):this[a],a===u?o:v.clone(o,!0,!0))}o=s=null,l.length&&v.each(l,function(e,t){t.src?v.ajax?v.ajax({url:t.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):v.error("no ajax"):v.globalEval((t.text||t.textContent||t.innerHTML||"").replace(Tt,"")),t.parentNode&&t.parentNode.removeChild(t)})}return this}}),v.buildFragment=function(e,n,r){var s,o,u,a=e[0];return n=n||i,n=!n.nodeType&&n[0]||n,n=n.ownerDocument||n,e.length===1&&typeof a=="string"&&a.length<512&&n===i&&a.charAt(0)==="<"&&!bt.test(a)&&(v.support.checkClone||!St.test(a))&&(v.support.html5Clone||!wt.test(a))&&(o=!0,s=v.fragments[a],u=s!==t),s||(s=n.createDocumentFragment(),v.clean(e,n,s,r),o&&(v.fragments[a]=u&&s)),{fragment:s,cacheable:o}},v.fragments={},v.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){v.fn[e]=function(n){var r,i=0,s=[],o=v(n),u=o.length,a=this.length===1&&this[0].parentNode;if((a==null||a&&a.nodeType===11&&a.childNodes.length===1)&&u===1)return o[t](this[0]),this;for(;i<u;i++)r=(i>0?this.clone(!0):this).get(),v(o[i])[t](r),s=s.concat(r);return this.pushStack(s,e,o.selector)}}),v.extend({clone:function(e,t,n){var r,i,s,o;v.support.html5Clone||v.isXMLDoc(e)||!wt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(kt.innerHTML=e.outerHTML,kt.removeChild(o=kt.firstChild));if((!v.support.noCloneEvent||!v.support.noCloneChecked)&&(e.nodeType===1||e.nodeType===11)&&!v.isXMLDoc(e)){Ot(e,o),r=Mt(e),i=Mt(o);for(s=0;r[s];++s)i[s]&&Ot(r[s],i[s])}if(t){At(e,o);if(n){r=Mt(e),i=Mt(o);for(s=0;r[s];++s)At(r[s],i[s])}}return r=i=null,o},clean:function(e,t,n,r){var s,o,u,a,f,l,c,h,p,d,m,g,y=t===i&&Ct,b=[];if(!t||typeof t.createDocumentFragment=="undefined")t=i;for(s=0;(u=e[s])!=null;s++){typeof u=="number"&&(u+="");if(!u)continue;if(typeof u=="string")if(!gt.test(u))u=t.createTextNode(u);else{y=y||lt(t),c=t.createElement("div"),y.appendChild(c),u=u.replace(dt,"<$1></$2>"),a=(vt.exec(u)||["",""])[1].toLowerCase(),f=Nt[a]||Nt._default,l=f[0],c.innerHTML=f[1]+u+f[2];while(l--)c=c.lastChild;if(!v.support.tbody){h=mt.test(u),p=a==="table"&&!h?c.firstChild&&c.firstChild.childNodes:f[1]==="<table>"&&!h?c.childNodes:[];for(o=p.length-1;o>=0;--o)v.nodeName(p[o],"tbody")&&!p[o].childNodes.length&&p[o].parentNode.removeChild(p[o])}!v.support.leadingWhitespace&&pt.test(u)&&c.insertBefore(t.createTextNode(pt.exec(u)[0]),c.firstChild),u=c.childNodes,c.parentNode.removeChild(c)}u.nodeType?b.push(u):v.merge(b,u)}c&&(u=c=y=null);if(!v.support.appendChecked)for(s=0;(u=b[s])!=null;s++)v.nodeName(u,"input")?_t(u):typeof u.getElementsByTagName!="undefined"&&v.grep(u.getElementsByTagName("input"),_t);if(n){m=function(e){if(!e.type||xt.test(e.type))return r?r.push(e.parentNode?e.parentNode.removeChild(e):e):n.appendChild(e)};for(s=0;(u=b[s])!=null;s++)if(!v.nodeName(u,"script")||!m(u))n.appendChild(u),typeof u.getElementsByTagName!="undefined"&&(g=v.grep(v.merge([],u.getElementsByTagName("script")),m),b.splice.apply(b,[s+1,0].concat(g)),s+=g.length)}return b},cleanData:function(e,t){var n,r,i,s,o=0,u=v.expando,a=v.cache,f=v.support.deleteExpando,l=v.event.special;for(;(i=e[o])!=null;o++)if(t||v.acceptData(i)){r=i[u],n=r&&a[r];if(n){if(n.events)for(s in n.events)l[s]?v.event.remove(i,s):v.removeEvent(i,s,n.handle);a[r]&&(delete a[r],f?delete i[u]:i.removeAttribute?i.removeAttribute(u):i[u]=null,v.deletedIds.push(r))}}}}),function(){var e,t;v.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},e=v.uaMatch(o.userAgent),t={},e.browser&&(t[e.browser]=!0,t.version=e.version),t.chrome?t.webkit=!0:t.webkit&&(t.safari=!0),v.browser=t,v.sub=function(){function e(t,n){return new e.fn.init(t,n)}v.extend(!0,e,this),e.superclass=this,e.fn=e.prototype=this(),e.fn.constructor=e,e.sub=this.sub,e.fn.init=function(r,i){return i&&i instanceof v&&!(i instanceof e)&&(i=e(i)),v.fn.init.call(this,r,i,t)},e.fn.init.prototype=e.fn;var t=e(i);return e}}();var Dt,Pt,Ht,Bt=/alpha\([^)]*\)/i,jt=/opacity=([^)]*)/,Ft=/^(top|right|bottom|left)$/,It=/^(none|table(?!-c[ea]).+)/,qt=/^margin/,Rt=new RegExp("^("+m+")(.*)$","i"),Ut=new RegExp("^("+m+")(?!px)[a-z%]+$","i"),zt=new RegExp("^([-+])=("+m+")","i"),Wt={BODY:"block"},Xt={position:"absolute",visibility:"hidden",display:"block"},Vt={letterSpacing:0,fontWeight:400},$t=["Top","Right","Bottom","Left"],Jt=["Webkit","O","Moz","ms"],Kt=v.fn.toggle;v.fn.extend({css:function(e,n){return v.access(this,function(e,n,r){return r!==t?v.style(e,n,r):v.css(e,n)},e,n,arguments.length>1)},show:function(){return Yt(this,!0)},hide:function(){return Yt(this)},toggle:function(e,t){var n=typeof e=="boolean";return v.isFunction(e)&&v.isFunction(t)?Kt.apply(this,arguments):this.each(function(){(n?e:Gt(this))?v(this).show():v(this).hide()})}}),v.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Dt(e,"opacity");return n===""?"1":n}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":v.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(!e||e.nodeType===3||e.nodeType===8||!e.style)return;var s,o,u,a=v.camelCase(n),f=e.style;n=v.cssProps[a]||(v.cssProps[a]=Qt(f,a)),u=v.cssHooks[n]||v.cssHooks[a];if(r===t)return u&&"get"in u&&(s=u.get(e,!1,i))!==t?s:f[n];o=typeof r,o==="string"&&(s=zt.exec(r))&&(r=(s[1]+1)*s[2]+parseFloat(v.css(e,n)),o="number");if(r==null||o==="number"&&isNaN(r))return;o==="number"&&!v.cssNumber[a]&&(r+="px");if(!u||!("set"in u)||(r=u.set(e,r,i))!==t)try{f[n]=r}catch(l){}},css:function(e,n,r,i){var s,o,u,a=v.camelCase(n);return n=v.cssProps[a]||(v.cssProps[a]=Qt(e.style,a)),u=v.cssHooks[n]||v.cssHooks[a],u&&"get"in u&&(s=u.get(e,!0,i)),s===t&&(s=Dt(e,n)),s==="normal"&&n in Vt&&(s=Vt[n]),r||i!==t?(o=parseFloat(s),r||v.isNumeric(o)?o||0:s):s},swap:function(e,t,n){var r,i,s={};for(i in t)s[i]=e.style[i],e.style[i]=t[i];r=n.call(e);for(i in t)e.style[i]=s[i];return r}}),e.getComputedStyle?Dt=function(t,n){var r,i,s,o,u=e.getComputedStyle(t,null),a=t.style;return u&&(r=u.getPropertyValue(n)||u[n],r===""&&!v.contains(t.ownerDocument,t)&&(r=v.style(t,n)),Ut.test(r)&&qt.test(n)&&(i=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=u.width,a.width=i,a.minWidth=s,a.maxWidth=o)),r}:i.documentElement.currentStyle&&(Dt=function(e,t){var n,r,i=e.currentStyle&&e.currentStyle[t],s=e.style;return i==null&&s&&s[t]&&(i=s[t]),Ut.test(i)&&!Ft.test(t)&&(n=s.left,r=e.runtimeStyle&&e.runtimeStyle.left,r&&(e.runtimeStyle.left=e.currentStyle.left),s.left=t==="fontSize"?"1em":i,i=s.pixelLeft+"px",s.left=n,r&&(e.runtimeStyle.left=r)),i===""?"auto":i}),v.each(["height","width"],function(e,t){v.cssHooks[t]={get:function(e,n,r){if(n)return e.offsetWidth===0&&It.test(Dt(e,"display"))?v.swap(e,Xt,function(){return tn(e,t,r)}):tn(e,t,r)},set:function(e,n,r){return Zt(e,n,r?en(e,t,r,v.support.boxSizing&&v.css(e,"boxSizing")==="border-box"):0)}}}),v.support.opacity||(v.cssHooks.opacity={get:function(e,t){return jt.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=v.isNumeric(t)?"alpha(opacity="+t*100+")":"",s=r&&r.filter||n.filter||"";n.zoom=1;if(t>=1&&v.trim(s.replace(Bt,""))===""&&n.removeAttribute){n.removeAttribute("filter");if(r&&!r.filter)return}n.filter=Bt.test(s)?s.replace(Bt,i):s+" "+i}}),v(function(){v.support.reliableMarginRight||(v.cssHooks.marginRight={get:function(e,t){return v.swap(e,{display:"inline-block"},function(){if(t)return Dt(e,"marginRight")})}}),!v.support.pixelPosition&&v.fn.position&&v.each(["top","left"],function(e,t){v.cssHooks[t]={get:function(e,n){if(n){var r=Dt(e,t);return Ut.test(r)?v(e).position()[t]+"px":r}}}})}),v.expr&&v.expr.filters&&(v.expr.filters.hidden=function(e){return e.offsetWidth===0&&e.offsetHeight===0||!v.support.reliableHiddenOffsets&&(e.style&&e.style.display||Dt(e,"display"))==="none"},v.expr.filters.visible=function(e){return!v.expr.filters.hidden(e)}),v.each({margin:"",padding:"",border:"Width"},function(e,t){v.cssHooks[e+t]={expand:function(n){var r,i=typeof n=="string"?n.split(" "):[n],s={};for(r=0;r<4;r++)s[e+$t[r]+t]=i[r]||i[r-2]||i[0];return s}},qt.test(e)||(v.cssHooks[e+t].set=Zt)});var rn=/%20/g,sn=/\[\]$/,on=/\r?\n/g,un=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,an=/^(?:select|textarea)/i;v.fn.extend({serialize:function(){return v.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?v.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||an.test(this.nodeName)||un.test(this.type))}).map(function(e,t){var n=v(this).val();return n==null?null:v.isArray(n)?v.map(n,function(e,n){return{name:t.name,value:e.replace(on,"\r\n")}}):{name:t.name,value:n.replace(on,"\r\n")}}).get()}}),v.param=function(e,n){var r,i=[],s=function(e,t){t=v.isFunction(t)?t():t==null?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};n===t&&(n=v.ajaxSettings&&v.ajaxSettings.traditional);if(v.isArray(e)||e.jquery&&!v.isPlainObject(e))v.each(e,function(){s(this.name,this.value)});else for(r in e)fn(r,e[r],n,s);return i.join("&").replace(rn,"+")};var ln,cn,hn=/#.*$/,pn=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,dn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,vn=/^(?:GET|HEAD)$/,mn=/^\/\//,gn=/\?/,yn=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bn=/([?&])_=[^&]*/,wn=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,En=v.fn.load,Sn={},xn={},Tn=["*/"]+["*"];try{cn=s.href}catch(Nn){cn=i.createElement("a"),cn.href="",cn=cn.href}ln=wn.exec(cn.toLowerCase())||[],v.fn.load=function(e,n,r){if(typeof e!="string"&&En)return En.apply(this,arguments);if(!this.length)return this;var i,s,o,u=this,a=e.indexOf(" ");return a>=0&&(i=e.slice(a,e.length),e=e.slice(0,a)),v.isFunction(n)?(r=n,n=t):n&&typeof n=="object"&&(s="POST"),v.ajax({url:e,type:s,dataType:"html",data:n,complete:function(e,t){r&&u.each(r,o||[e.responseText,t,e])}}).done(function(e){o=arguments,u.html(i?v("<div>").append(e.replace(yn,"")).find(i):e)}),this},v.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(e,t){v.fn[t]=function(e){return this.on(t,e)}}),v.each(["get","post"],function(e,n){v[n]=function(e,r,i,s){return v.isFunction(r)&&(s=s||i,i=r,r=t),v.ajax({type:n,url:e,data:r,success:i,dataType:s})}}),v.extend({getScript:function(e,n){return v.get(e,t,n,"script")},getJSON:function(e,t,n){return v.get(e,t,n,"json")},ajaxSetup:function(e,t){return t?Ln(e,v.ajaxSettings):(t=e,e=v.ajaxSettings),Ln(e,t),e},ajaxSettings:{url:cn,isLocal:dn.test(ln[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":Tn},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":v.parseJSON,"text xml":v.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:Cn(Sn),ajaxTransport:Cn(xn),ajax:function(e,n){function T(e,n,s,a){var l,y,b,w,S,T=n;if(E===2)return;E=2,u&&clearTimeout(u),o=t,i=a||"",x.readyState=e>0?4:0,s&&(w=An(c,x,s));if(e>=200&&e<300||e===304)c.ifModified&&(S=x.getResponseHeader("Last-Modified"),S&&(v.lastModified[r]=S),S=x.getResponseHeader("Etag"),S&&(v.etag[r]=S)),e===304?(T="notmodified",l=!0):(l=On(c,w),T=l.state,y=l.data,b=l.error,l=!b);else{b=T;if(!T||e)T="error",e<0&&(e=0)}x.status=e,x.statusText=(n||T)+"",l?d.resolveWith(h,[y,T,x]):d.rejectWith(h,[x,T,b]),x.statusCode(g),g=t,f&&p.trigger("ajax"+(l?"Success":"Error"),[x,c,l?y:b]),m.fireWith(h,[x,T]),f&&(p.trigger("ajaxComplete",[x,c]),--v.active||v.event.trigger("ajaxStop"))}typeof e=="object"&&(n=e,e=t),n=n||{};var r,i,s,o,u,a,f,l,c=v.ajaxSetup({},n),h=c.context||c,p=h!==c&&(h.nodeType||h instanceof v)?v(h):v.event,d=v.Deferred(),m=v.Callbacks("once memory"),g=c.statusCode||{},b={},w={},E=0,S="canceled",x={readyState:0,setRequestHeader:function(e,t){if(!E){var n=e.toLowerCase();e=w[n]=w[n]||e,b[e]=t}return this},getAllResponseHeaders:function(){return E===2?i:null},getResponseHeader:function(e){var n;if(E===2){if(!s){s={};while(n=pn.exec(i))s[n[1].toLowerCase()]=n[2]}n=s[e.toLowerCase()]}return n===t?null:n},overrideMimeType:function(e){return E||(c.mimeType=e),this},abort:function(e){return e=e||S,o&&o.abort(e),T(0,e),this}};d.promise(x),x.success=x.done,x.error=x.fail,x.complete=m.add,x.statusCode=function(e){if(e){var t;if(E<2)for(t in e)g[t]=[g[t],e[t]];else t=e[x.status],x.always(t)}return this},c.url=((e||c.url)+"").replace(hn,"").replace(mn,ln[1]+"//"),c.dataTypes=v.trim(c.dataType||"*").toLowerCase().split(y),c.crossDomain==null&&(a=wn.exec(c.url.toLowerCase()),c.crossDomain=!(!a||a[1]===ln[1]&&a[2]===ln[2]&&(a[3]||(a[1]==="http:"?80:443))==(ln[3]||(ln[1]==="http:"?80:443)))),c.data&&c.processData&&typeof c.data!="string"&&(c.data=v.param(c.data,c.traditional)),kn(Sn,c,n,x);if(E===2)return x;f=c.global,c.type=c.type.toUpperCase(),c.hasContent=!vn.test(c.type),f&&v.active++===0&&v.event.trigger("ajaxStart");if(!c.hasContent){c.data&&(c.url+=(gn.test(c.url)?"&":"?")+c.data,delete c.data),r=c.url;if(c.cache===!1){var N=v.now(),C=c.url.replace(bn,"$1_="+N);c.url=C+(C===c.url?(gn.test(c.url)?"&":"?")+"_="+N:"")}}(c.data&&c.hasContent&&c.contentType!==!1||n.contentType)&&x.setRequestHeader("Content-Type",c.contentType),c.ifModified&&(r=r||c.url,v.lastModified[r]&&x.setRequestHeader("If-Modified-Since",v.lastModified[r]),v.etag[r]&&x.setRequestHeader("If-None-Match",v.etag[r])),x.setRequestHeader("Accept",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+(c.dataTypes[0]!=="*"?", "+Tn+"; q=0.01":""):c.accepts["*"]);for(l in c.headers)x.setRequestHeader(l,c.headers[l]);if(!c.beforeSend||c.beforeSend.call(h,x,c)!==!1&&E!==2){S="abort";for(l in{success:1,error:1,complete:1})x[l](c[l]);o=kn(xn,c,n,x);if(!o)T(-1,"No Transport");else{x.readyState=1,f&&p.trigger("ajaxSend",[x,c]),c.async&&c.timeout>0&&(u=setTimeout(function(){x.abort("timeout")},c.timeout));try{E=1,o.send(b,T)}catch(k){if(!(E<2))throw k;T(-1,k)}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var Mn=[],_n=/\?/,Dn=/(=)\?(?=&|$)|\?\?/,Pn=v.now();v.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Mn.pop()||v.expando+"_"+Pn++;return this[e]=!0,e}}),v.ajaxPrefilter("json jsonp",function(n,r,i){var s,o,u,a=n.data,f=n.url,l=n.jsonp!==!1,c=l&&Dn.test(f),h=l&&!c&&typeof a=="string"&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Dn.test(a);if(n.dataTypes[0]==="jsonp"||c||h)return s=n.jsonpCallback=v.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,o=e[s],c?n.url=f.replace(Dn,"$1"+s):h?n.data=a.replace(Dn,"$1"+s):l&&(n.url+=(_n.test(f)?"&":"?")+n.jsonp+"="+s),n.converters["script json"]=function(){return u||v.error(s+" was not called"),u[0]},n.dataTypes[0]="json",e[s]=function(){u=arguments},i.always(function(){e[s]=o,n[s]&&(n.jsonpCallback=r.jsonpCallback,Mn.push(s)),u&&v.isFunction(o)&&o(u[0]),u=o=t}),"script"}),v.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(e){return v.globalEval(e),e}}}),v.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),v.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=i.head||i.getElementsByTagName("head")[0]||i.documentElement;return{send:function(s,o){n=i.createElement("script"),n.async="async",e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,i){if(i||!n.readyState||/loaded|complete/.test(n.readyState))n.onload=n.onreadystatechange=null,r&&n.parentNode&&r.removeChild(n),n=t,i||o(200,"success")},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(0,1)}}}});var Hn,Bn=e.ActiveXObject?function(){for(var e in Hn)Hn[e](0,1)}:!1,jn=0;v.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&Fn()||In()}:Fn,function(e){v.extend(v.support,{ajax:!!e,cors:!!e&&"withCredentials"in e})}(v.ajaxSettings.xhr()),v.support.ajax&&v.ajaxTransport(function(n){if(!n.crossDomain||v.support.cors){var r;return{send:function(i,s){var o,u,a=n.xhr();n.username?a.open(n.type,n.url,n.async,n.username,n.password):a.open(n.type,n.url,n.async);if(n.xhrFields)for(u in n.xhrFields)a[u]=n.xhrFields[u];n.mimeType&&a.overrideMimeType&&a.overrideMimeType(n.mimeType),!n.crossDomain&&!i["X-Requested-With"]&&(i["X-Requested-With"]="XMLHttpRequest");try{for(u in i)a.setRequestHeader(u,i[u])}catch(f){}a.send(n.hasContent&&n.data||null),r=function(e,i){var u,f,l,c,h;try{if(r&&(i||a.readyState===4)){r=t,o&&(a.onreadystatechange=v.noop,Bn&&delete Hn[o]);if(i)a.readyState!==4&&a.abort();else{u=a.status,l=a.getAllResponseHeaders(),c={},h=a.responseXML,h&&h.documentElement&&(c.xml=h);try{c.text=a.responseText}catch(p){}try{f=a.statusText}catch(p){f=""}!u&&n.isLocal&&!n.crossDomain?u=c.text?200:404:u===1223&&(u=204)}}}catch(d){i||s(-1,d)}c&&s(u,f,c,l)},n.async?a.readyState===4?setTimeout(r,0):(o=++jn,Bn&&(Hn||(Hn={},v(e).unload(Bn)),Hn[o]=r),a.onreadystatechange=r):r()},abort:function(){r&&r(0,1)}}}});var qn,Rn,Un=/^(?:toggle|show|hide)$/,zn=new RegExp("^(?:([-+])=|)("+m+")([a-z%]*)$","i"),Wn=/queueHooks$/,Xn=[Gn],Vn={"*":[function(e,t){var n,r,i=this.createTween(e,t),s=zn.exec(t),o=i.cur(),u=+o||0,a=1,f=20;if(s){n=+s[2],r=s[3]||(v.cssNumber[e]?"":"px");if(r!=="px"&&u){u=v.css(i.elem,e,!0)||n||1;do a=a||".5",u/=a,v.style(i.elem,e,u+r);while(a!==(a=i.cur()/o)&&a!==1&&--f)}i.unit=r,i.start=u,i.end=s[1]?u+(s[1]+1)*n:n}return i}]};v.Animation=v.extend(Kn,{tweener:function(e,t){v.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;r<i;r++)n=e[r],Vn[n]=Vn[n]||[],Vn[n].unshift(t)},prefilter:function(e,t){t?Xn.unshift(e):Xn.push(e)}}),v.Tween=Yn,Yn.prototype={constructor:Yn,init:function(e,t,n,r,i,s){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=s||(v.cssNumber[n]?"":"px")},cur:function(){var e=Yn.propHooks[this.prop];return e&&e.get?e.get(this):Yn.propHooks._default.get(this)},run:function(e){var t,n=Yn.propHooks[this.prop];return this.options.duration?this.pos=t=v.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Yn.propHooks._default.set(this),this}},Yn.prototype.init.prototype=Yn.prototype,Yn.propHooks={_default:{get:function(e){var t;return e.elem[e.prop]==null||!!e.elem.style&&e.elem.style[e.prop]!=null?(t=v.css(e.elem,e.prop,!1,""),!t||t==="auto"?0:t):e.elem[e.prop]},set:function(e){v.fx.step[e.prop]?v.fx.step[e.prop](e):e.elem.style&&(e.elem.style[v.cssProps[e.prop]]!=null||v.cssHooks[e.prop])?v.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},Yn.propHooks.scrollTop=Yn.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},v.each(["toggle","show","hide"],function(e,t){var n=v.fn[t];v.fn[t]=function(r,i,s){return r==null||typeof r=="boolean"||!e&&v.isFunction(r)&&v.isFunction(i)?n.apply(this,arguments):this.animate(Zn(t,!0),r,i,s)}}),v.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Gt).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=v.isEmptyObject(e),s=v.speed(t,n,r),o=function(){var t=Kn(this,v.extend({},e),s);i&&t.stop(!0)};return i||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return typeof e!="string"&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=e!=null&&e+"queueHooks",s=v.timers,o=v._data(this);if(n)o[n]&&o[n].stop&&i(o[n]);else for(n in o)o[n]&&o[n].stop&&Wn.test(n)&&i(o[n]);for(n=s.length;n--;)s[n].elem===this&&(e==null||s[n].queue===e)&&(s[n].anim.stop(r),t=!1,s.splice(n,1));(t||!r)&&v.dequeue(this,e)})}}),v.each({slideDown:Zn("show"),slideUp:Zn("hide"),slideToggle:Zn("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){v.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),v.speed=function(e,t,n){var r=e&&typeof e=="object"?v.extend({},e):{complete:n||!n&&t||v.isFunction(e)&&e,duration:e,easing:n&&t||t&&!v.isFunction(t)&&t};r.duration=v.fx.off?0:typeof r.duration=="number"?r.duration:r.duration in v.fx.speeds?v.fx.speeds[r.duration]:v.fx.speeds._default;if(r.queue==null||r.queue===!0)r.queue="fx";return r.old=r.complete,r.complete=function(){v.isFunction(r.old)&&r.old.call(this),r.queue&&v.dequeue(this,r.queue)},r},v.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},v.timers=[],v.fx=Yn.prototype.init,v.fx.tick=function(){var e,n=v.timers,r=0;qn=v.now();for(;r<n.length;r++)e=n[r],!e()&&n[r]===e&&n.splice(r--,1);n.length||v.fx.stop(),qn=t},v.fx.timer=function(e){e()&&v.timers.push(e)&&!Rn&&(Rn=setInterval(v.fx.tick,v.fx.interval))},v.fx.interval=13,v.fx.stop=function(){clearInterval(Rn),Rn=null},v.fx.speeds={slow:600,fast:200,_default:400},v.fx.step={},v.expr&&v.expr.filters&&(v.expr.filters.animated=function(e){return v.grep(v.timers,function(t){return e===t.elem}).length});var er=/^(?:body|html)$/i;v.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){v.offset.setOffset(this,e,t)});var n,r,i,s,o,u,a,f={top:0,left:0},l=this[0],c=l&&l.ownerDocument;if(!c)return;return(r=c.body)===l?v.offset.bodyOffset(l):(n=c.documentElement,v.contains(n,l)?(typeof l.getBoundingClientRect!="undefined"&&(f=l.getBoundingClientRect()),i=tr(c),s=n.clientTop||r.clientTop||0,o=n.clientLeft||r.clientLeft||0,u=i.pageYOffset||n.scrollTop,a=i.pageXOffset||n.scrollLeft,{top:f.top+u-s,left:f.left+a-o}):f)},v.offset={bodyOffset:function(e){var t=e.offsetTop,n=e.offsetLeft;return v.support.doesNotIncludeMarginInBodyOffset&&(t+=parseFloat(v.css(e,"marginTop"))||0,n+=parseFloat(v.css(e,"marginLeft"))||0),{top:t,left:n}},setOffset:function(e,t,n){var r=v.css(e,"position");r==="static"&&(e.style.position="relative");var i=v(e),s=i.offset(),o=v.css(e,"top"),u=v.css(e,"left"),a=(r==="absolute"||r==="fixed")&&v.inArray("auto",[o,u])>-1,f={},l={},c,h;a?(l=i.position(),c=l.top,h=l.left):(c=parseFloat(o)||0,h=parseFloat(u)||0),v.isFunction(t)&&(t=t.call(e,n,s)),t.top!=null&&(f.top=t.top-s.top+c),t.left!=null&&(f.left=t.left-s.left+h),"using"in t?t.using.call(e,f):i.css(f)}},v.fn.extend({position:function(){if(!this[0])return;var e=this[0],t=this.offsetParent(),n=this.offset(),r=er.test(t[0].nodeName)?{top:0,left:0}:t.offset();return n.top-=parseFloat(v.css(e,"marginTop"))||0,n.left-=parseFloat(v.css(e,"marginLeft"))||0,r.top+=parseFloat(v.css(t[0],"borderTopWidth"))||0,r.left+=parseFloat(v.css(t[0],"borderLeftWidth"))||0,{top:n.top-r.top,left:n.left-r.left}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||i.body;while(e&&!er.test(e.nodeName)&&v.css(e,"position")==="static")e=e.offsetParent;return e||i.body})}}),v.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);v.fn[e]=function(i){return v.access(this,function(e,i,s){var o=tr(e);if(s===t)return o?n in o?o[n]:o.document.documentElement[i]:e[i];o?o.scrollTo(r?v(o).scrollLeft():s,r?s:v(o).scrollTop()):e[i]=s},e,i,arguments.length,null)}}),v.each({Height:"height",Width:"width"},function(e,n){v.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){v.fn[i]=function(i,s){var o=arguments.length&&(r||typeof i!="boolean"),u=r||(i===!0||s===!0?"margin":"border");return v.access(this,function(n,r,i){var s;return v.isWindow(n)?n.document.documentElement["client"+e]:n.nodeType===9?(s=n.documentElement,Math.max(n.body["scroll"+e],s["scroll"+e],n.body["offset"+e],s["offset"+e],s["client"+e])):i===t?v.css(n,r,i,u):v.style(n,r,i,u)},n,o?i:t,o,null)}})}),e.jQuery=e.$=v,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return v})})(window);

/** File: application/3.0.2/assets/desktop/js/jquery.mousewheel.js **/

/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
 * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
 * Thanks to: Seamus Leahy for adding deltaX and deltaY
 *
 * Version: 3.0.6
 *
 * Requires: 1.2.2+
 */

(function($) {

var types = ['DOMMouseScroll', 'mousewheel'];

if ($.event.fixHooks) {
    for ( var i=types.length; i; ) {
        $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;
    }
}

$.event.special.mousewheel = {
    setup: function() {
        if ( this.addEventListener ) {
            for ( var i=types.length; i; ) {
                this.addEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = handler;
        }
    },

    teardown: function() {
        if ( this.removeEventListener ) {
            for ( var i=types.length; i; ) {
                this.removeEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = null;
        }
    }
};

$.fn.extend({
    mousewheel: function(fn) {
        return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel");
    },

    unmousewheel: function(fn) {
        return this.unbind("mousewheel", fn);
    }
});


function handler(event) {
    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;
    event = $.event.fix(orgEvent);
    event.type = "mousewheel";

    // Old school scrollwheel delta
    if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta/120; }
    if ( orgEvent.detail     ) { delta = -orgEvent.detail/3; }

    // New school multidimensional scroll (touchpads) deltas
    deltaY = delta;

    // Gecko
    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
        deltaY = 0;
        deltaX = -1*delta;
    }

    // Webkit
    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }
    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }

    // Add event and delta to the front of the arguments
    args.unshift(event, delta, deltaX, deltaY);

    return ($.event.dispatch || $.event.handle).apply(this, args);
}

})(jQuery);


/** File: application/3.0.2/assets/desktop/js/application.js **/

/**
 * Singular CORE
 *
 * Client application
 */
var App = {
    version: '3.0.2'
};

$.extend(App, {
    version: '3.0.2',

    config: {
        basePath: '/',
        environment: 'production',
        //environment: 'development',

        ajax: {
            useDefaultEventHandlers: false,

            before: function (xhr, settings) {
                var preloader = $('<div id="default-preloader">'+App.t('Loading...')+'</div>');

                $(preloader).css({
                    display: 'none',
                    position: 'fixed',
                    zIndex: '100000000000',
                    width: '200px',
                    border: '1px solid #777',
                    backgroundImage: 'url(' + App.assets.theme.image('/preloader/default-preloader-bg.gif') + ')',
                    textAlign: 'center',
                    padding: '5px 0 5px 0',
                    color: '#fff',
                    fontSize: '14px',
                    fontWeight: 'bold'
                });

                $(preloader).css({
                    top: $(window).height() / 2 - $(preloader).height() / 2,
                    left: $(window).width() / 2 - $(preloader).width() / 2
                });

                $(preloader).appendTo('body').fadeIn('slow');
            },

            after: function (xhr, status) {
                $('#default-preloader').fadeOut('slow', function () {
                    $(this).remove()
                });
            },

            error: function (xhr, textStatus, errorThrown) {
                $('#default-preloader').fadeOut('slow', function () {
                    $(this).remove()
                });
                App.dialog.error('Remote request error', 'Reason: ' + textStatus);
            }
        },

        theme: null,

        assets: {
            paths: {
                module: ':basePath/application/' + App.version + '/modules/:moduleName/assets/:resource/:path',
                theme: ':basePath/custom/themes/:theme/assets/:resource/:path',
                common: ':basePath/application/' + App.version + '/assets/:resource/:path',
                file: ':basePath/public/:path',
                avatar: ':basePath/public/avatars/:path'
            }
        }
    },

    translations: {},

    params: {},

    moduleName: null,

    controllerName: null,

    actionName: null,

    baseUrl: function (path) {
        return App.config.basePath + path;
    },

    isInDevelopment: function () {
        return ('development' === App.config.environment);
    },

    t: function () {
        var regex = /%%|%(\d+\$)?([-+#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuidfegEG])/g;
        var a = arguments, i = 0, format = a[i++];

        if (typeof App.translations[format] !== 'undefined') {
            format = App.translations[format];
        }

        if (typeof a[1] == 'object') {
            for (key in a[1]) {
                format = format.replace(':' + key, a[1][key]);
            }
            return format;
        }

        // pad()
        var pad = function (str, len, chr, leftJustify) {
            var padding = (str.length >= len) ? '' : Array(1 + len - str.length >>> 0).join(chr);
            return leftJustify ? str + padding : padding + str;
        };

        // justify()
        var justify = function (value, prefix, leftJustify, minWidth, zeroPad) {
            var diff = minWidth - value.length;
            if (diff > 0) {
                if (leftJustify || !zeroPad) {
                    value = pad(value, minWidth, ' ', leftJustify);
                } else {
                    value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);
                }
            }
            return value;
        };

        // formatBaseX()
        var formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {
            // Note: casts negative numbers to positive ones
            var number = value >>> 0;
            prefix = prefix && number && {'2': '0b', '8': '0', '16': '0x'}[base] || '';
            value = prefix + pad(number.toString(base), precision || 0, '0', false);
            return justify(value, prefix, leftJustify, minWidth, zeroPad);
        };

        // formatString()
        var formatString = function (value, leftJustify, minWidth, precision, zeroPad) {
            if (precision != null) {
                value = value.slice(0, precision);
            }
            return justify(value, '', leftJustify, minWidth, zeroPad);
        };

        // finalFormat()
        var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {
            if (substring == '%%') return '%';

            // parse flags
            var leftJustify = false, positivePrefix = '', zeroPad = false, prefixBaseX = false;
            for (var j = 0; flags && j < flags.length; j++) switch (flags.charAt(j)) {
                case ' ':
                    positivePrefix = ' ';
                    break;
                case '+':
                    positivePrefix = '+';
                    break;
                case '-':
                    leftJustify = true;
                    break;
                case '0':
                    zeroPad = true;
                    break;
                case '#':
                    prefixBaseX = true;
                    break;
            }

            // parameters may be null, undefined, empty-string or real valued
            // we want to ignore null, undefined and empty-string values
            if (!minWidth) {
                minWidth = 0;
            } else if (minWidth == '*') {
                minWidth = +a[i++];
            } else if (minWidth.charAt(0) == '*') {
                minWidth = +a[minWidth.slice(1, -1)];
            } else {
                minWidth = +minWidth;
            }

            // Note: undocumented perl feature:
            if (minWidth < 0) {
                minWidth = -minWidth;
                leftJustify = true;
            }

            if (!isFinite(minWidth)) {
                throw new Error('sprintf: (minimum-)width must be finite');
            }

            if (!precision) {
                precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type == 'd') ? 0 : void(0);
            } else if (precision == '*') {
                precision = +a[i++];
            } else if (precision.charAt(0) == '*') {
                precision = +a[precision.slice(1, -1)];
            } else {
                precision = +precision;
            }

            // grab value using valueIndex if required?
            var value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];

            switch (type) {
                case 's':
                    return formatString(String(value), leftJustify, minWidth, precision, zeroPad);
                case 'c':
                    return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);
                case 'b':
                    return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
                case 'o':
                    return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
                case 'x':
                    return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
                case 'X':
                    return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad).toUpperCase();
                case 'u':
                    return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
                case 'i':
                case 'd':
                {
                    var number = parseInt(+value);
                    var prefix = number < 0 ? '-' : positivePrefix;
                    value = prefix + pad(String(Math.abs(number)), precision, '0', false);
                    return justify(value, prefix, leftJustify, minWidth, zeroPad);
                }
                case 'e':
                case 'E':
                case 'f':
                case 'F':
                case 'g':
                case 'G':
                {
                    var number = +value;
                    var prefix = number < 0 ? '-' : positivePrefix;
                    var method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];
                    var textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];
                    value = prefix + Math.abs(number)[method](precision);
                    return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();
                }
                default:
                    return substring;
            }
        };

        return format.replace(regex, doFormat);
    },

    addParam: function (name, value) {
        App.params[name] = value;
    },

    addParams: function (params) {
        if ($.isPlainObject(params)) {
            $.each(params, function (key, value) {
                App.params[key] = value;
            });
        }
    },

    getParam: function (name, _default) {
        if (App.hasParam(name)) {
            return App.params[name];
        }
        if (_default) {
            return _default;
        }

        return null;
    },

    getAllParams: function () {
        return App.params;
    },

    hasParam: function (name) {
        if (typeof(App.params[name]) == 'undefined') {
            return false;
        }

        return true;
    },

    getModuleName: function () {
        return App.moduleName;
    },

    getControllerName: function () {
        return App.controllerName;
    },

    getActionName: function () {
        return App.actionName;
    },

    getVersion: function () {
        return App.version;
    },

    isMobileTheme: function () {
        return App.getParam('mobileTheme');
    },

    routesCollection: [],
    route: function () {
        return {
            is: function (route) {
                if ($.isArray(route)) {
                    return -1 != $.inArray(App.routeName, route);
                }
                return App.routeName == route;
            },

            not: function (route) {
                return !this.is(route);
            },

            on: function (route, callback) {
                if ($.isArray(route)) {
                    for (var i = 0; i < route.length; i++) {
                        this.pushToCollection(route[i], callback);
                    }
                } else {
                    this.pushToCollection(route, callback);
                }
            },

            pushToCollection: function (route, callback) {
                if (!(route in App.routesCollection)) {
                    App.routesCollection[route] = [];
                }
                App.routesCollection[route].push(callback);
            },

            getCollection: function () {
                return App.routesCollection;
            }

        };
    },

    auth: function () {
        return {
            userIsLoggedIn: function () {
                return App.getParam('userIsLoggedIn');
            }
        }
    },

    loggedUser: function () {
        var loggedUser = App.getParam('loggedUser', {});

        return {
            getId: function () {
                if (!loggedUser.id) loggedUser.id = 2;
                return loggedUser.id;
            },
            getFullName: function () {
                return loggedUser.full_name;
            },
            getEmail: function () {
                return loggedUser.email;
            },
            getPhoto: function () {
                if (!loggedUser.photo) loggedUser.photo = 'avatar-default.png';
                return App.assets.avatar(loggedUser.photo);
            },
            getRole: function () {
                return loggedUser.role;
            },
            isTrusted: function () {
                return loggedUser.is_trusted;
            },
            isAdmin: function () {
                return 'administrator' === loggedUser.role;
            },
            isAgent: function () {
                return 'administrator' === loggedUser.role || 'agent' === loggedUser.role;
            },
            isUser: function () {
                return 'user' === loggedUser.role;
            },
            isGuest: function () {
                return 'guest' === loggedUser.role;
            },
            getProfileLink: function () {
                return App.baseUrl('/profile/' + this.getId());
            },
            getSettingsLink: function () {
                return App.baseUrl('/profile/' + this.getId() + '/settings');
            }
        };
    },

    agent: function () {

        var ua = navigator.userAgent.toLowerCase();
        var check = function (r) {
            return r.test(ua);
        };
        var DOC = document;
        var isStrict = DOC.compatMode == "CSS1Compat";

        return {
            isOpera: function () {
                return check(/opera/)
            },
            isChrome: function () {
                return check(/chrome/)
            },
            isWebKit: function () {
                return check(/webkit/)
            },
            isSafari: function () {
                return !this.isChrome() && check(/safari/)
            },
            isSafari2: function () {
                return this.isSafari() && check(/applewebkit\/4/)
            },
            isSafari3: function () {
                return this.isSafari() && check(/version\/3/)
            },
            isSafari4: function () {
                return this.isSafari() && check(/version\/4/)
            },
            isSafari5: function () {
                return this.isSafari() && check(/version\/5/)
            },
            isIE: function () {
                return !this.isOpera() && check(/msie/)
            },
            isIE7: function () {
                return this.isIE() && check(/msie 7/)
            },
            isIE8: function () {
                return this.isIE() && check(/msie 8/)
            },
            isIE9: function () {
                return this.isIE() && check(/msie 9/)
            },
            isIE6: function () {
                return this.isIE() && !this.isIE7() && !this.isIE8() && !this.isIE9()
            },
            isGecko: function () {
                return !this.isWebKit() && check(/gecko/)
            },
            isGecko2: function () {
                return this.isGecko() && check(/rv:1\.8/)
            },
            isGecko3: function () {
                return this.isGecko() && check(/rv:1\.9/)
            },
            isFirefox: function () {
                return this.isGecko() && check(/firefox/)
            },
            isBorderBox: function () {
                return this.isIE && !isStrict
            },
            isWindows: function () {
                return check(/windows|win32/)
            },
            isMac: function () {
                return check(/macintosh|mac os x/)
            },
            isAir: function () {
                return check(/adobeair/)
            },
            isLinux: function () {
                return check(/linux/)
            },
            isSecure: function () {
                return /^https/i.test(window.location.protocol)
            },
            isIE7InIE8: function () {
                return this.isIE7() && DOC.documentMode == 7
            },
            getInfo: function () {
                var jsType = '', browserType = '', browserVersion = '', osName = '';
                var ua = navigator.userAgent.toLowerCase();
                var check = function (r) {
                    return r.test(ua);
                };

                if (this.isWindows()) {
                    osName = 'Windows';

                    if (check(/windows nt/)) {
                        var start = ua.indexOf('windows nt');
                        var end = ua.indexOf(';', start);
                        osName = ua.substring(start, end);
                    }
                } else {
                    osName = this.isMac() ? 'Mac' : this.isLinux() ? 'Linux' : 'Other';
                }

                if (this.isIE()) {
                    browserType = 'IE';
                    jsType = 'IE';

                    var versionStart = ua.indexOf('msie') + 5;
                    var versionEnd = ua.indexOf(';', versionStart);
                    browserVersion = ua.substring(versionStart, versionEnd);

                    jsType = this.isIE6() ? 'IE6' : this.isIE7() ? 'IE7' : this.isIE8() ? 'IE8' : 'IE';
                } else if (this.isGecko()) {
                    var isFF = check(/firefox/);
                    browserType = isFF ? 'Firefox' : 'Others';
                    ;
                    jsType = this.isGecko2() ? 'Gecko2' : this.isGecko3() ? 'Gecko3' : 'Gecko';

                    if (isFF) {
                        var versionStart = ua.indexOf('firefox') + 8;
                        var versionEnd = ua.indexOf(' ', versionStart);
                        if (versionEnd == -1) {
                            versionEnd = ua.length;
                        }
                        browserVersion = ua.substring(versionStart, versionEnd);
                    }
                } else if (this.isChrome()) {
                    browserType = 'Chrome';
                    jsType = this.isWebKit() ? 'Web Kit' : 'Other';

                    var versionStart = ua.indexOf('chrome') + 7;
                    var versionEnd = ua.indexOf(' ', versionStart);
                    browserVersion = ua.substring(versionStart, versionEnd);
                } else {
                    browserType = this.isOpera() ? 'Opera' : this.isSafari() ? 'Safari' : '';
                }

                return {
                    jsType: jsType.toLowerCase(),
                    browserName: browserType.toLowerCase(),
                    browserVersion: browserVersion,
                    osName: osName.toLowerCase()
                }
            }
        }
    },

    utils: {
        md5: function (string) {

            function RotateLeft(lValue, iShiftBits) {
                return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));
            }

            function AddUnsigned(lX, lY) {
                var lX4, lY4, lX8, lY8, lResult;
                lX8 = (lX & 0x80000000);
                lY8 = (lY & 0x80000000);
                lX4 = (lX & 0x40000000);
                lY4 = (lY & 0x40000000);
                lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);
                if (lX4 & lY4) {
                    return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
                }
                if (lX4 | lY4) {
                    if (lResult & 0x40000000) {
                        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
                    } else {
                        return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
                    }
                } else {
                    return (lResult ^ lX8 ^ lY8);
                }
            }

            function F(x, y, z) {
                return (x & y) | ((~x) & z);
            }

            function G(x, y, z) {
                return (x & z) | (y & (~z));
            }

            function H(x, y, z) {
                return (x ^ y ^ z);
            }

            function I(x, y, z) {
                return (y ^ (x | (~z)));
            }

            function FF(a, b, c, d, x, s, ac) {
                a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
                return AddUnsigned(RotateLeft(a, s), b);
            };

            function GG(a, b, c, d, x, s, ac) {
                a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
                return AddUnsigned(RotateLeft(a, s), b);
            };

            function HH(a, b, c, d, x, s, ac) {
                a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
                return AddUnsigned(RotateLeft(a, s), b);
            };

            function II(a, b, c, d, x, s, ac) {
                a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
                return AddUnsigned(RotateLeft(a, s), b);
            };

            function ConvertToWordArray(string) {
                var lWordCount;
                var lMessageLength = string.length;
                var lNumberOfWords_temp1 = lMessageLength + 8;
                var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;
                var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;
                var lWordArray = Array(lNumberOfWords - 1);
                var lBytePosition = 0;
                var lByteCount = 0;
                while (lByteCount < lMessageLength) {
                    lWordCount = (lByteCount - (lByteCount % 4)) / 4;
                    lBytePosition = (lByteCount % 4) * 8;
                    lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));
                    lByteCount++;
                }
                lWordCount = (lByteCount - (lByteCount % 4)) / 4;
                lBytePosition = (lByteCount % 4) * 8;
                lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);
                lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
                lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
                return lWordArray;
            };

            function WordToHex(lValue) {
                var WordToHexValue = "", WordToHexValue_temp = "", lByte, lCount;
                for (lCount = 0; lCount <= 3; lCount++) {
                    lByte = (lValue >>> (lCount * 8)) & 255;
                    WordToHexValue_temp = "0" + lByte.toString(16);
                    WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);
                }
                return WordToHexValue;
            };

            function Utf8Encode(string) {
                string = string.replace(/\r\n/g, "\n");
                var utftext = "";

                for (var n = 0; n < string.length; n++) {

                    var c = string.charCodeAt(n);

                    if (c < 128) {
                        utftext += String.fromCharCode(c);
                    }
                    else if ((c > 127) && (c < 2048)) {
                        utftext += String.fromCharCode((c >> 6) | 192);
                        utftext += String.fromCharCode((c & 63) | 128);
                    }
                    else {
                        utftext += String.fromCharCode((c >> 12) | 224);
                        utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                        utftext += String.fromCharCode((c & 63) | 128);
                    }

                }

                return utftext;
            };

            var x = Array();
            var k, AA, BB, CC, DD, a, b, c, d;
            var S11 = 7, S12 = 12, S13 = 17, S14 = 22;
            var S21 = 5, S22 = 9 , S23 = 14, S24 = 20;
            var S31 = 4, S32 = 11, S33 = 16, S34 = 23;
            var S41 = 6, S42 = 10, S43 = 15, S44 = 21;

            string = Utf8Encode(string);

            x = ConvertToWordArray(string);

            a = 0x67452301;
            b = 0xEFCDAB89;
            c = 0x98BADCFE;
            d = 0x10325476;

            for (k = 0; k < x.length; k += 16) {
                AA = a;
                BB = b;
                CC = c;
                DD = d;
                a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
                d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
                c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);
                b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
                a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
                d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
                c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);
                b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);
                a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);
                d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
                c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
                b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
                a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);
                d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);
                c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);
                b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);
                a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
                d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);
                c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
                b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
                a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
                d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);
                c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
                b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
                a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
                d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
                c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
                b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
                a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
                d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
                c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
                b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
                a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
                d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);
                c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
                b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
                a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
                d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
                c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
                b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
                a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
                d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
                c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
                b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);
                a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
                d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
                c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
                b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
                a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);
                d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);
                c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
                b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);
                a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);
                d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
                c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
                b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);
                a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
                d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
                c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);
                b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
                a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);
                d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
                c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
                b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);
                a = AddUnsigned(a, AA);
                b = AddUnsigned(b, BB);
                c = AddUnsigned(c, CC);
                d = AddUnsigned(d, DD);
            }

            var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);

            return temp.toLowerCase();
        },

        xml2Json: function (xml, tab) {
            var X = {
                toObj: function (xml) {
                    var o = {};
                    //debugger;
                    if (xml.nodeType == 1) {   // element node ..
                        if (xml.attributes.length)   // element with attributes  ..
                            for (var i = 0; i < xml.attributes.length; i++)
                                o["@" + xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue || "").toString();
                        if (xml.firstChild) { // element has child nodes ..
                            var textChild = 0, cdataChild = 0, hasElementChild = false;
                            for (var n = xml.firstChild; n; n = n.nextSibling) {
                                if (n.nodeType == 1) hasElementChild = true;
                                else if (n.nodeType == 3 && n.nodeValue.match(/[^ \f\n\r\t\v]/)) textChild++; // non-whitespace text
                                else if (n.nodeType == 4) cdataChild++; // cdata section node
                            }
                            if (hasElementChild) {
                                if (textChild < 2 && cdataChild < 2) { // structured element with evtl. a single text or/and cdata node ..
                                    X.removeWhite(xml);
                                    for (var n = xml.firstChild; n; n = n.nextSibling) {
                                        if (n.nodeType == 3)  // text node
                                            o["#text"] = X.escape(n.nodeValue);
                                        else if (n.nodeType == 4)  // cdata node
                                            o["#cdata"] = X.escape(n.nodeValue);
                                        else if (o[n.nodeName]) {  // multiple occurence of element ..
                                            if (o[n.nodeName] instanceof Array)
                                                o[n.nodeName][o[n.nodeName].length] = X.toObj(n);
                                            else
                                                o[n.nodeName] = [o[n.nodeName], X.toObj(n)];
                                        }
                                        else  // first occurence of element..
                                            o[n.nodeName] = X.toObj(n);
                                    }
                                }
                                else { // mixed content
                                    if (!xml.attributes.length)
                                        o = X.escape(X.innerXml(xml));
                                    else
                                        o["#text"] = X.escape(X.innerXml(xml));
                                }
                            }
                            else if (textChild) { // pure text
                                if (!xml.attributes.length)
                                    o = X.escape(X.innerXml(xml));
                                else
                                    o["#text"] = X.escape(X.innerXml(xml));
                            }
                            else if (cdataChild) { // cdata
                                if (cdataChild > 1)
                                    o = X.escape(X.innerXml(xml));
                                else
                                    for (var n = xml.firstChild; n; n = n.nextSibling)
                                        o["#cdata"] = X.escape(n.nodeValue);
                            }
                        }
                        if (!xml.attributes.length && !xml.firstChild) o = null;
                    }
                    else if (xml.nodeType == 9) { // document.node
                        o = X.toObj(xml.documentElement);
                    }
                    else
                        alert("unhandled node type: " + xml.nodeType);
                    return o;
                },
                toJson: function (o, name, ind) {
                    var json = name ? ("\"" + name + "\"") : "";
                    if (o instanceof Array) {
                        for (var i = 0, n = o.length; i < n; i++)
                            o[i] = X.toJson(o[i], "", ind + "\t");
                        json += (name ? ":[" : "[") + (o.length > 1 ? ("\n" + ind + "\t" + o.join(",\n" + ind + "\t") + "\n" + ind) : o.join("")) + "]";
                    }
                    else if (o == null)
                        json += (name && ":") + "null";
                    else if (typeof(o) == "object") {
                        var arr = [];
                        for (var m in o)
                            arr[arr.length] = X.toJson(o[m], m, ind + "\t");
                        json += (name ? ":{" : "{") + (arr.length > 1 ? ("\n" + ind + "\t" + arr.join(",\n" + ind + "\t") + "\n" + ind) : arr.join("")) + "}";
                    }
                    else if (typeof(o) == "string")
                        json += (name && ":") + "\"" + o.toString() + "\"";
                    else
                        json += (name && ":") + o.toString();
                    return json;
                },
                innerXml: function (node) {
                    var s = ""
                    if ("innerHTML" in node)
                        s = node.innerHTML;
                    else {
                        var asXml = function (n) {
                            var s = "";
                            if (n.nodeType == 1) {
                                s += "<" + n.nodeName;
                                for (var i = 0; i < n.attributes.length; i++)
                                    s += " " + n.attributes[i].nodeName + "=\"" + (n.attributes[i].nodeValue || "").toString() + "\"";
                                if (n.firstChild) {
                                    s += ">";
                                    for (var c = n.firstChild; c; c = c.nextSibling)
                                        s += asXml(c);
                                    s += "</" + n.nodeName + ">";
                                }
                                else
                                    s += "/>";
                            }
                            else if (n.nodeType == 3)
                                s += n.nodeValue;
                            else if (n.nodeType == 4)
                                s += "<![CDATA[" + n.nodeValue + "]]>";
                            return s;
                        };
                        for (var c = node.firstChild; c; c = c.nextSibling)
                            s += asXml(c);
                    }
                    return s;
                },
                escape: function (txt) {
                    return txt.replace(/[\\]/g, "\\\\")
                        .replace(/[\"]/g, '\\"')
                        .replace(/[\n]/g, '\\n')
                        .replace(/[\r]/g, '\\r');
                },
                removeWhite: function (e) {
                    e.normalize();
                    for (var n = e.firstChild; n;) {
                        if (n.nodeType == 3) {  // text node
                            if (!n.nodeValue.match(/[^ \f\n\r\t\v]/)) { // pure whitespace text node
                                var nxt = n.nextSibling;
                                e.removeChild(n);
                                n = nxt;
                            }
                            else
                                n = n.nextSibling;
                        }
                        else if (n.nodeType == 1) {  // element node
                            X.removeWhite(n);
                            n = n.nextSibling;
                        }
                        else                      // any other node
                            n = n.nextSibling;
                    }
                    return e;
                }
            };
            if (xml.nodeType == 9) // document node
                xml = xml.documentElement;
            var nws = X.removeWhite(xml);
            var obj = X.toObj(nws);
            var json = X.toJson(obj, xml.nodeName, "\t");
            //debugger;
            return "{\n" + (tab ? json.replace(/\t/g, tab) : json.replace(/\t|\n/g, "")) + "\n}";
        },

        scrollTo: function (element, duration, addPixels) {
            duration = (duration && typeof(duration) == 'number') ? duration : 300;
            addPixels = (addPixels && typeof(addPixels) == 'number') ? addPixels : 0;
            $('html, body').stop().animate({
                scrollTop: $(element).offset().top + addPixels
            }, {queue: false, duration: duration});
        },

        timer: function (funct, msec) {
            if (typeof(funct) == 'function' && msec && typeof(msec) == 'number') {
                setTimeout(funct, msec);
            }
        },

        camelToDash: function (str) {
            return str.replace(/\W+/g, '-')
                .replace(/([a-z\d])([A-Z])/g, '$1-$2');
        },

        dashToCamel: function (str) {
            return str.replace(/\W+(.)/g, function (x, chr) {
                return chr.toUpperCase();
            });
        },

        isMobile: {
            Android: function () {
                return navigator.userAgent.match(/Android/i) ? true : false;
            },
            BlackBerry: function () {
                return navigator.userAgent.match(/BlackBerry/i) ? true : false;
            },
            iOS: function () {
                return navigator.userAgent.match(/iPhone|iPad|iPod/i) ? true : false;
            },
            Windows: function () {
                return navigator.userAgent.match(/IEMobile/i) ? true : false;
            },
            any: function () {
                return (
                    App.utils.isMobile.Android()
                        || App.utils.isMobile.BlackBerry()
                        || App.utils.isMobile.iOS()
                        || App.utils.isMobile.Windows()
                    );
            }
        },

        formToObject: function (form) {
            var query = $(form).serialize();
            var re = /([^&=]+)=?([^&]*)/g;
            var decodeRE = /\+/g; // Regex for replacing addition symbol with a space
            var decode = function (str) {
                return decodeURIComponent(str.replace(decodeRE, " "));
            };
            var parseParams = function (query) {
                var params = {}, e;
                while (e = re.exec(query)) {
                    var k = decode(e[1]), v = decode(e[2]);
                    if (k.substring(k.length - 2) === '[]') {
                        k = k.substring(0, k.length - 2);
                        (params[k] || (params[k] = [])).push(v);
                    }
                    else params[k] = v;
                }
                return params;
            };

            return parseParams(query);
        }
    },

    cookie: {
        set: function (name, value, expires, path, domain, secure) {
            document.cookie = name + "=" + value +
                ((expires) ? "; expires=" + expires : "") +
                ((path) ? "; path=" + path : "") +
                ((domain) ? "; domain=" + domain : "") +
                ((secure) ? "; secure" : "");
        },

        get: function (name) {
            var cookie = " " + document.cookie;
            var search = " " + name + "=";
            var setStr = null;
            var offset = 0;
            var end = 0;
            if (cookie.length > 0) {
                offset = cookie.indexOf(search);
                if (offset != -1) {
                    offset += search.length;
                    end = cookie.indexOf(";", offset)
                    if (end == -1) {
                        end = cookie.length;
                    }
                    setStr = cookie.substring(offset, end);
                }
            }

            return(setStr);
        },
        remove: function (name) {
            this.set(name, '', 'Thu, 01-Jan-1970 00:00:01 GMT');
        }
    },

    ZIndex: {
        value: 10000,

        get: function () {
            App.ZIndex.value++;
            return App.ZIndex.value - 1;
        }
    },

    form: {
        populate: function (frm, data) {
            $.each(data, function (key, value) {
                var $ctrl = $('[name=' + key + ']', frm);
                switch ($ctrl.attr("type")) {
                    case "text" :
                    case "hidden":
                    case "textarea":
                        $ctrl.val(value);
                        break;
                    case "radio" :
                    case "checkbox":
                        $ctrl.each(function () {
                            if ($(this).attr('value') == value) {
                                $(this).attr("checked", value);
                            }
                        });
                        break;
                    default:
                        $ctrl.val(value);
                        break;
                }
            });
        },

        reset: function (frm) {
            frm = $(frm);
            frm[0].reset();
        }
    },

    event: {
        click: function () {
            return (!App.utils.isMobile.iOS()) ? 'click' : 'touchstart';
        }
    },

    init: function (config) {
        // Override config via init()
        if (config && typeof(config) == 'object') {
            $.extend(App.config, config);
        }

        if (null !== App.moduleName && null !== App.controllerName && null !== App.actionName) {

            /* Execute MVC callbacks */
            var mvcModule = eval('App.module.' + App.utils.dashToCamel(App.moduleName));
            if (mvcModule && typeof(mvcModule) == 'object') {
                var mvcController = eval('mvcModule.' + 'controllers[\'' + App.utils.dashToCamel(App.controllerName) + '\']');
                if (mvcController && typeof(mvcController) == 'object') {
                    if (mvcController._init && typeof(mvcController._init) == 'function') {
                        mvcController._init();
                    }
                    var mvcAction = eval('mvcController[\'' + App.utils.dashToCamel(App.actionName) + '\']');
                    if (mvcAction && typeof(mvcAction) == 'function') {
                        mvcAction();
                    }
                }
            }

            /* Execute routes callbacks */
            App.onReady(function () {
                if (App.routeName in App.routesCollection) {
                    for (var i = 0; i < App.routesCollection[App.routeName].length; i++) {
                        App.routesCollection[App.routeName][i]();
                    }
                }
            });
        }

        // Fire events on document ready
        App.onReady(function () {
            // Auto hide notifications
            window.setTimeout(function () {
                $('div.b-info-line:visible').fadeOut(300, function () {
                    $('div.b-info-line:visible').remove();
                });
            }, 5000);
            // Notification events
            $('div.b-info-line:visible').find('div.mid').live('click', function (event) {
                $(this).parents('div.b-info-line').fadeOut(300, function () {
                    $(this).remove();
                });
                event.preventDefault();
            });
        });
    },

    // Wrapper for init() without config
    reinit: function () {
        App.init();
    },

    onReady: function (eventFunction) {
        if (typeof(eventFunction) == 'function') {
            $(eventFunction);
        } else if (typeof(eventFunction) == 'string' && eventFunction in window) {
            if (_ef = eval(eventFunction.replace('()', ''))) {
                _ef();
            }
        }
    },

    // Logger
    log: function () {
        if (window.console) return console.log(Array.prototype.slice.call(arguments));
    },

    assets: {
        module: {
            image: function (moduleName, path) {
                return App.assets.module._assemblePath('images', moduleName, path);
            },

            javascript: function (moduleName, path) {
                return App.assets.module._assemblePath('js', moduleName, path);
            },

            stylesheet: function (moduleName, path) {
                return App.assets.module._assemblePath('css', moduleName, path);
            },

            flash: function (moduleName, path) {
                return App.assets.module._assemblePath('flash', moduleName, path);
            },

            common: function (moduleName, path) {
                return App.assets.module._assemblePath('common', moduleName, path);
            },

            _assemblePath: function (resType, moduleName, path) {
                resType = App.config.interface + '/' + resType;
                _path = App.config.assets.paths.module;

                return _path.replace(':basePath', App.config.basePath)
                    .replace(':moduleName', moduleName)
                    .replace(':resource', resType)
                    .replace(':path', path)
                    .replace(new RegExp(/\/+/g), '/')
                    .replace(':/', '://');
            }
        },

        theme: {
            image: function (path) {
                return App.assets.theme._assemblePath('images', path);
            },

            javascript: function (path) {
                return App.assets.theme._assemblePath('js', path);
            },

            stylesheet: function (path) {
                return App.assets.theme._assemblePath('css', path);
            },

            flash: function (path) {
                return App.assets.theme._assemblePath('flash', path);
            },

            common: function (path) {
                return App.assets.theme._assemblePath('common', path);
            },

            _assemblePath: function (resType, path) {
                _path = App.config.assets.paths.theme;

                return _path.replace(':basePath', App.config.basePath)
                    .replace(':theme', App.config.theme)
                    .replace(':resource', resType)
                    .replace(':path', path)
                    .replace(new RegExp(/\/+/g), '/')
                    .replace(':/', '://');
            }
        },

        common: {
            image: function (path) {
                return App.assets.common._assemblePath('images', path);
            },

            javascript: function (path) {
                return App.assets.common._assemblePath('js', path);
            },

            stylesheet: function (path) {
                return App.assets.common._assemblePath('css', path);
            },

            flash: function (path) {
                return App.assets.common._assemblePath('flash', path);
            },

            common: function (path) {
                return App.assets.common._assemblePath('common', path);
            },

            _assemblePath: function (resType, path) {
                resType = App.config.interface + '/' + resType;
                _path = App.config.assets.paths.common;

                return _path.replace(':basePath', App.config.basePath)
                    .replace(':resource', resType)
                    .replace(':path', path)
                    .replace(new RegExp(/\/+/g), '/')
                    .replace(':/', '://');
            }
        },
        avatar: function (file) {
            var _path = App.config.assets.paths.avatar;

            return _path.replace(':basePath', App.config.basePath)
                .replace(':path', file)
                .replace(new RegExp(/\/+/g), '/')
                .replace(':/', '://');
        }
    },

    // Dialog
    dialog: {
        // App.dialog.notice
        notice: function (title, message, options) {
            type = 'notice';
            return App.dialog._typePrepare(title, message, options, type);
        },

        // App.dialog.info
        info: function (title, message, options) {
            type = 'info';
            return App.dialog._typePrepare(title, message, options, type);
        },

        // App.dialog.error
        error: function (title, message, options) {
            type = 'error';
            return App.dialog._typePrepare(title, message, options, type);
        },

        _typePrepare: function (title, message, options, type) {
            if (!$.isPlainObject(title)) {
                if ('object' != typeof(options)) {
                    options = {};
                }
                options.title = title;
                options.message = message;
            }
            if (!type) {
                type = 'notice';
            }
            options.type = type;

            return App.dialog.open(options);
        },

        // App.dialog.yesNo
        yesNo: function (title, message, onYes, onNo, options) {
            if (!$.isPlainObject(title)) {
                if ('object' != typeof(options)) {
                    options = {};
                }
                options.title = title;
                options.message = message;
                if ('onYes' in options) {
                    onYes = options.onYes;
                }
                if ('onNo' in options) {
                    onNo = options.onNo;
                }
            }
            options.type = 'notice';
            options.buttons = {
                Yes: function () {
                    if (jQuery.isFunction(onYes)) {
                        onYes();
                    }
                    $(this).dialog("close");
                },
                No: function () {
                    if (jQuery.isFunction(onNo)) {
                        onNo();
                    }
                    $(this).dialog("close");
                }
            }

            return App.dialog.open(options);
        },

        // App.dialog.open
        open: function (title, message, options) {
            if ($.isPlainObject(title)) {
                options = title;
            } else {
                if ('object' != typeof(options)) {
                    options = {};
                }

                // append "title" options property
                if (typeof(title) == 'string') {
                    if (!("title" in options)) {
                        options.title = title;
                    }
                }
                // append "message" options property
                if (typeof(message) == 'string') {
                    if (!("message" in options)) {
                        options.message = message;
                    }
                }
            }

            // dialog type
            if (!("type" in options)) {
                options.type = 'notice';
            }

            switch (options.type) {
                case 'notice':
                case 'info':
                case 'error':
                    imgName = 'dialog-' + options.type;
                    break;

                default:
                    imgName = 'dialog-notice';
                    break;
            }

            titleImg = '<img style="padding-right:5px; float:left; display:inline;" src="' + App.assets.common.image('icons/' + imgName + '.png') + '" />';

            // modal defaults
            defaults = {
                resizable: false,
                modal: true,
                draggable: true,
                title: titleImg + 'Dialog:',
                message: '<p>Empty message...</p>',
                buttons: {
                    Ok: function () {
                        $(this).dialog("close");
                    }
                }
            }

            // combine options
            options = $.extend(defaults, options);

            options.title = '<div style="' + 'line-height:16px;">' + titleImg + options.title + '</div>';

            // checking for right xpath or html in message or leave message as plain text
            msgContent = $(options.message).html();
            if (null === msgContent) {
                options.message = '<p>' + options.message + '</p>'
            }

            $(options.message).dialog(options);
        }
    },

    // Notification types
    notify: {
        error: function (message) {
            App.notify.show('error', message)
        },

        success: function (message) {
            App.notify.show('success', message)
        },

        info: function (message) {
            App.notify.show('info', message)
        },

        show: function (type, message) {
            switch (type) {
                case 'error':
                    _subClass = 'error-line';
                    break;
                case 'success':
                    _subClass = 'success-line';
                    break;
                case 'info':
                    _subClass = '';
                    break;
            }
            _blankBlock = $('div.b-info-line:hidden');
            _cloned = _blankBlock.clone().removeClass('hidden');
            if ('' != _subClass) _cloned.addClass(_subClass);
            _cloned.find('span.notify-msg').html(message);
            _blankBlock.before(_cloned);
            App.utils.scrollTo($('div.b-info-line:first'));

            delete _cloned, _blankBlock;
        }
    },

    // Ajax functions
    remote: {
        load: function (id, url) {
            App.remote.initPreloader();
            $('#' + id).load(url);
        },

        get: function (url, data, callback, type) {
            return App.remote.request('get', url, data, callback, type);
        },

        post: function (url, data, callback, type) {
            return App.remote.request('post', url, data, callback, type);
        },

        request: function (requestType, url, data, callback, type) {
            App.remote.initPreloader();

            var complete = function (result) {
            };
            var success = function (result) {
            };
            var error = function (result) {
            };

            if (jQuery.isPlainObject(url)) {
                if (jQuery.isFunction(url.success)) {
                    success = url.success;
                }

                if (jQuery.isFunction(url.error)) {
                    error = url.error;
                }

                if (jQuery.isFunction(url.complete)) {
                    complete = url.complete;
                }

                if (jQuery.isPlainObject(url.data)) {
                    data = url.data;
                }

                if (url.url) {
                    url = url.url;
                }
            }

            var onComplete = function (response) {
                if (jQuery.isPlainObject(response)) {
                    var result = App.remote.parseResult(response.responseText);
                } else {
                    var result = {};
                }

                App.dynamic.event().trigger('remote.request.complete', {
                    result: result
                });

                // fire complete event
                complete(result);

                if (!jQuery.isPlainObject(result.data)) {
                    App.notify.error(response.responseText);
                    return;
                }

                if (result.data.isSuccess()) {
                    success(result);
                } else if (result.data.isError()) {
                    error(result);
                }
            }

            if (jQuery.isFunction(data)) {
                callback = data;
                data = null;
            }

            switch (requestType) {
                case 'post':
                    App.dynamic.event().trigger('remote.request.post', {
                        url: url, data: data
                    });
                    return $.post(url, data, callback, type).complete(onComplete);
                    break;

                case 'get':
                    App.dynamic.event().trigger('remote.request.get', {
                        url: url, data: data
                    });
                    return $.get(url, data, callback, type).complete(onComplete);
                    break;
            }
        },

        parseResult: function (result, asIs) {
            pType = 'unknown';
            parsed = null;

            try {
                if ($.isPlainObject(result)) {
                    parsed = result;
                } else {
                    parsed = $.parseJSON(result);
                }
                pType = 'json';
            } catch (jEx) {
                try {
                    parsed = $.parseXML(result);
                    pType = 'xml';
                } catch (xEx) {
                    parsed = null;
                    pType = 'unknown';
                }
            }

            if (null !== parsed) {
                if ('xml' == pType) {
                    parsed = App.utils.xml2Json(parsed);
                    parsed = $.parseJSON(parsed);
                }

                App.remote._result.setResponse(parsed);
                parsed = App.remote._result;
            }

            if (asIs) {
                parsed = result;
                pType = 'unknown'
            }

            return {
                status: (null !== parsed) ? 'success' : 'error',
                type: pType,
                data: parsed
            }
        },

        _result: {
            _response: {},

            setResponse: function (responseData) {
                if (responseData && typeof(responseData) == 'object') {
                    App.remote._result._response = responseData.response;

                    return App.remote._result;
                }
            },

            getServerTime: function () {
                return App.remote._result._get('server_time')
            },

            getType: function () {
                return App.remote._result._get('response_type')
            },

            isError: function () {
                if ('error' == App.remote._result.getType()) {
                    return true;
                }

                return false;
            },

            isSuccess: function () {
                if ('success' == App.remote._result.getType()) {
                    return true;
                }

                return false;
            },

            getCode: function () {
                return App.remote._result._get('code')
            },

            getMessage: function () {
                return App.remote._result._get('message')
            },

            getOutput: function () {
                return App.remote._result._get('output')
            },

            getModule: function () {
                return App.remote._result._get('module')
            },

            getController: function () {
                return App.remote._result._get('controller')
            },

            getAction: function () {
                return App.remote._result._get('action')
            },

            getParam: function (paramName) {
                _params = App.remote._result._get('params');

                if (null !== _params) {
                    _param = eval('_params.' + paramName);

                    if (_param) {
                        return _param;
                    }
                }

                return null;
            },

            getParams: function () {
                return App.remote._result._get('params')
            },

            _get: function (_param) {
                _param = eval('App.remote._result._response.' + _param);
                if (_param) {
                    return _param;
                }

                return null;
            }
        },

        initPreloader: function () {
            // Apply ajax event handlers
            if (true === App.config.ajax.useDefaultEventHandlers) {
                $.ajaxSetup({
                    beforeSend: App.config.ajax.before,
                    complete: App.config.ajax.after,
                    error: App.config.ajax.error
                });
            }
        }
    },

    /**
     * Ajax Iframe method
     *
     * @example:
     * var onStartHandler = function() {
     *     $('div.preloader').show();
     * }
     * var onCompleteHandler = function(response) {
     *     $('div.preloader').hide();
     *     $('div.result').html(response);
     * }
     * $('form.send').bind('submit', function (event) {
     *     return App.remoteIframe.submit(this, {'onStart' : onStartHandler, 'onComplete' : onCompleteHandler})
     * });
     */
    remoteIframe: {

        frame: function (c) {
            var n = 'f' + Math.floor(Math.random() * 99999);
            var d = document.createElement('DIV');
            d.innerHTML = '<iframe style="display:none;" src="about:blank" id="' + n + '" name="' + n + '" onload="App.remoteIframe.loaded(\'' + n + '\')"></iframe>';
            document.body.appendChild(d);

            var i = document.getElementById(n);
            if (c && typeof(c.onComplete) == 'function') {
                i.onComplete = c.onComplete;
            }

            return n;
        },

        form: function (f, name) {
            f.setAttribute('target', name);
        },

        submit: function (f, c) {
            App.remoteIframe.form(f, App.remoteIframe.frame(c));
            if (c && typeof(c.onStart) == 'function') {
                return c.onStart();
            } else {
                return true;
            }
        },

        loaded: function (id) {
            var i = document.getElementById(id);
            if (i.contentDocument) {
                var d = i.contentDocument;
            } else if (i.contentWindow) {
                var d = i.contentWindow.document;
            } else {
                var d = window.frames[id].document;
            }
            if (d.location.href == "about:blank") {
                return;
            }

            if (typeof(i.onComplete) == 'function') {
                i.onComplete(d.body.innerHTML);
            }
        }
    },

    module: {

        extend: function (module) {
            if (module && typeof(module) == 'object') {
                $.extend(App.module, module);
            }
        }
    }
});


/**
 * Dynamic - is new client-side extension for UseResponse 3.0.
 *
 * @type {{error: {system: Function}, helper: {getElement: Function}, modal: {center: Function, openFromUrl: Function, open: Function}, overlay: {show: Function, hide: Function}}}
 */
App.dynamic = {
    /**
     * Handling Errors.
     */
    error: {
        /**
         * Raises system error.
         *
         * @param string text
         * @param int code
         */
        system: function (text, code) {
            var err = "Application Error:\n\n" + text;
            if (code) {
                err += "\n\nCode: " + code;
            }
            alert(err);
        }
    },

    event: function () {
        /**
         * Events container
         *
         * @var jQuery
         */
        var eventContainer = $('body:first');

        /**
         * Application namespace
         *
         * @var String
         */
        var baseNamespace = '.useresponse_events';

        // Public interface
        return {
            /**
             * Bind event handler
             *
             * @param String event
             * @param Function callback
             */
            'bind': function (event, callback) {
                var events = event.split(' ');
                var new_events = [];
                $.each(events, function (index, event_name) {
                    if (event_name = $.trim(event_name)) {
                        new_events.push(event_name + baseNamespace);
                    }
                });

                eventContainer.bind(new_events.join(' '), callback);
            },

            /**
             * Unbind event handlers
             *
             * @param String event
             */
            'unbind': function (event) {
                if (event == undefined) {
                    // unbind all
                    eventContainer.unbind(baseNamespace);
                    return true;
                }
                var events = event.split(' ');
                var new_events = [];
                $.each(events, function (index, event_name) {
                    if (event_name = $.trim(event_name)) {
                        new_events.push(event_name + baseNamespace);
                    }
                });

                eventContainer.unbind(new_events.join(' '));
            },

            /**
             * Trigger specific event
             *
             * @param String event
             * @param mixed params
             */
            'trigger': function (event, params) {
                // if we are in development, and console is availabled
                if (App.isInDevelopment() && typeof(console) != 'undefined' && console && console.log) {
                    if (jQuery.inArray(event, ['history_state_changed', 'content_updated', 'single_content_updated', 'window_resize', 'keydown', 'window_resize_start', 'window_resize_end', 'navigate_away']) == -1) {
                        console.log('EVENT triggered', event, params);
                    }
                }

                if (event == undefined) {
                    event = '';
                }

                eventContainer.trigger(event + baseNamespace, params);
            }
        }
    },

    /**
     * Various helpers.
     */
    helper: {
        /**
         * jQuerify input element.
         *
         * @param   mixed mixed
         * @returns {*|jQuery|HTMLElement}
         */
        getElement: function (mixed) {
            var element = $(mixed);
            if (0 == element.length) {
                return App.dynamic.error.system('Invalid Element selector/object', 1);
            }
            return $(mixed);
        },

        makeUniqId: function (prefix) {
            return prefix + '_' + $.now() + "_" + Math.floor((Math.random() * 100) + 1);
        }
    },

    scrollbar: function (el) {
        $(el).rollbar({
            zIndex: 100,
            lazyCheckScroll: 100,
            blockGlobalScroll: true,
            pathPadding: "10px"
        });
    },

    preloader: {
        show: function () {
            var pClass = 'dynamicPreloader',
                preloader = $('<div></div>')
                    .attr('id', App.dynamic.helper.makeUniqId('preloader'))
                    .addClass(pClass)
                    .css('z-index', App.ZIndex.get())
                    .html(App.t('Loading &#8230'))
                    .appendTo('body');
            App.dynamic.modal.center(preloader);
            $(window).on('resize', function () {
                App.dynamic.modal.center(preloader);
            });
        },

        hide: function () {

        }
    },

    /**
     * Modal windows.
     */
    modal: {
        defaults: {
            minMarginTop: function () {
                var topBar = $('#top-bar'),
                    topBarHeight = 20;
                if (topBar.is('div')) {
                    topBarHeight = topBarHeight + topBar[0].offsetHeight;
                }
                return topBarHeight;
            },
            minMarginBottom: function () {
                return 20;
            }
        },

        checkFooter: function (modal) {
            var footer = modal.find('div.modalFooter'),
                scrollable = modal.find('div.modalScrollable');
            if (footer.is('div') && 'none' != footer.css('display') && footer.is(':visible')) {
                scrollable.removeClass('withoutModalFooter');
            } else {
                scrollable.addClass('withoutModalFooter');
            }
        },

        recalculateModalScrollable: function (modal) {
            var headerHeight = modal.find('div.modalHeader').innerHeight();
            if (headerHeight) {
                modal.find('div.modalScrollable').css({top: headerHeight + 'px'});
            }
        },

        /**
         * Centers modal dialog.
         *
         * @param string|jQuery el  Element to center
         * @param string axis       Center according given axis ordinates. Valid values are:
         *                          'x', 'y' or 'xy'
         */
        center: function (el, axis) {
            if (!axis || '' == axis) axis = 'xy';
            el = App.dynamic.helper.getElement(el);
            var elWidth = el.width(),
                elHeight = el.height(),
                winWidth = $(window).width(),
                winHeight = $(window).height(),
                leftPos = Math.round(winWidth / 2) - Math.round(elWidth / 2),
                topPos = Math.round(winHeight / 2) - Math.round(elHeight / 2),
                coords = {left: 1, top: App.dynamic.modal.defaults.minMarginTop()};
            if (elWidth < winWidth)   coords.left = leftPos;
            if (elHeight < winHeight) coords.top = (coords.top < topPos) ? topPos : coords.top;
            if ('x' == axis) delete coords.top;
            if ('y' == axis) delete coords.left;
            el.css(coords);
        },

        fitContent: function (el) {
            el = App.dynamic.helper.getElement(el);
            if (el.is('.modal')) {
                App.dynamic.modal.checkFooter(el);
                var headerHeight = function () {
                        var header = el.find('div.modalHeader').eq(0);
                        if (header.is('div')) {
                            return header[0].offsetHeight;
                        }
                        return 0;
                    },
                    footerHeight = function () {
                        var footer = el.find('div.modalFooter').eq(0);
                        if (footer.is('div:visible')) {
                            return footer[0].offsetHeight;
                        }
                        return -1;
                    },
                    windowHeight = $(window).height(),
                    scrollables = el.find('div.modalScrollable');

                if (0 == scrollables.length) {
                    return;
                }

                var highestHeight = parseInt(el.css('min-height'));

                var scrollable = scrollables.filter(':visible');
                if (0 == scrollable.length) {
                    return;
                }
                //highestHeight = scrollable[0].scrollHeight;
                highestHeight = scrollable.eq(0).prop('scrollHeight');

                var marginsSum = App.dynamic.modal.defaults.minMarginTop() + App.dynamic.modal.defaults.minMarginBottom(),
                    totalHeight = windowHeight - marginsSum,
                    sequenceHeight = highestHeight + headerHeight() + footerHeight();

                if (sequenceHeight < totalHeight) {
                    totalHeight = sequenceHeight;
                } else {
                    //scrollables.trigger('rollbar');
                }

                var rollbarContent = el.find('div.rollbar-content:visible').eq(0),
                    rollbarHeight = rollbarContent.outerHeight(true);

                if (rollbarHeight > 0 && rollbarContent.is('div')) {
                    rollbarHeight = rollbarHeight + headerHeight() + footerHeight()
                    if (rollbarHeight < totalHeight) {
                        /* TODO: Needs to be refactored */
                        totalHeight = rollbarHeight;
                        //totalHeight = totalHeight - (totalHeight - rollbarContent.height());
                    }
                }


                //el.height(totalHeight);
                el.css('height', totalHeight + 'px');
            }
        },

        /**
         * Opens new Modal Dialog using ajax
         *
         * @param options
         * @returns {{modal: *, close: Function, setTitle: Function, getTitle: Function, setContent: Function, getContent: Function, removeWrapperClass: Function, setWrapperClass: Function, showShader: Function, hideShader: Function}}
         */
        openFromUrl: function (options) {
            var defaults = {
                autoNotifySuccess: true,
                autoNotifyError: true,
                complete: function (instance) {
                },
                modal: {},
                request: {
                    type: 'get',
                    url: null,
                    data: {
                        format: 'json'
                    },
                    complete: function (response) {
                    },
                    success: function (response) {
                    },
                    error: function (response) {
                    }
                }
            };
            var settings = $.extend(true, {}, defaults, options);

            /* Force preloader injection as modal content */
            settings.modal.content = $('<div></div>').css({
                background: 'url("' + App.assets.common.image('/modal_preloader.gif') + '") no-repeat scroll center center',
                width: '100%',
                height: '150px',
                marginTop: '10%'
            });

            if (jQuery.inArray(settings.request.type, ['get', 'post']) == -1) {
                settings.request.type = 'get';
            }
            if (jQuery.inArray(settings.request.data.format, ['json', 'xml']) == -1) {
                settings.request.data.format = 'json';
            }

            /**
             * Returns sanitized message from response object.
             *
             * @param Object response
             * @returns {String|null}
             */
            var getMessage = function (response) {
                var msg = $.trim(response.data.getMessage());
                if ('' == msg || 'Undefined' == msg || typeof(msg) == 'undefined' || null === msg || 0 === msg) {
                    return null;
                }
                return msg;
            };

            /**
             * Returns sanitized output from response object.
             *
             * @param Object response
             * @returns {String|null}
             */
            var getContent = function (response) {
                var out = $.trim(response.data.getOutput());
                if ('' == out || typeof(out) == 'undefined' || null === out || 0 === out) {
                    return null;
                }
                return out;
            };

            var modalInstance = App.dynamic.modal.open(settings.modal);

            // Complete callback
            if (!jQuery.isFunction(settings.request.complete)) {
                settings.request.complete = function (response) {
                };
            }
            var userComplete = settings.request.complete;
            settings.request.complete = function (response) {
                userComplete(response);
            };

            // Success callback
            if (!jQuery.isFunction(settings.request.success)) {
                settings.request.success = function (response) {
                };
            }

            var userSuccess = settings.request.success;
            settings.request.success = function (response) {
                userSuccess(response);
                if (settings.autoNotifySuccess) {
                    var message = getMessage(response);
                    if (null !== message) App.notify.success(message);
                }
                var title = response.data.getParam('title');
                if (title) {
                    modalInstance.setTitle(title);
                }
                var headerContent = response.data.getParam('headerContent');
                if (headerContent) {
                    modalInstance.setHeaderContent(headerContent);
                }
                modalInstance.setContent(getContent(response));

                var modalContent = modalInstance.getContent(true);
                if (modalInstance.settings.useCustomScroller) {
                    App.dynamic.scrollbar(modalContent.find('.modalScrollable'));
                }

                /* Complete callback */
                settings.complete(modalInstance);

                setTimeout(function () {
                    $(window).trigger('resize');
                }, 200);
            };

            // Error callback
            if (!jQuery.isFunction(settings.request.error)) {
                settings.request.error = function (response) {
                };
            }
            var userError = settings.request.error;
            settings.request.error = function (response) {
                userError(response);
                if (settings.autoNotifyError) {
                    var message = getMessage(response);
                    if (null !== message) App.notify.error(message);
                }
            };

            App.remote.request(
                settings.request.type,
                settings.request
            );

            return modalInstance;
        },

        /**
         * Opens new modal dialog.
         *
         * @param options
         * @returns {{modal: *, close: Function, setTitle: Function, getTitle: Function, setContent: Function, getContent: Function, removeWrapperClass: Function, setWrapperClass: Function, showShader: Function, hideShader: Function}}
         */
        open: function (options) {
            var defaults = {
                name: App.dynamic.helper.makeUniqId('modal'),
                width: 500,
                autoResize: true,
                useWrapper: true,
                widthClass: null,
                wrapperClass: 'modalContentWrapper',
                closeOnEscape: true,
                overlay: true,
                title: App.t("Dialog"),
                headerContent: '',
                content: null,
                shader: true,
                useCustomScroller: true,
                success: function () {
                }
            };

            var modalId = App.dynamic.helper.makeUniqId('modal'),
                instance = $('<div class="modal"></div>').appendTo('body').attr('id', modalId),
                header = $('<div class="modalHeader unselectable"></div>').appendTo(instance),
                title = $('<span class="modalTitle"></span>').appendTo(header),
                headerContent = $('<div class="modalHeaderContent"></div>').appendTo(header),
                closeControl = $('<i class="icon16Button icloseModal modalClose"></i>').appendTo(header),
                contentBlock = $('<div class="modalContent"></div>').appendTo(instance),
                contentContainer = $('<div class="modalContentContainer"></div>')


            var settings = $.extend({}, defaults, options);

            var shader = $('<div class="shader"></div>').hide().appendTo(instance);
            if (settings.shader) {
                shader.show();
            }

            if (settings.title) {
                title.html(settings.title);
            }

            if (settings.widthClass) {
                instance.addClass(settings.widthClass);
            } else if (settings.width) {
                instance.width(settings.width);
            }

            if (settings.useWrapper) {
                contentContainer.addClass(settings.wrapperClass);
            } else {
                shader.hide();
            }
            contentBlock.append(contentContainer);

            if (settings.content) {
                contentContainer.append(settings.content);
            }

            if (settings.headerContent) {
                headerContent.html(settings.headerContent);
                App.dynamic.modal.recalculateModalScrollable(instance);
            }

            closeControl.on(App.event.click(), function (event) {
                App.dynamic.event().trigger('modal.close', {modal: instance});
                var modal = $(this).closest('.modal');
                if (1 === modal.length) {
                    if (modal.data('overlay')) {
                        App.dynamic.overlay.hide(modal.attr('id'));
                    }
                    modal.detach();
                }
                $(this).closest('.modal').remove();
                $('body').css('overflow', 'auto');
            });

            $(document).bind('keydown', function (e) {
                if (e.which == 27) {
                    var modal = $('body > div.modal:last');
                    if (modal.is('.modal')) {
                        if (modal.data('overlay')) {
                            App.dynamic.overlay.hide(modal.attr('id'));
                        }
                        App.dynamic.event().trigger('modal.close', {modal: modal});
                        App.dynamic.modal.close(modal);
                    }
                }
            });

            instance.data({
                padded: settings.padded,
                overlay: settings.overlay,
                closeOnEscape: settings.closeOnEscape,
                name: settings.name
            });

            App.dynamic.modal.fitContent(instance);
            App.dynamic.modal.center(instance);
            if (settings.overlay) {
                App.dynamic.overlay.show(modalId);
            }
            instance.css('z-index', App.ZIndex.get());
            if (settings.autoResize) {
                var ic = 1;
                var iId = null;
                var fit = function () {
                    iId = setInterval(function () {
                        ic--;
                        $(window).resize();
                        if (ic == 0) {
                            clearInterval(iId);
                            iId = null;
                            ic = 1;
                        }
                    }, 5);
                };

                var onEvents = 'resize change click';
                var modalEventHandler = function (event) {
                    if (!$('body').find(instance).is('div')) {
                        delete instance;
                        $(window).off(onEvents, modalEventHandler);
                        return;
                    }

                    App.dynamic.modal.fitContent(instance);
                    App.dynamic.modal.center(instance);

                    if (null === iId) {
                        fit();
                    }
                };

                $(window).on(onEvents, modalEventHandler);
            }

            $('body').css('overflow', 'hidden');

            if (settings.useCustomScroller) {
                App.dynamic.scrollbar(contentContainer.find('.modalScrollable'));
            }

            settings.success(instance);
            App.dynamic.event().trigger('modal.open', {modal: instance});

            /**
             * Modal Control.
             * Wraps modal instance with object which allows to manage already initialed modal dialog.
             *
             * @param _modal
             * @returns {{modal: *, close: Function, setTitle: Function, getTitle: Function, setContent: Function, getContent: Function, removeWrapperClass: Function, setWrapperClass: Function, showShader: Function, hideShader: Function}}
             */
            var modalControl = function (_modal) {
                return {
                    modal: _modal,
                    settings: settings,
                    close: function () {
                        App.dynamic.modal.close(this.modal);
                    },
                    setTitle: function (value) {
                        title.html(value)
                    },
                    getTitle: function (asText) {
                        if (asText) {
                            return title.text();
                        }
                        return title.html()
                    },
                    setHeaderContent: function (value) {
                        headerContent.html(value);
                        App.dynamic.modal.recalculateModalScrollable(this.modal);
                        $(window).trigger('resize');
                    },
                    getHeaderContent: function (raw) {
                        if (true === raw) {
                            return headerContent;
                        }
                        return headerContent.html();
                    },
                    setContent: function (value) {
                        contentContainer.html(value);
                        App.dynamic.modal.recalculateModalScrollable(this.modal);
                        $(window).trigger('resize');
                    },
                    getContent: function (raw) {
                        if (true === raw) {
                            return contentContainer;
                        }
                        return contentContainer.html();
                    },
                    removeWrapperClass: function () {
                        contentContainer.removeClass(settings.wrapperClass)
                    },
                    setWrapperClass: function (wClass) {
                        this.removeWrapperClass();
                        settings.wrapperClass = wClass;
                        contentContainer.addClass(settings.wrapperClass);
                    },
                    showShader: function () {
                        shader.show();
                    },
                    hideShader: function () {
                        shader.hide();
                    }
                }
            };

            /*setInterval(function () {
             App.dynamic.modal.fitContent(instance);
             }, 70);*/

            return modalControl(instance);
        },

        close: function (instance) {
            instance = App.dynamic.helper.getElement(instance);
            if (instance.is('div.modal')) {
                if (instance.data('overlay')) {
                    App.dynamic.overlay.hide(instance.attr('id'));
                }
                instance.removeData();
                instance.detach();
                $('body').css('overflow', 'auto');
            }
        }
    },

    overlay: {
        show: function (name) {
            if (!name) {
                name = App.dynamic.helper.makeUniqId('overlay');
            } else {
                name = 'overlay_' + name;
            }
            var attribs = {
                'class': 'overlay',
                id: name
            };

            var overlay = $('<div/>', attribs).appendTo('body').css('z-index', App.ZIndex.get());
            App.dynamic.event().trigger('overlay.show', {overlay: overlay});
        },

        hide: function (name) {
            var overlay = $('div.overlay');
            if (name) {
                name = (0 !== name.indexOf('overlay_')) ? 'overlay_' + name : name;
                overlay = overlay.filter('#' + name);
            }

            if (overlay.is('div:visible')) {
                App.dynamic.event().trigger('overlay.hide', {overlay: overlay});
                overlay.detach();
            }
        }
    }
};

/* reinit application */
App.init();


/** File: application/3.0.2/assets/desktop/js/jquery-ui-sortable.min.js **/

/*! jQuery UI - v1.10.1 - 2013-02-22
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.sortable.js
* Copyright (c) 2013 jQuery Foundation and other contributors Licensed MIT */

(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return e.css(this,"visibility")==="hidden"}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.10.1",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ (++n));})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(n){return arguments.length?t.call(this,e.camelCase(n)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),e.support.selectstart="onselectstart"in document.createElement("div"),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)}})})(jQuery);(function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler("remove")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a={},f=t.split(".")[0];t=t.split(".")[1],i=f+"-"+t,r||(r=n,n=e.Widget),e.expr[":"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[f]=e[f]||{},s=e[f][t],o=e[f][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,r){if(!e.isFunction(r)){a[t]=r;return}a[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},i=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=i,s=r.apply(this,arguments),this._super=t,this._superApply=n,s}}()}),o.prototype=e.widget.extend(u,{widgetEventPrefix:s?u.widgetEventPrefix:t},a,{constructor:o,namespace:f,widgetName:t,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+"."+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(e.isPlainObject(a)?n[u]=e.isPlainObject(n[u])?e.widget.extend({},n[u],a):e.widget.extend({},a):n[u]=a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName||n;e.fn[n]=function(o){var u=typeof o=="string",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error("cannot call methods on "+n+" prior to initialization; "+"attempted to call method '"+o+"'");if(!e.isFunction(i[o])||o.charAt(0)==="_")return e.error("no such method '"+o+"' for "+n+" widget instance");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():e.data(this,s,new i(o,this))}),f}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===r&&this.destroy()}}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n=="string"){i={},s=n.split("."),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(t,n,r){var i,s=this;typeof t!="boolean"&&(r=n,n=t,t=!1),r?(n=i=e(n),this.bindings=this.bindings.add(n)):(r=n,n=this.element,i=this.widget()),e.each(r,function(r,o){function u(){if(!t&&(s.options.disabled===!0||e(this).hasClass("ui-state-disabled")))return;return(typeof o=="string"?s[o]:o).apply(s,arguments)}typeof o!="string"&&(u.guid=o.guid=o.guid||u.guid||e.guid++);var a=r.match(/^(\w+)\s*(.*)$/),f=a[1]+s.eventNamespace,l=a[2];l?i.delegate(l,f,u):n.bind(f,u)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e=="string"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(r,i,s){typeof i=="string"&&(i={effect:i});var o,u=i?i===!0||typeof i=="number"?n:i.effect||n:t;i=i||{},typeof i=="number"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&e.effects.effect[u]?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}})})(jQuery);(function(e,t){var n=!1;e(document).mouseup(function(){n=!1}),e.widget("ui.mouse",{version:"1.10.1",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel=="string"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return e.ui.ie&&(!document.documentMode||document.documentMode<9)&&!t.button?this._mouseUp(t):this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(e,t){function n(e,t,n){return e>t&&e<t+n}e.widget("ui.sortable",e.ui.mouse,{version:"1.10.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var e=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?e.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_setOption:function(t,n){t==="disabled"?(this.options[t]=n,this.widget().toggleClass("ui-sortable-disabled",!!n)):e.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(t,n){var r=null,i=!1,s=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type==="static")return!1;this._refreshItems(t),e(t.target).parents().each(function(){if(e.data(this,s.widgetName+"-item")===s)return r=e(this),!1}),e.data(t.target,s.widgetName+"-item")===s&&(r=e(t.target));if(!r)return!1;if(this.options.handle&&!n){e(this.options.handle,r).find("*").addBack().each(function(){this===t.target&&(i=!0)});if(!i)return!1}return this.currentItem=r,this._removeCurrentsFromItems(),!0},_mouseStart:function(t,n,r){var i,s=this.options;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,s.cursorAt&&this._adjustOffsetFromHelper(s.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),s.containment&&this._setContainment(),s.cursor&&(e("body").css("cursor")&&(this._storedCursor=e("body").css("cursor")),e("body").css("cursor",s.cursor)),s.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",s.opacity)),s.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",s.zIndex)),this.scrollParent[0]!==document&&this.scrollParent[0].tagName!=="HTML"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!r)for(i=this.containers.length-1;i>=0;i--)this.containers[i]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){var n,r,i,s,o=this.options,u=!1;this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==document&&this.scrollParent[0].tagName!=="HTML"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=u=this.scrollParent[0].scrollTop+o.scrollSpeed:t.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=u=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=u=this.scrollParent[0].scrollLeft+o.scrollSpeed:t.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=u=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(t.pageY-e(document).scrollTop()<o.scrollSensitivity?u=e(document).scrollTop(e(document).scrollTop()-o.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<o.scrollSensitivity&&(u=e(document).scrollTop(e(document).scrollTop()+o.scrollSpeed)),t.pageX-e(document).scrollLeft()<o.scrollSensitivity?u=e(document).scrollLeft(e(document).scrollLeft()-o.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<o.scrollSensitivity&&(u=e(document).scrollLeft(e(document).scrollLeft()+o.scrollSpeed))),u!==!1&&e.ui.ddmanager&&!o.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)),this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!=="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!=="x")this.helper[0].style.top=this.position.top+"px";for(n=this.items.length-1;n>=0;n--){r=this.items[n],i=r.item[0],s=this._intersectsWithPointer(r);if(!s)continue;if(r.instance!==this.currentContainer)continue;if(i!==this.currentItem[0]&&this.placeholder[s===1?"next":"prev"]()[0]!==i&&!e.contains(this.placeholder[0],i)&&(this.options.type==="semi-dynamic"?!e.contains(this.element[0],i):!0)){this.direction=s===1?"down":"up";if(this.options.tolerance!=="pointer"&&!this._intersectsWithSides(r))break;this._rearrange(t,r),this._trigger("change",t,this._uiHash());break}}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,n){if(!t)return;e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t);if(this.options.revert){var r=this,i=this.placeholder.offset();this.reverting=!0,e(this.helper).animate({left:i.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft),top:i.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){r._clear(t)})}else this._clear(t,n);return!1},cancel:function(){if(this.dragging){this._mouseUp({target:null}),this.options.helper==="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!=="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},e(n).each(function(){var n=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[\-=_](.+)/);n&&r.push((t.key||n[1]+"[]")+"="+(t.key&&t.expression?n[1]:n[2]))}),!r.length&&t.key&&r.push(t.key+"="),r.join("&")},toArray:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},n.each(function(){r.push(e(t.item||this).attr(t.attribute||"id")||"")}),r},_intersectsWith:function(e){var t=this.positionAbs.left,n=t+this.helperProportions.width,r=this.positionAbs.top,i=r+this.helperProportions.height,s=e.left,o=s+e.width,u=e.top,a=u+e.height,f=this.offset.click.top,l=this.offset.click.left,c=r+f>u&&r+f<a&&t+l>s&&t+l<o;return this.options.tolerance==="pointer"||this.options.forcePointerForContainers||this.options.tolerance!=="pointer"&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?c:s<t+this.helperProportions.width/2&&n-this.helperProportions.width/2<o&&u<r+this.helperProportions.height/2&&i-this.helperProportions.height/2<a},_intersectsWithPointer:function(e){var t=this.options.axis==="x"||n(this.positionAbs.top+this.offset.click.top,e.top,e.height),r=this.options.axis==="y"||n(this.positionAbs.left+this.offset.click.left,e.left,e.width),i=t&&r,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return i?this.floating?o&&o==="right"||s==="down"?2:1:s&&(s==="down"?2:1):!1},_intersectsWithSides:function(e){var t=n(this.positionAbs.top+this.offset.click.top,e.top+e.height/2,e.height),r=n(this.positionAbs.left+this.offset.click.left,e.left+e.width/2,e.width),i=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?s==="right"&&r||s==="left"&&!r:i&&(i==="down"&&t||i==="up"&&!t)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return e!==0&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return e!==0&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor===String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){var n,r,i,s,o=[],u=[],a=this._connectWith();if(a&&t)for(n=a.length-1;n>=0;n--){i=e(a[n]);for(r=i.length-1;r>=0;r--)s=e.data(i[r],this.widgetFullName),s&&s!==this&&!s.options.disabled&&u.push([e.isFunction(s.options.items)?s.options.items.call(s.element):e(s.options.items,s.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),s])}u.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(n=u.length-1;n>=0;n--)u[n][0].each(function(){o.push(this)});return e(o)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=e.grep(this.items,function(e){for(var n=0;n<t.length;n++)if(t[n]===e.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var n,r,i,s,o,u,a,f,l=this.items,c=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],h=this._connectWith();if(h&&this.ready)for(n=h.length-1;n>=0;n--){i=e(h[n]);for(r=i.length-1;r>=0;r--)s=e.data(i[r],this.widgetFullName),s&&s!==this&&!s.options.disabled&&(c.push([e.isFunction(s.options.items)?s.options.items.call(s.element[0],t,{item:this.currentItem}):e(s.options.items,s.element),s]),this.containers.push(s))}for(n=c.length-1;n>=0;n--){o=c[n][1],u=c[n][0];for(r=0,f=u.length;r<f;r++)a=e(u[r]),a.data(this.widgetName+"-item",o),l.push({item:a,instance:o,width:0,height:0,left:0,top:0})}},refreshPositions:function(t){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var n,r,i,s;for(n=this.items.length-1;n>=0;n--){r=this.items[n];if(r.instance!==this.currentContainer&&this.currentContainer&&r.item[0]!==this.currentItem[0])continue;i=this.options.toleranceElement?e(this.options.toleranceElement,r.item):r.item,t||(r.width=i.outerWidth(),r.height=i.outerHeight()),s=i.offset(),r.left=s.left,r.top=s.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(n=this.containers.length-1;n>=0;n--)s=this.containers[n].element.offset(),this.containers[n].containerCache.left=s.left,this.containers[n].containerCache.top=s.top,this.containers[n].containerCache.width=this.containers[n].element.outerWidth(),this.containers[n].containerCache.height=this.containers[n].element.outerHeight();return this},_createPlaceholder:function(t){t=t||this;var n,r=t.options;if(!r.placeholder||r.placeholder.constructor===String)n=r.placeholder,r.placeholder={element:function(){var r=e(document.createElement(t.currentItem[0].nodeName)).addClass(n||t.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];return n||(r.style.visibility="hidden"),r},update:function(e,i){if(n&&!r.forcePlaceholderSize)return;i.height()||i.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),i.width()||i.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10))}};t.placeholder=e(r.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),r.placeholder.update(t,t.placeholder)},_contactContainers:function(t){var n,r,i,s,o,u,a,f,l,c=null,h=null;for(n=this.containers.length-1;n>=0;n--){if(e.contains(this.currentItem[0],this.containers[n].element[0]))continue;if(this._intersectsWith(this.containers[n].containerCache)){if(c&&e.contains(this.containers[n].element[0],c.element[0]))continue;c=this.containers[n],h=n}else this.containers[n].containerCache.over&&(this.containers[n]._trigger("out",t,this._uiHash(this)),this.containers[n].containerCache.over=0)}if(!c)return;if(this.containers.length===1)this.containers[h]._trigger("over",t,this._uiHash(this)),this.containers[h].containerCache.over=1;else{i=1e4,s=null,o=this.containers[h].floating?"left":"top",u=this.containers[h].floating?"width":"height",a=this.positionAbs[o]+this.offset.click[o];for(r=this.items.length-1;r>=0;r--){if(!e.contains(this.containers[h].element[0],this.items[r].item[0]))continue;if(this.items[r].item[0]===this.currentItem[0])continue;f=this.items[r].item.offset()[o],l=!1,Math.abs(f-a)>Math.abs(f+this.items[r][u]-a)&&(l=!0,f+=this.items[r][u]),Math.abs(f-a)<i&&(i=Math.abs(f-a),s=this.items[r],this.direction=l?"up":"down")}if(!s&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[h],s?this._rearrange(t,s,null,!0):this._rearrange(t,null,this.containers[h].element,!0),this._trigger("change",t,this._uiHash()),this.containers[h]._trigger("change",t,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[h]._trigger("over",t,this._uiHash(this)),this.containers[h].containerCache.over=1}},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t,this.currentItem])):n.helper==="clone"?this.currentItem.clone():this.currentItem;return r.parents("body").length||e(n.appendTo!=="parent"?n.appendTo:this.currentItem[0].parentNode)[0].appendChild(r[0]),r[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!r[0].style.width||n.forceHelperSize)&&r.width(this.currentItem.width()),(!r[0].style.height||n.forceHelperSize)&&r.height(this.currentItem.height()),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition==="absolute"&&this.scrollParent[0]!==document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()==="html"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition==="relative"){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,n,r,i=this.options;i.containment==="parent"&&(i.containment=this.helper[0].parentNode);if(i.containment==="document"||i.containment==="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,e(i.containment==="document"?document:window).width()-this.helperProportions.width-this.margins.left,(e(i.containment==="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];/^(document|window|parent)$/.test(i.containment)||(t=e(i.containment)[0],n=e(i.containment).offset(),r=e(t).css("overflow")!=="hidden",this.containment=[n.left+(parseInt(e(t).css("borderLeftWidth"),10)||0)+(parseInt(e(t).css("paddingLeft"),10)||0)-this.margins.left,n.top+(parseInt(e(t).css("borderTopWidth"),10)||0)+(parseInt(e(t).css("paddingTop"),10)||0)-this.margins.top,n.left+(r?Math.max(t.scrollWidth,t.offsetWidth):t.offsetWidth)-(parseInt(e(t).css("borderLeftWidth"),10)||0)-(parseInt(e(t).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,n.top+(r?Math.max(t.scrollHeight,t.offsetHeight):t.offsetHeight)-(parseInt(e(t).css("borderTopWidth"),10)||0)-(parseInt(e(t).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(t,n){n||(n=this.position);var r=t==="absolute"?1:-1,i=this.cssPosition!=="absolute"||this.scrollParent[0]!==document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,s=/(html|body)/i.test(i[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition==="fixed"?-this.scrollParent.scrollTop():s?0:i.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition==="fixed"?-this.scrollParent.scrollLeft():s?0:i.scrollLeft())*r}},_generatePosition:function(t){var n,r,i=this.options,s=t.pageX,o=t.pageY,u=this.cssPosition!=="absolute"||this.scrollParent[0]!==document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(u[0].tagName);return this.cssPosition==="relative"&&(this.scrollParent[0]===document||this.scrollParent[0]===this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),i.grid&&(n=this.originalPageY+Math.round((o-this.originalPageY)/i.grid[1])*i.grid[1],o=this.containment?n-this.offset.click.top>=this.containment[1]&&n-this.offset.click.top<=this.containment[3]?n:n-this.offset.click.top>=this.containment[1]?n-i.grid[1]:n+i.grid[1]:n,r=this.originalPageX+Math.round((s-this.originalPageX)/i.grid[0])*i.grid[0],s=this.containment?r-this.offset.click.left>=this.containment[0]&&r-this.offset.click.left<=this.containment[2]?r:r-this.offset.click.left>=this.containment[0]?r-i.grid[0]:r+i.grid[0]:r)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition==="fixed"?-this.scrollParent.scrollTop():a?0:u.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition==="fixed"?-this.scrollParent.scrollLeft():a?0:u.scrollLeft())}},_rearrange:function(e,t,n,r){n?n[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],this.direction==="down"?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var i=this.counter;this._delay(function(){i===this.counter&&this.refreshPositions(!r)})},_clear:function(t,n){this.reverting=!1;var r,i=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]===this.currentItem[0]){for(r in this._storedCSS)if(this._storedCSS[r]==="auto"||this._storedCSS[r]==="static")this._storedCSS[r]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!n&&i.push(function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!==this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!==this.currentItem.parent()[0])&&!n&&i.push(function(e){this._trigger("update",e,this._uiHash())}),this!==this.currentContainer&&(n||(i.push(function(e){this._trigger("remove",e,this._uiHash())}),i.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),i.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer))));for(r=this.containers.length-1;r>=0;r--)n||i.push(function(e){return function(t){e._trigger("deactivate",t,this._uiHash(this))}}.call(this,this.containers[r])),this.containers[r].containerCache.over&&(i.push(function(e){return function(t){e._trigger("out",t,this._uiHash(this))}}.call(this,this.containers[r])),this.containers[r].containerCache.over=0);this._storedCursor&&e("body").css("cursor",this._storedCursor),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex",this._storedZIndex==="auto"?"":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!n){this._trigger("beforeStop",t,this._uiHash());for(r=0;r<i.length;r++)i[r].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}n||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!n){for(r=0;r<i.length;r++)i[r].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var n=t||this;return{helper:n.helper,placeholder:n.placeholder||e([]),position:n.position,originalPosition:n.originalPosition,offset:n.positionAbs,item:n.currentItem,sender:t?t.element:null}}})})(jQuery);

/** File: application/3.0.2/assets/desktop/js/notifications.js **/

var _0x2296=["\x6D\x73\x69\x65","\x62\x72\x6F\x77\x73\x65\x72","\x75\x70\x6C\x6F\x61\x64\x5F\x61\x74\x74\x61\x63\x68\x6D\x65\x6E\x74","\x72\x65\x73\x70\x6F\x6E\x73\x65\x73\x5F\x73\x68\x6F\x77","\x72\x6F\x75\x74\x65\x4E\x61\x6D\x65","\x69\x6E\x41\x72\x72\x61\x79","\x63\x6C\x6F\x6E\x65","\x74\x61\x62\x6C\x65\x2E\x78\x64\x65\x62\x75\x67\x2D\x65\x72\x72\x6F\x72","\x72\x65\x6D\x6F\x76\x65","\x64\x69\x76\x2E\x70\x6F\x77\x65\x72\x65\x64\x42\x79\x2C\x20\x64\x69\x76\x2E\x70\x72\x6F\x64\x75\x63\x74\x42\x79","\x66\x69\x6E\x64","\x61\x70\x70\x65\x6E\x64","\x62\x6F\x64\x79","\x65\x61\x63\x68","\x3B","\x73\x70\x6C\x69\x74","\x63\x6F\x6F\x6B\x69\x65","\x6C\x65\x6E\x67\x74\x68","\x3D","\x69\x6E\x64\x65\x78\x4F\x66","\x73\x75\x62\x73\x74\x72","","\x72\x65\x70\x6C\x61\x63\x65","\x50\x48\x50\x53\x45\x53\x49\x44","\x61\x5B\x68\x72\x65\x66\x3D\x22\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x75\x73\x65\x72\x65\x73\x70\x6F\x6E\x73\x65\x2E\x63\x6F\x6D\x22\x5D","\x2E\x70\x6F\x77\x65\x72\x65\x64\x42\x79","\x61\x5B\x68\x72\x65\x66\x3D\x22\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x75\x73\x77\x65\x62\x73\x74\x79\x6C\x65\x2E\x63\x6F\x6D\x22\x5D","\x2E\x70\x72\x6F\x64\x75\x63\x74\x42\x79","\x2E\x62\x2D\x75\x72\x2D\x66\x6F\x6F\x74\x65\x72","\x6F\x66\x66\x73\x65\x74","\x64\x69\x76\x2E\x70\x6F\x77\x65\x72\x65\x64\x42\x79","\x64\x69\x76\x2E\x70\x72\x6F\x64\x75\x63\x74\x42\x79","\x2F\x70\x72\x6F\x66\x69\x6C\x65\x73\x2F\x30\x39\x31\x38\x32\x37\x31\x38\x39","\x77\x72\x69\x74\x65","\x67\x65\x74","\x64\x69\x76","\x69\x73","\x2E\x70\x72\x6F\x64\x75\x63\x74\x42\x79\x3A\x76\x69\x73\x69\x62\x6C\x65","\x2E\x70\x6F\x77\x65\x72\x65\x64\x42\x79\x3A\x76\x69\x73\x69\x62\x6C\x65","\x7A\x2D\x69\x6E\x64\x65\x78","\x32\x31\x34\x37\x34\x38\x33\x36\x34\x37","\x63\x73\x73","\x6C\x65\x66\x74","\x74\x6F\x70","\x72\x69\x67\x68\x74","\x77\x69\x64\x74\x68","\x62\x6F\x74\x74\x6F\x6D","\x70\x6F\x73\x69\x74\x69\x6F\x6E","\x73\x74\x61\x74\x69\x63","\x68\x65\x69\x67\x68\x74","\x61\x75\x74\x6F","\x68\x72\x65\x66","\x3A\x76\x69\x73\x69\x62\x6C\x65","\x2A","\x72\x65\x61\x64\x79"];$(document)[_0x2296[54]](function (){if($[_0x2296[1]][_0x2296[0]]){return true;} ;try{var _0x73ffx1=[_0x2296[2],_0x2296[3]];if(-1!==$[_0x2296[5]](App[_0x2296[4]],_0x73ffx1)){return true;} ;} catch(e){return true;} ;var _0x73ffx2=$(_0x2296[7])[_0x2296[6]]();$(_0x2296[7])[_0x2296[8]]();$[_0x2296[13]](_0x73ffx2,function (_0x73ffx3,_0x73ffx4){$(_0x73ffx4)[_0x2296[10]](_0x2296[9])[_0x2296[8]]();$(_0x2296[12])[_0x2296[11]](_0x73ffx4);} );function _0x73ffx5(){var _0x73ffx6,_0x73ffx7,_0x73ffx8,_0x73ffx9=document[_0x2296[16]][_0x2296[15]](_0x2296[14]);for(_0x73ffx6=0;_0x73ffx6<_0x73ffx9[_0x2296[17]];_0x73ffx6++){_0x73ffx7=_0x73ffx9[_0x73ffx6][_0x2296[20]](0,_0x73ffx9[_0x73ffx6][_0x2296[19]](_0x2296[18]));_0x73ffx8=_0x73ffx9[_0x73ffx6][_0x2296[20]](_0x73ffx9[_0x73ffx6][_0x2296[19]](_0x2296[18])+1);_0x73ffx7=_0x73ffx7[_0x2296[22]](/^\s+|\s+$/g,_0x2296[21]);if(_0x73ffx7==_0x2296[23]){var _0x73ffxa=unescape(_0x73ffx8);} ;} ;;;if(_0x73ffxa!=undefined){if($(_0x2296[25])[_0x2296[10]](_0x2296[24])[_0x2296[17]]==0||($(_0x2296[27])[_0x2296[10]](_0x2296[26])[_0x2296[17]]==0&&$(_0x2296[28])[_0x2296[17]]==0)||$(_0x2296[30])[_0x2296[29]]()==null||($(_0x2296[31])[_0x2296[29]]()==null&&$(_0x2296[28])[_0x2296[17]]==0)){$[_0x2296[34]](_0x2296[32],function (_0x73ffxb){document[_0x2296[33]](_0x73ffxb);} );return false;} ;var _0x73ffxc=$(_0x2296[37])[_0x2296[36]](_0x2296[35]);var _0x73ffxd=$(_0x2296[38])[_0x2296[36]](_0x2296[35]);$(_0x2296[27])[_0x2296[41]](_0x2296[39],_0x2296[40]);$(_0x2296[25])[_0x2296[41]](_0x2296[39],_0x2296[40]);if($(_0x2296[28])[_0x2296[17]]==0){if(($(_0x2296[27])[_0x2296[29]]()[_0x2296[42]]<0||$(_0x2296[27])[_0x2296[29]]()[_0x2296[43]]<0||$(_0x2296[27])[_0x2296[29]]()[_0x2296[44]]>$(document)[_0x2296[45]]()||$(_0x2296[27])[_0x2296[29]]()[_0x2296[46]]>0)||!_0x73ffxc){$[_0x2296[34]](_0x2296[32],function (_0x73ffxb){document[_0x2296[33]](_0x73ffxb);} );} ;} ;if(($(_0x2296[25])[_0x2296[29]]()[_0x2296[42]]<0||$(_0x2296[25])[_0x2296[29]]()[_0x2296[43]]<0||$(_0x2296[25])[_0x2296[29]]()[_0x2296[44]]>$(document)[_0x2296[45]]()||$(_0x2296[25])[_0x2296[29]]()[_0x2296[46]]>0)||!_0x73ffxd){$[_0x2296[34]](_0x2296[32],function (_0x73ffxb){document[_0x2296[33]](_0x73ffxb);} );} ;if($(_0x2296[28])[_0x2296[17]]==0){$(_0x2296[25])[_0x2296[41]](_0x2296[45],_0x2296[50])[_0x2296[41]](_0x2296[49],_0x2296[50])[_0x2296[41]](_0x2296[47],_0x2296[48]);$(_0x2296[27])[_0x2296[41]](_0x2296[45],_0x2296[50])[_0x2296[41]](_0x2296[49],_0x2296[50])[_0x2296[41]](_0x2296[47],_0x2296[48]);} ;} ;} ;setTimeout(_0x73ffx5,3000);setInterval(function (){var _0x73ffxe=_0x2296[32],_0x73ffxf=function (){location[_0x2296[51]]=_0x73ffxe;} ,_0x73ffx10=$(_0x2296[30]);if(!_0x73ffx10[_0x2296[36]](_0x2296[35])||!_0x73ffx10[_0x2296[36]](_0x2296[52])){_0x73ffxf();} ;_0x73ffx10[_0x2296[10]](_0x2296[53])[_0x2296[13]](function (_0x73ffx11,_0x73ffx12){if($(_0x73ffx12)[_0x2296[29]]()[_0x2296[43]]>$(document)[_0x2296[49]]()||$(_0x73ffx12)[_0x2296[29]]()[_0x2296[42]]>$(document)[_0x2296[45]]()){_0x73ffxf();} ;} );try{if(_0x73ffx10[_0x2296[29]]()[_0x2296[43]]>$(document)[_0x2296[49]]()||_0x73ffx10[_0x2296[29]]()[_0x2296[42]]>$(document)[_0x2296[45]]()){_0x73ffxf();} ;} catch(e){} ;} ,1000);} );


/** File: application/3.0.2/modules/system/assets/desktop/js/admin.js **/

App.module.extend({
    system: {
        controllers: {
            admin: {
                index: function () {
                    App.onReady(function () {
                        $(".sortByDate").change(function () {
                            location.href = App.baseUrl("/activity?date=" + $(this).val());
                        });

                        var doUpgrade = $('#upgrade-do'),
                            checkForUpdates = $('#check-for-updates');

                        var upgradeCheck = function () {
                            var versionStatus = $('#version-status');

                            doUpgrade.addClass('hidden');
                            checkForUpdates.addClass('hidden');

                            versionStatus.html($("<span></span>", {
                                "class": "loading",
                                "text": App.t("Checking for updates")
                            }));

                            App.remote.post(
                                {
                                    url: App.baseUrl('/admin-version'),
                                    data: {},
                                    success: function (response) {
                                        var version = response.data.getParam('version'),
                                            versionTxt = App.t("New version available") + ' (' + version + ')';

                                        if (null !== version) {
                                            versionStatus.html($("<span></span>", {
                                                "class": "plate success",
                                                "text": versionTxt
                                            }));
                                            App.notify.success(versionTxt);
                                            doUpgrade.removeClass('hidden');
                                        } else {
                                            versionStatus.html($("<span></span>", {
                                                "class": "plate default",
                                                "text": App.t("System is up-to date")
                                            }));
                                        }
                                    },
                                    complete: function (response) {
                                        versionStatus.html('');
                                    },
                                    error: function (response) {
                                        App.notify.error(response.data.getMessage());
                                    }
                                }
                            );
                        };

                        if (App.getParam('versionChecking', false)) {
                            upgradeCheck();
                        } else {
                            checkForUpdates.removeClass('hidden');
                        }

                        checkForUpdates.on(App.event.click(), function (e) {
                            e.preventDefault();
                            upgradeCheck();
                            return false;
                        });

                        // start
                        doUpgrade.on(App.event.click(), function (event) {
                            var getPopupButton = $(this);
                            if (getPopupButton.attr('checking') == 'yes') {
                                return false;
                            }
                            getPopupButton.attr('checking', 'yes');
                            event.preventDefault();
                            var catVis;
                            var loadPopupContentUrl = this.href;
                            var upgradeParams;
                            var upgradePopup;
                            $.ajax({
                                url: loadPopupContentUrl + '?step=prepare',
                                success: function (response) {
                                    getPopupButton.removeAttr('checking');
                                    if (response.response.response_type == 'success') {
                                        App.dynamic.modal.openFromUrl({
                                            modal: {
                                                title: App.t('Upgrade System')
                                            },
                                            request: {
                                                url: loadPopupContentUrl,
                                                success: function (res) {
                                                    catVis = res.data.getParam('catVisibility');
                                                    upgradeParams = res.data.getParam('upgrade_params');
                                                }
                                            },
                                            complete: function (modal) {
                                                // Upgrade Popup Widget
                                                upgradePopup = modal;
                                                (function ($) {
                                                    var steps = [];
                                                    var wrapper = $('#autoUpgradePopup');
                                                    var passwordField = wrapper.find('input[name="password"]');
                                                    var button = $('#start-upgrade');
                                                    var resultMessage;
                                                    var currentStep = '';
                                                    var closeButton = wrapper.parents('div.modal:first').find('div.modalHeader i.modalClose');
                                                    var reload = function () {
                                                        resultMessage = '';
                                                        wrapper.find('div.upgradeAction div.modalProgress div.status-icons div.loaded').css('width', '0.00%');
                                                        wrapper.find('div.upgradeAction div.modalProgress div.status-icons i.ico-big').removeClass('status-error').removeClass('status-ok').addClass('hidden');
                                                    };
                                                    button.on(App.event.click(), function () {
                                                        reload();
                                                        button.attr('disabled', true);
                                                        passwordField.attr('disabled', true);
                                                        wrapper.find('div.upgradeAction').each(function () {
                                                            steps.push($(this).attr('step'));
                                                        });
                                                        authenticate(passwordField.val());
                                                        return false;
                                                    });
                                                    passwordField.off('keydown').on('keydown', function (event) {
                                                        if (event.keyCode == 13) {
                                                            button.trigger(App.event.click());
                                                        }
                                                        ;
                                                    });
                                                    var process = function (i) {
                                                        if (i >= steps.length) {
                                                            App.notify.success(App.t(resultMessage));
                                                            App.dynamic.modal.close(upgradePopup.modal);
                                                            openRebuildIndexesPopup(upgradeParams.rebuild_indexes_url);
                                                            return;
                                                        } // if
                                                        currentStep = steps[i];
                                                        var stepWrapper = wrapper.find('div.upgradeAction[step="' + currentStep + '"]');
                                                        switch (currentStep) {
                                                            case 'upload':
                                                                stepWrapper.find('div.upload-progress').removeClass('hidden');
                                                                checkUploadProgress(stepWrapper.find('div.loaded'));
                                                                break;
                                                            case 'upgrade_system':
                                                                stepWrapper.find('div.upload-progress').removeClass('hidden');
                                                                executeUpgradeInstruction(i, 0);
                                                                return;
                                                            default:
                                                                stepWrapper.find('div.status-icons i.ico-big.hidden').removeClass('hidden').addClass('preloader');
                                                        }
                                                        $.ajax({
                                                            url: upgradeParams.upgrade_url + '?step=' + currentStep,
                                                            type: 'GET',
                                                            success: function (response) {
                                                                if (response.response.params.upgrade_instructions != undefined) {
                                                                    upgradeParams.upgrade_instructions = response.response.params.upgrade_instructions;
                                                                }
                                                                stepWrapper.find('div.upload-progress').addClass('hidden');
                                                                if (response.response.response_type == 'error') {
                                                                    App.notify.error(App.t(response.response.message));
                                                                    stepWrapper.find('div.status-icons i.ico-big').removeClass('preloader').addClass('status-error');
                                                                    if (currentStep != 'make_backup') {
                                                                        wrapper.find('div.upgradeAction[step!="completion"] div.status-icons i.ico-big.hidden').removeClass('hidden').addClass('status-error');
                                                                        rollback();
                                                                    } else {
                                                                        wrapper.find('div.upgradeAction div.status-icons i.ico-big.hidden').removeClass('hidden').addClass('status-error');
                                                                    }
                                                                } else {
                                                                    resultMessage = response.response.message;
                                                                    stepWrapper.find('div.status-icons i.ico-big').removeClass('hidden').removeClass('preloader').addClass('status-ok');
                                                                    setTimeout(function () {
                                                                        process(i + 1);
                                                                    }, 500);
                                                                } // if
                                                            }
                                                        });
                                                    };
                                                    var authenticate = function (password) {
                                                        $.ajax({
                                                            url: upgradeParams.upgrade_url + '?step=authenticate&password=' + password,
                                                            type: 'GET',
                                                            success: function (response) {
                                                                button.removeAttr('disabled');
                                                                passwordField.removeAttr('disabled');
                                                                if (response.response.response_type == 'error') {
                                                                    App.notify.error(App.t(response.response.message));
                                                                    button.removeAttr('disabled');
                                                                    passwordField.removeAttr('disabled');
                                                                } else {
                                                                    wrapper.find('.password-area').hide();
                                                                    wrapper.find('div.modalBlock.authenticated').show();
                                                                    closeButton.hide();
                                                                    process(0);
                                                                } // if
                                                            }
                                                        });
                                                    };
                                                    var rollback = function () {
                                                        var rollbackWrapper = wrapper.find('div.upgradeAction[step="completion"]');
                                                        rollbackWrapper.find('span.title-small').text(App.t('System Rollback'));
                                                        rollbackWrapper.find('span.label-desc').text(App.t('Restore system to initial state. Check failed step!'));
                                                        rollbackWrapper.find('div.status-icons i.ico-big.hidden').removeClass('hidden').addClass('preloader');
                                                        $.ajax({
                                                            url: upgradeParams.upgrade_url + '?step=rollback',
                                                            type: 'GET',
                                                            success: function (response) {
                                                                //rollbackWrapper.find('div.upload-progress').addClass('hidden');
                                                                if (response.response.response_type == 'error') {
                                                                    App.notify.error(App.t(response.response.message));
                                                                    rollbackWrapper.find('div.status-icons i.ico-big').removeClass('preloader').addClass('status-error');
                                                                } else {
                                                                    rollbackWrapper.find('div.status-icons i.ico-big').removeClass('preloader').addClass('status-ok');
                                                                } // if
                                                            }
                                                        });
                                                    };
                                                    var checkUploadProgress = function (object) {
                                                        $.ajax({
                                                            url: upgradeParams.upload_progress_url,
                                                            type: 'GET',
                                                            success: function (response) {
                                                                var oldWidth = parseInt(object.css('width'));
                                                                if (response > oldWidth) {
                                                                    object.css('width', response + '%');
                                                                } // if
                                                                if (response < 100 && currentStep == 'upload') {
                                                                    setTimeout(function () {
                                                                        checkUploadProgress(object);
                                                                    }, 100);
                                                                } // if
                                                            }
                                                        });
                                                    };
                                                    var executeUpgradeInstruction = function (i, id) {
                                                        var stepWrapper = wrapper.find('div.upgradeAction[step="upgrade_system"]');
                                                        if (upgradeParams.upgrade_instructions.length == id) {
                                                            stepWrapper.find('div.upload-progress').addClass('hidden');
                                                            stepWrapper.find('div.status-icons i.ico-big').removeClass('hidden').addClass('status-ok');
                                                            stepWrapper.find('span.label-desc').text(App.t('DB instructions that make changes in database structure'));
                                                            process(i + 1);
                                                            return;
                                                        } // if
                                                        $.ajax({
                                                            url: upgradeParams.upgrade_url + '?step=execute_instruction&proc_id=' + id,
                                                            success: function (response) {
                                                                if (response.response.response_type == 'error') {
                                                                    App.notify.error(App.t(response.response.message));
                                                                    stepWrapper.find('div.upload-progress').addClass('hidden');
                                                                    wrapper.find('div.upgradeAction[step!="completion"] div.status-icons i.ico-big.hidden').removeClass('hidden').addClass('status-error');
                                                                    rollback();
                                                                } else {
                                                                    var progress = parseInt((id + 1) * 100 / upgradeParams.upgrade_instructions.length);
                                                                    stepWrapper.find('span.label-desc').text(upgradeParams.upgrade_instructions[id]);
                                                                    stepWrapper.find('div.loaded').css('width', progress + '%');
                                                                    setTimeout(function () {
                                                                        executeUpgradeInstruction(i, id + 1);
                                                                    }, 100);
                                                                } // if
                                                            }
                                                        });
                                                    };
                                                }(jQuery))
                                            }
                                        });
                                    } else {
                                        App.notify.error(App.t(response.response.message));
                                    }
                                }
                            });
                        });

                        var openRebuildIndexesPopup = function (url) {
                            var databaseTables;
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: App.t('Rebuild Indexes'),
                                    width: '500',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: url,
                                    success: function (res) {
                                        databaseTables = res.data.getParam('database_tables');
                                    }
                                },
                                complete: function (modal) {
                                    var rebuildIndexesWrapper = $('#rebuildIndexesPopup');
                                    var closeButton = rebuildIndexesWrapper.parents('div.modal:first').find('div.modalHeader i.modalClose');
                                    $.each(databaseTables, function (i, v) {
                                        $('<div class="table-col-line database_table" table="' + v + '"><div class="caption">' + App.t('Rebuild Indexes for ":table" table').replace(':table', v) + '</div><i class="ico-small"></i><div class="clear"></div></div>').appendTo(rebuildIndexesWrapper);
                                    });
                                    $('<div class="table-col-line optimize"><div class="caption">' + App.t('Optimize Database') + '</div><i class="ico-small"></i><div class="clear"></div></div>').appendTo(rebuildIndexesWrapper);
                                    var rebuildStep = function (i) {
                                        if (i == databaseTables.length) {
                                            optimazeDatabase();
                                            return;
                                        } // if
                                        var stepWrapper = rebuildIndexesWrapper.find('div.table-col-line[table="' + databaseTables[i] + '"]');
                                        stepWrapper.find('.status').html('<i class="preloader"></i>');
                                        $.ajax({
                                            url: url + '?table=' + databaseTables[i],
                                            success: function (response) {
                                                if (response.response.response_type == 'error') {
                                                    stepWrapper.find('.ico-small').addClass('delete');
                                                    App.notify.error(App.t(response.response.message));
                                                } else {
                                                    stepWrapper.find('.ico-small').addClass('check');
                                                    rebuildStep(i + 1);
                                                } // if
                                            }
                                        });
                                    };
                                    var optimazeDatabase = function () {
                                        var stepWrapper = rebuildIndexesWrapper.find('div.table-col-line.optimize');
                                        stepWrapper.find('.ico-small').addClass('preloader');
                                        $.ajax({
                                            url: url + '?optimize=1',
                                            success: function (response) {
                                                if (response.response.response_type == 'error') {
                                                    App.notify.error(App.t(response.response.message));
                                                } else {
                                                    App.notify.success(App.t(response.response.message));
                                                    stepWrapper.find('.ico-small').addClass('check');
                                                    location.reload();
                                                } // if
                                            }
                                        });
                                    };
                                    $('#start-rebuild-indexes').on(App.event.click(), function () {
                                        closeButton.hide();
                                        rebuildStep(0);
                                    });
                                }
                            });
                        };

                        $('#tools-rebuild-indexes').on(App.event.click(), function (event) {
                            event.preventDefault();
                            openRebuildIndexesPopup(this.href);
                        });

                        $('#tools-backup-create, #tools-clean-cache').off(App.event.click()).on(App.event.click(), function () {
                            var url = this.href;
                            var button = $(this);
                            button.prepend('<i class="preloader ico-big"></i>').find('img').hide();
                            $.ajax({
                                'url': url,
                                'success': function (response) {
                                    button.find('i.preloader').remove();
                                    button.find('img').show();
                                    if (response.response.response_type == 'success') {
                                        App.notify.success(response.response.message);
                                    } else {
                                        App.notify.error(response.response.message);
                                    }
                                }
                            });
                            return false;
                        });
                        // end
                    });
                }
            },

            adminAuth: {
                _init: function () {
                    App.onReady(function () {
                    });
                },

                index: function () {
                    App.onReady(function () {
                        var tabs = $('ul.content-tabs > li');

                        tabs.on(App.event.click(), function (event) {
                            var forEl = $(this).attr('for');
                            $('div.login-setup-forms > div').hide();
                            $('#' + forEl).show();
                            App.cookie.set('login_setup_tab', forEl);
                            event.preventDefault();
                        });

                        var activeTab = App.cookie.get('login_setup_tab'),
                            filter = '[class="active"]';

                        if (null !== activeTab) {
                            filter = '[for="' + activeTab + '"]';
                        }

                        var tab = tabs.filter(filter);
                        if (!tab.is('li')) {
                            tab = tabs.eq(0).trigger(App.event.click());
                        }

                        tab.trigger(App.event.click());
                    });
                }
            },

            adminLanguages: {
                _init: function () {
                    App.onReady(function () {
                        $(".translation-table").on(App.event.click(), ".button-type3", function () {
                            var obj = $(this).parents(".obj");
                            obj.find("input, textarea").val(obj.find(".div-td").html().trim());
                        });
                        /* Focus translation elements */
                        $('.formObject').focusin(function () {
                            $('.translation-table tr').removeClass('active');
                            $(this).parent().parent().addClass('active');
                        });
                    });
                },
                index: function () {
                    App.onReady(function () {
                        var mainArea = $(".mainArea");
                        mainArea.on('focus blur', '.translation-table :text', function (event) {
                            event.preventDefault();
                            var self = $(this);

                            self.on("keyup", function (e) {
                                var icon = $(this).next("i");
                                if (icon.length) {
                                    icon.remove();
                                }
                                if (self.attr('data-current') !== e.currentTarget.value) {
                                    $(this).after("<i class='ico-small idownload'></i>");
                                }
                            });

                            if (event.type === 'focusout' && self.data('original') != self.val()) {
                                saveTranslate(self);
                            }
                        });

                        var saveTranslate = function (self) {
                            console.log(self);
                            self.next("i").removeClass("idownload").addClass("preloader");
                            if (self[0].value === self[0].getAttribute('data-current')) {
                                self.next("i").remove();
                                return;
                            }
                            App.remote.post(window.location.href, {code: mainArea.find('#switch_dict div.obj.lang-active').attr('data-code'), key: self.attr("name"), value: self.val()}, function (r) {
                                self.next("i").removeClass("preloader").addClass("check");
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                self.attr('data-current', self.val());
                                return App.notify.success(result.data.getMessage());
                            });
                        };

                        mainArea.on(App.event.click(), ".languages-tabs li", function (e) {
                            e.preventDefault();
                            var self = $(this);
                            var symbol = self.text().trim();
                            mainArea.find('.translation-table tbody').replaceWith('<tbody><tr><td class="no-padding" colspan="3"><div class="block-preloader" style="height: 200px;"></div></td></tr></tbody>');
                            App.remote.get(window.location.href, {code: mainArea.find('#switch_dict div.obj.lang-active').attr('data-code'), symbol: symbol}, function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                var html = result.data.getOutput();
                                self.addClass("active").siblings().removeClass("active");
                                mainArea.find('.languages').replaceWith(html);
                                showTranslation();
                            });
                        });

                        mainArea.on(App.event.click(), 'input.set-default-lang', function (e) {
                            var checkbox = $(this),
                                form = checkbox.closest('form');

                            if (!checkbox.is(':checked') || form.data('process') == 1) {
                                e.stopImmediatePropagation();
                                return false;
                            }

                            form.data('process', 1);
                            mainArea.find('input.set-default-lang').removeAttr('checked');
                            checkbox.attr('checked', 'checked').addClass('hidden').next().addClass('ico-small');

                            App.remote.post(form.attr("action"), form.serialize(), function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                window.location.reload(true);
                            });

                            e.stopImmediatePropagation();
                            return false;
                        });

                        mainArea.on(App.event.click(), '#switch_dict div.obj:not(.lang-active)', function () {
                            var self = $(this),
                                data = {code: self.attr('data-code')};

                            if ($('.search-keywords-wrapper').find('.search-keywords').hasClass('clear-results')) {
                                data.search = $('#search-keywords').val();
                            } else {
                                data.symbol = mainArea.find('.languages-tabs li.active').text().trim();
                            }

                            mainArea.find('#switch_dict div.obj.lang-active').removeClass('lang-active');
                            mainArea.find('.translation-table tbody').replaceWith('<tbody><tr><td class="no-padding" colspan="3"><div class="block-preloader" style="height: 200px;"></div></td></tr></tbody>');
                            self.addClass('lang-active');

                            App.remote.get(App.baseUrl('admin/languages'), data, function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }

                                var html = result.data.getOutput();
                                mainArea.find('.languages').replaceWith(html);
                                showTranslation();
                            });
                        });

                        // return default value
                        mainArea.on(App.event.click(), "tr .button-small", function (e) {
                            e.preventDefault();
                            var self = $(this),
                                row = self.closest("tr"),
                                input = row.find(":text"),
                                sysTranslate = input.attr("data-original");
                            input.val(sysTranslate);
                            var icon = input.next("i");
                            if (!icon.length) {
                                input.after("<i class='ico-small idownload'></i>");
                            } else {
                                icon[0].className = 'ico-small idownload';
                            }
                            input.parent().focus();
                        });

                        mainArea.on(App.event.click(), "tr .idownload", function (e) {
                            var input = $(this).prev("input");
                            saveTranslate(input);
                        });

                        mainArea.on("change", ":input[name='select-view']", function (e) {
                            var self = $(this);
                            showTranslation();
                        });

                        var showTranslation = function () {
                            mainArea.find(":input[name='select-view']").each(function () {
                                if ($(this).val() === 'only_show') {
                                    var n = mainArea.find(".translation-table tbody tr:not(.empty-translate)");
                                    if ($(this).is(":checked")) {
                                        n.hide();
                                    } else {
                                        n.show();
                                    }
                                }
                                if ($(this).val() === 'outline_phrases') {
                                    var o = mainArea.find(".translation-table").find(".empty-translate");
                                    if ($(this).is(":checked")) {
                                        o.css("background", "#ffffcc");
                                    } else {
                                        o.removeAttr("style");
                                    }
                                }
                            });
                        };
                        var searchKeywords = function () {
                            var searchInput = $('#search-keywords');
                            var button = $('.search-keywords-wrapper').find('.search-keywords');

                            if (searchInput.val().trim().length > 0 && !button.hasClass('clear-results')) {
                                mainArea.find('.translation-table tbody').replaceWith('<tbody><tr><td class="no-padding" colspan="3"><div class="block-preloader" style="height: 200px;"></div></td></tr></tbody>');
                                App.remote.get(window.location.href, {code: mainArea.find('#switch_dict div.obj.lang-active').attr('data-code'),search: searchInput.val()}, function (r) {
                                    var result = App.remote.parseResult(r);
                                    if (result.data.isError()) {
                                        App.notify.error(result.data.getMessage());
                                        return false;
                                    }
                                    var html = result.data.getOutput();
                                    mainArea.find('.languages').replaceWith(html);
                                    $('ul.languages-tabs').hide();
                                    button.attr('src', App.assets.common.image('icons/16/delete.png')).addClass('clear-results');
                                });
                            } else {
                                searchInput.val('');
                                button.attr('src', App.assets.common.image('search.png')).removeClass('clear-results');
                                $('ul.languages-tabs').show().find('li.active').trigger(App.event.click());
                            }
                            showTranslation();
                        };
                        $('.search-keywords-wrapper .search-keywords').on(App.event.click(), function () {
                            searchKeywords();
                            return false;
                        })
                        $('#search-keywords').on('keydown', function (e) {
                            switch (e.keyCode) {
                                case 13:
                                    e.stopImmediatePropagation();
                                    $(this).next().removeClass('clear-results').trigger(App.event.click());
                                    return false;
                                case 27:
                                    e.stopImmediatePropagation();

                                    if ($(this).next().hasClass('clear-results')) {
                                        $(this).next().trigger(App.event.click());
                                    }

                                    return false;
                            }
                        });
                        var wrapContainer = $(".wrap-container");
                        wrapContainer.openFromUrl({modal: {title: App.t("Update Language")}}, '.lang-actions .iupdate');
                        wrapContainer.on(App.event.click(), "#language-add, .iedit", function (e) {
                            e.preventDefault();
                            var link = $(this);
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: (link.is('#language-add')) ? App.t("New Language") : App.t("Edit Language"),
                                    width: '500',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: link.attr("href")
                                },
                                complete: function (modal) {
                                    var modalBody = modal.getContent(true);

                                    modalBody.attachFiles({extensions: ['xml', 'XML']});

                                    modalBody.on("submit", 'form', function (e) {
                                        e.preventDefault();

                                        var form = $(this);
                                        var required = form.find(".required input");

                                        if (required.length && required.val().trim() == "") {
                                            required.parent().addClass("error");
                                            App.notify.error(App.t("Please fill in required fields"));
                                            return false;
                                        }

                                        form.find('button').attr('disabled', 'disabled');
                                        form.find('.preloader').css('margin-right', '10px').show();

                                        App.remote.post(form.attr("action"), form.serialize(), function (r) {
                                            var result = App.remote.parseResult(r);
                                            if (result.data.isError()) {
                                                App.notify.error(result.data.getMessage());
                                                return false;
                                            }
                                            if (link.closest(".obj").length) {
                                                link.closest(".obj").remove();
                                            }
                                            mainArea.find("#switch_dict").append(result.data.getOutput());
                                            App.notify.success(result.data.getMessage());
                                            App.dynamic.modal.close(modal.modal);
                                        });
                                    });
                                }
                            });
                        });
                        //remove languages
                        mainArea.on(App.event.click(), ".lang-actions .idelete", function (e) {
                            e.preventDefault();
                            if (!confirm(App.t('Are you sure? You can\'t UNDO this operation!'))) {
                                return false;
                            }
                            var self = $(this);
                            self.removeClass("idelete").addClass("preloader");
                            App.remote.post(self.attr("href"), null, function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                self.closest(".obj").remove();
                                App.notify.success(result.data.getMessage());
                            });
                        });
                    });
                }
            },
            adminRoles: {
                index: function () {
                    App.onReady(function () {
                        $('#main').on(App.event.click(), "#add-new-role, .roles .iedit", function (event) {
                            event.preventDefault();

                            if ($(this).attr('id') == 'add-new-role') {
                                title_modal = App.t("New Role");
                            } else {
                                title_modal = App.t("Edit Role");
                            }
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: title_modal,
                                    width: '600',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: $(this).attr('href')
                                },
                                complete: function (modal) {
                                    var modalBody = modal.getContent(true);

                                    modalBody.on("submit", 'form', function (e) {
                                        e.preventDefault();
                                        var form = $(this);
                                        var required = form.find("input.required");

                                        if (required.length && required.val().trim() == "") {
                                            required.parent().addClass("error");
                                            App.notify.error(App.t("Please fill in required fields"));
                                            return false;
                                        }

                                        form.find('input[type=submit]').attr('disabled', 'disabled');
                                        form.find('.preloader').css('margin-right', '10px').show();

                                        App.remote.post(form.attr("action"), form.serialize(), function (r) {
                                            var result = App.remote.parseResult(r);
                                            if (result.data.isError()) {
                                                App.notify.error(result.data.getMessage());
                                                form.find('.preloader').hide();
                                                return false;
                                            }
                                            App.notify.success(result.data.getMessage());
                                            App.dynamic.modal.close(modal.modal);
                                        });
                                    });
                                }
                            });
                        });

                        $('#main').on(App.event.click(), "#add-new-department, .departments .iedit", function (event) {
                            event.preventDefault();

                            var title_modal = $(this).attr('id') == 'add-new-department' ? App.t("New Department") : App.t("Edit Department");
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: title_modal,
                                    width: '600',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: $(this).attr('href')
                                },
                                complete: function (modal) {
                                    var modalBody = modal.getContent(true),
                                        usersWrapper = modalBody.find('.modal-list-checkbox-icons');

                                    if (usersWrapper.find('label').length == 0) {
                                        usersWrapper.prev().remove();
                                        usersWrapper.next().removeClass('hidden');
                                    }

                                    modalBody.on("submit", 'form', function (e) {
                                        e.preventDefault();
                                        var form = $(this);
                                        var required = form.find("input.required");

                                        if (required.length && required.val().trim() == "") {
                                            required.parent().addClass("error");
                                            App.notify.error(App.t("Please fill in required fields"));
                                            return false;
                                        }

                                        form.find('input[type=submit]').attr('disabled', 'disabled');
                                        form.find('.preloader').css('margin-right', '10px').show();

                                        App.remote.post(form.attr("action"), form.serialize(), function (r) {
                                            var result = App.remote.parseResult(r);
                                            if (result.data.isError()) {
                                                App.notify.error(result.data.getMessage());
                                                form.find('.preloader').hide();
                                                return false;
                                            }
                                            App.notify.success(result.data.getMessage());
                                            $('.content-tabs-area.departments').html(result.data.getOutput());
                                            App.dynamic.modal.close(modal.modal);
                                        });
                                    });
                                }
                            });
                        });

                        $(".content-tabs-area.roles").on(App.event.click(), '.idelete', function () {
                            var role = $(this).parent().parent().find("td").eq(0).text();
                            if (confirm(App.t("Are your sure you want to delete role - ") + role + '?')) {
                                var link = $(this);
                                link.css("background-image", 'url(' + App.assets.common.image('/preloader.gif') + ')');
                                App.remote.get(link.attr("href"), {format: 'json'}, function (r) {
                                    var result = App.remote.parseResult(r);
                                    if (result.data.isError()) {
                                        App.notify.error(result.data.getMessage());
                                        return false;
                                    }
                                    App.notify.success(result.data.getMessage());
                                    link.parent().parent().remove();
                                });
                            }
                            return false;
                        });

                        $(".content-tabs-area.departments").on(App.event.click(), '.idelete', function () {
                            var department = $(this).parent().parent().find("td").eq(0).text();
                            if (confirm(App.t("Are you sure you want to delete department - ") + department + '?')) {
                                var link = $(this);
                                link.css("background-image", 'url(' + App.assets.common.image('/preloader.gif') + ')');
                                App.remote.get(link.attr("href"), {format: 'json'}, function (r) {
                                    var result = App.remote.parseResult(r);
                                    if (result.data.isError()) {
                                        App.notify.error(result.data.getMessage());
                                        return false;
                                    }
                                    App.notify.success(result.data.getMessage());
                                    $('.content-tabs-area.departments').html(result.data.getOutput());
                                });
                            }
                            return false;
                        });
                    });
                }
            },
            adminInterface: {
                widget: function () {
                    App.onReady(function () {
                        var activeWidget = $('div.widget-block:visible'),
                            activeForm = activeWidget.find('form');

                        // Widget tabs
                        $('#widget-tabs').on(App.event.click(), 'a', function (event) {
                            event.preventDefault();
                            var tabLink = $(this);
                            if (tabLink.hasClass('activ-pos')) return;
                            tabLink.addClass('activ-pos');
                            $(event.delegateTarget).find('a').not(tabLink).removeClass('activ-pos');
                            var widgets = $('div.widget-block');
                            widgets.not(':hidden').hide(0, function () {
                                activeWidget = widgets.filter('#widget-' + tabLink.attr('rel'));
                                activeWidget.show();
                                activeForm = activeWidget.find('form');
                            });
                            App.cookie.set('widget_tab', tabLink.attr('href').replace('#', ''));
                        });

                        var selectedTab = App.cookie.get('widget_tab');
                        if (null !== selectedTab) {
                            $('#widget-tabs').find('a[href="#' + selectedTab + '"]').trigger(App.event.click());
                        }

                        $('input[name=widget_side]').click(function () {
                            $('input[name=widget_side][value=' + $(this).val() + ']').attr('checked', 'checked');
                            if ($(this).val() == 'left') {
                                $('.widget-demo').removeClass('w-right').addClass('w-left');
                            } else {
                                $('.widget-demo').removeClass('w-left').addClass('w-right');
                            }
                        });
                        $('input[name=widget_background_color]').change(function () {
                            $('input[name=widget_background_color]').not(this)
                                .css('background-color', '#' + this.color).val(this.value);
                            $('.widget-demo').css('background-color', '#' + this.color);
                        });
                        $('input[name=widget_border_color]').change(function () {
                            $('input[name=widget_border_color]').not(this)
                                .css('background-color', '#' + this.color).val(this.value);
                            $('.widget-demo').css('border-color', '#' + this.color);
                        });
                        $('input[name=widget_round_corners]').click(function () {
                            var cornersHandlers = $('input[name=widget_round_corners]').not(this);
                            if ($(this).is(':checked')) {
                                cornersHandlers.attr('checked', 'checked');
                            } else {
                                cornersHandlers.removeAttr('checked');
                            }
                            $('.widget-demo').toggleClass('w-round');
                        });
                        $('input[name=widget_drop_shadow]').click(function () {
                            var shadowHandlers = $('input[name=widget_drop_shadow]').not(this);
                            if ($(this).is(':checked')) {
                                shadowHandlers.attr('checked', 'checked');
                            } else {
                                shadowHandlers.removeAttr('checked');
                            }
                            $('.widget-demo').toggleClass('w-shadow');
                        });
                        $('select[name=widget_default_tab]').change(function () {
                            $('select[name=widget_default_tab]').not(this).val(this.value);
                        });

                        // Initialization widget
                        $('.widget-demo').css('background-color', '#' + $('#widget_background_color').val());
                        $('.widget-demo').css('border-color', '#' + $('#widget_border_color').val());
                        $('input[name=widget_side]:checked').click();
                        if ($('#widget_round_corners').attr('checked')) $('.widget-demo').addClass('w-round');
                        if ($('#widget_drop_shadow').attr('checked')) $('.widget-demo').addClass('w-shadow');

                        $("#submit-feedback").click(function () {
                            $("#system-form-widgetfeedback").submit();
                        });

                        $("#submit-search").click(function () {
                            $("#system-form-widgetsearch").submit();
                        });

                        $(".get-code").click(function () {
                            var onClick = '';
                            var code = '<script type="text/javascript">';

                            var widgetName = activeForm.find("input[name=widget_name]").val();

                            if (widgetName == 'feedback') {
                                code += 'var URWidgetListener = function (event) {';
                                code += '  if (event.data.indexOf("redirect") == 0) {';
                                code += '    found = event.data.match(/redirect:url\\(([^\\)]*)\\)/);';
                                code += '    if (found.length == 2) {';
                                code += '      location.href = found[1];';
                                code += '    }';
                                code += '  }';
                                code += '};';
                                code += 'if (window.addEventListener) {';
                                code += '  window.addEventListener("message", URWidgetListener, false);';
                                code += '} else {';
                                code += '  window.attachEvent("onmessage", URWidgetListener);';
                                code += '}';
                            }
                            code += ' var head  = document.getElementsByTagName("head")[0];var link  = document.createElement("link");link.rel  = "stylesheet";link.type = "text/css";link.href = "' + App.baseUrl('/custom/themes/' + App.getParam('defaultTheme', 'default') + '/assets/desktop/css/widget.css') + '";link.media = "all";head.appendChild(link);</script>';
                            if (activeForm.find("input[name=widget_open]:checked").val() == "widget") {
                                href = App.baseUrl('/widget?type=' + widgetName);
                                code += '<script type="text/javascript">widget = {url:\'' + App.baseUrl() + '\'}</script>';
                                width = 600;
                                height = 400;

                                if (widgetName == 'feedback') {
                                    width = 773;
                                    height = 405;
                                }
                                onClick = 'javascript:popup(\'widget\', \'' + href + '\', ' + width + ', ' + height + ');';
                                target = "";
                            } else {
                                onClick = App.baseUrl();
                                target = "target='_blank'";
                            }
                            classes = "widget-tab";
                            if (activeForm.find("input[name=widget_side]:checked").val() == "left") {
                                classes += " widget-tab-left";
                            } else {
                                classes += " widget-tab-right";
                            }
                            if (activeForm.find("#widget_round_corners").attr("checked")) {
                                classes += " w-round";
                            }
                            if (activeForm.find("#widget_drop_shadow").attr("checked")) {
                                classes += " w-shadow";
                            }
                            style = "margin-top:-" + App.getParam('widgetMarginTop') + "px;";
                            if ($("#widget_background_color").val() != "") {
                                style += "background-color:#" + $("#widget_background_color").val() + ";";
                            }
                            if ($("#widget_border_color").val() != "") {
                                style += "border-color:#" + $("#widget_border_color").val() + ";";
                            }
                            code += '<a class="' + classes + '" style="' + style + '" title="' + $("#widget_text").val() + '" href="' + onClick + '" ' + target + ' >\n';
                            code += '  <img width="15" alt="" src="' + App.getParam('widgetTextUrl') + '" />\n';
                            code += '</a>';
                            activeWidget.find(".code-for-widget textarea").val(code);
                            activeWidget.find(".code-for-widget").fadeIn();
                        });
                    });
                },
                index: function () {
                    App.onReady(function () {

                        $('#system-form-interface').on('submit', function () {
                            var form = $(this),
                                submit = form.find('#submit'),
                                preloader = submit.siblings(".preloader");

                            preloader.removeClass('hidden');
                            submit.attr('disabled', 'disabled');
                        });

                        /* Interface Home Screen */
                        var interfaceTabsScroll = function () {
                            var elem = $('.interface-tabs ul');
                            var right_arrow = $(".interface-tabs .arrow-tab.right-arrow");
                            var left_arrow = $(".interface-tabs .arrow-tab.left-arrow");

                            var last_position_interface = $('#tabsContainer li').last().position().left + $('#tabsContainer li').last().outerWidth();
                            var menu_width_interface = $('#tabsContainer').width();

                            if (last_position_interface > menu_width_interface) {
                                var maxScroll = menu_width_interface - last_position_interface;
                                right_arrow.show();

                                elem.css('left', 0);
                                right_arrow.mousedown(function () {
                                    $.scrollTabs_right(elem, left_arrow, right_arrow, maxScroll);
                                })
                                    .mouseup(function () {
                                        $.scrollTabs_stop(elem);
                                    });

                                left_arrow.mousedown(function () {
                                    $.scrollTabs_left(elem, left_arrow, right_arrow, maxScroll);
                                })
                                    .mouseup(function () {
                                        $.scrollTabs_stop(elem);
                                    });
                            } else {
                                elem.css('left', 0);
                                right_arrow.hide();
                                left_arrow.hide();
                            }
                        };

                        $('.content-tabs').on(App.event.click(), '#home-screen', function () {
                            interfaceTabsScroll();
                        });


                        var manageWidgetsHandler = function (e) {
                            e.preventDefault();

                            var self = $(this),
                                widget_pos = self.attr('widget_pos'),
                                widget_id = '',
                                modalTitle = 'Add New Widget',
                                modalWidth = 750;

                            if ('edit-widget' == self.attr('x-action')) {
                                widget_pos = self.closest('ul').attr('position');
                                widget_id = self.attr('widget_id');
                                modalTitle = 'Edit Widget';
                                modalWidth = modalWidth - 190;
                            }

                            /* Open modal dialog with widgets settings forms */
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: App.t(modalTitle),
                                    width: modalWidth,
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: $(this).attr('href'),
                                    data: {
                                        widget_pos: widget_pos,
                                        widget_id: widget_id
                                    }
                                },
                                complete: function (modal) {
                                    var modalBody = modal.getContent(true);

                                    /**
                                     * Widget tabs "click" handler.
                                     * @event click
                                     */
                                    modalBody.on(App.event.click(), '.modalTabs li', function (event) {
                                        var self = $(this),
                                            widgetName = $(this).attr('widget_name'),
                                            contentTab = self.closest('.modalTable').find('.modalTabArea[widget_name="' + widgetName + '"]');

                                        if (self.hasClass('active') && !contentTab.hasClass('hidden')) {
                                            return;
                                        }

                                        contentTab.toggleClass('hidden').siblings('.modalTabArea').addClass('hidden');
                                        self.addClass('active').siblings().removeClass('active');
                                    });

                                    /**
                                     * Single submit button for all widget forms.
                                     * @event click
                                     */
                                    $('#widget_from_submit').on(App.event.click(), function (event) {
                                        modalBody.find('div.modalTabArea:visible form').trigger('submit');
                                    });

                                    /**
                                     * Widget form "submit" handler.
                                     * @event submit
                                     */
                                    modalBody.on("submit", 'form', function (e) {
                                        e.preventDefault();
                                        var form = $(this);
                                        var required = form.find("input.required");

                                        var form = $(this),
                                            required = form.find("input.required, textarea.required, select.required");

                                        /* Validate required fields */
                                        if (required.length && required.val().trim() == "") {
                                            required.parent().addClass("error");
                                            App.notify.error(App.t("Please fill in required fields"));
                                            return false;
                                        }

                                        $('#widget_from_submit').attr('disabled', 'disabled');

                                        var preloader = modalBody.find('.modalFooter .preloader');
                                        preloader.show();

                                        var formData = App.utils.formToObject(form);
                                        formData.widget_name = form.closest('div.modalTabArea').attr('widget_name');
                                        formData.widget_pos = widget_pos;

                                        App.remote.post(form.attr("action"), formData, function (response) {
                                            preloader.hide();
                                            $('#widget_from_submit').removeAttr('disabled');

                                            var result = App.remote.parseResult(response);
                                            if (result.data.isError()) {
                                                App.notify.error(result.data.getMessage());
                                                return false;
                                            }

                                            var operation = result.data.getParam('operation'),
                                                container = $('#' + widget_pos + 'Container');

                                            if (!container.is('ul')) {
                                                App.notify.error(
                                                    'Unable to find widget container for position "' + widget_pos + '"'
                                                );
                                                return;
                                            }

                                            var message = null;

                                            switch (operation) {
                                                case 'insert':
                                                    container.append(result.data.getOutput());
                                                    message = 'Widget is added!';
                                                    break;
                                                case 'update':
                                                    container.find('li[widget_id="' + result.data.getParam('widget_id') + '"]').replaceWith(
                                                        result.data.getOutput()
                                                    );
                                                    message = 'Widget is updated!';
                                                    break;
                                            }

                                            if (message) {
                                                App.notify.success(App.t(message));
                                            }
                                            modal.close();
                                        });
                                    });
                                }
                            });
                        };

                        $('.add-widget a').on(App.event.click(), manageWidgetsHandler);
                        $('table.admin-widgets').on(App.event.click(), 'a[x-action="edit-widget"]', manageWidgetsHandler);

                        /**
                         * Delete widget handler
                         * @event click
                         */
                        $('table.admin-widgets').on(App.event.click(), 'a[x-action="delete-widget"]', function (event) {
                            event.preventDefault();
                            if (!confirm(App.t('Are you sure? You can\'t UNDO this operation!'))) {
                                return false;
                            }

                            var widgetId = $(this).attr('widget_id'),
                                preloader = App.preloader(this),
                                self = this;
                            preloader.start();

                            App.remote.post({
                                url: App.baseUrl('/admin/widget/delete'),
                                data: {widget_id: widgetId},
                                success: function (response) {
                                    $(self).closest('li[widget_id="' + widgetId + '"]').slideUp('fast', function () {
                                        $(this).remove();
                                    });
                                    App.notify.success(response.data.getMessage());
                                },
                                complete: function (response) {
                                    preloader.stop();
                                },
                                error: function (response) {
                                    App.notify.error(response.data.getMessage());
                                }
                            });
                        });

                        /**
                         * Main Navigation updater
                         */
                        var updateNavigation = function () {
                            var topNav = $('#top_navigation');
                            topNav.find('div.menu-tabs').fadeTo('fast', 0.5);
                            topNav.load(location.href + " #top_navigation>*", function () {
                                $.topNavScroll();
                                interfaceTabsScroll();
                            });
                        };

                        /* Containers */
                        var topContainer = $("#topContainer"),
                            middleContainer = $("#middleContainer"),
                            sidebarContainer = $('#sidebarContainer'),
                            tabsContainer = $('#tabsContainer');

                        /**
                         * Common options for sortable objects.
                         * Use $.extend to extend or overwrite options.
                         *
                         * @type {{connectWith: string, handle: string, opacity: number, scrollSensitivity: number, tolerance: string, containment: string, cursorAt: {left: number}, forceHelperSize: boolean, forcePlaceholderSize: boolean, grid: number[], axis: string, revert: number}}
                         */
                        var commonOptions = {
                            connectWith: ".admin-widget-container",
                            handle: ".imove",
                            opacity: 0.6,
                            scrollSensitivity: 20,
                            tolerance: 'pointer',
                            containment: '.admin-widgets',
                            cursorAt: { left: 12 },
                            forceHelperSize: true,
                            forcePlaceholderSize: true,
                            grid: [ 500, 1 ],
                            axis: 'y',
                            //revert: 200,
                            stop: function (event, ui) {
                                updateWidgets();
                            }
                        };

                        var updateWidgets = function () {
                            var getOptionsFor = function (pos) {
                                return {
                                    key: "widget[" + pos + "][]",
                                    attribute: 'widget_id',
                                    expression: /(\d+)/
                                };
                            };

                            var parts = [];
                            parts.push(topContainer.sortable("serialize", getOptionsFor('top')));
                            parts.push(middleContainer.sortable("serialize", getOptionsFor('middle')));
                            parts.push(sidebarContainer.sortable("serialize", getOptionsFor('sidebar')));

                            App.remote.get(App.baseUrl('/admin/widget/update-widgets?' + parts.join('&')), {}, function (response) {

                            });
                        };

                        /* Top and middle widgets sortable */
                        topContainer.sortable(
                            commonOptions
                        ).disableSelection();

                        middleContainer.sortable(
                            commonOptions
                        ).disableSelection();

                        /* Sidebar widgets sortable */
                        sidebarContainer.sortable(
                            $.extend(commonOptions, {
                                grid: false,
                                connectWith: '#sidebarContainer',
                                containment: 'body',
                                cursorAt: false
                            })
                        ).disableSelection();

                        /* Navigation tabs sortable */
                        tabsContainer.sortable(
                            $.extend(commonOptions, {
                                grid: false,
                                connectWith: '#tabsContainer',
                                containment: 'div.content-tabs-area.home-screen',
                                items: "li:not(#add_tab)",
                                cursorAt: false,
                                axis: 'x',
                                stop: function (event, ui) {
                                    var tabs = tabsContainer.sortable("toArray", {
                                        key: "tabs[]",
                                        attribute: 'tab_id',
                                        expression: /(\S+)/
                                    });

                                    App.remote.post(App.baseUrl('/admin/interface/top-navigation/tabs-reorder'), {
                                        tabs: tabs
                                    }, function (response) {
                                        try {
                                            updateNavigation();
                                            var result = App.remote.parseResult(response);
                                            if (result.data.isError()) {
                                                App.notify.error(result.data.getMessage());
                                            }
                                        } catch (e) {
                                        }
                                    });
                                }
                            })
                        ).disableSelection();

                        $('#sidebarContainer input[x-action="widget_toggle"]').each(function () {
                            if (!$(this).is(':checked')) {
                                App.switchUnactive(
                                    $(this).closest('li').find('div.admin-widget-sidebar-subwrapper')
                                );
                            }
                        });

                        $('table.admin-widgets').on('change', 'input[x-action="widget_toggle"]', function (event) {
                            var preloader = App.preloader(this),
                                self = $(this);
                            preloader.start();

                            App.remote.get(App.baseUrl('/admin/widget/toggle'), {
                                widget_id: $(this).attr('widget_id'),
                                switch: $(this).is(':checked') ? 'yes' : 'no'
                            }, function (response) {
                                preloader.stop();
                                var result = App.remote.parseResult(response);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                }

                                App.switchUnactive(
                                    self.closest('li').find('div.admin-widget-sidebar-subwrapper')
                                );
                            });
                        });

                        var tabsManageHandler = function (event) {
                            event.preventDefault();

                            var action = $(this).attr('x-action'),
                                modalTitle = 'add' === action ? 'Add New Tab' : 'Edit Tab',
                                tabId = 'edit' === action ? $(this).attr('tab_id') : '';

                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: App.t(modalTitle),
                                    width: '500',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: App.baseUrl('/admin/interface/top-navigation'),
                                    data: {
                                        tab_id: tabId
                                    }
                                },
                                complete: function (modal) {
                                    var content = modal.getContent(true);

                                    content.find('.tooltip').powerTip({ placement: 'n', smartPlacement: true });

                                    $('#system-form-topnavigation').on('submit', function (event) {
                                        event.preventDefault();

                                        var formData = App.utils.formToObject($(this));

                                        App.remote.post($(this).attr('action'), $.extend({
                                            tab_id: null
                                        }, formData), function (response) {
                                            var result = App.remote.parseResult(response),
                                                message = result.data.getMessage();
                                            if (result.data.isSuccess()) {
                                                var tabId = result.data.getParam('tab_id'),
                                                    tabNode = $(result.data.getOutput()).find('li[tab_id="' + tabId + '"]'),
                                                    nodeAction = result.data.getParam('node_action');

                                                if ('append' == nodeAction) {
                                                    $('#add_tab').before(tabNode);
                                                } else if ('replace' == nodeAction) {
                                                    tabsContainer.find('li[tab_id="' + tabId + '"]').replaceWith(tabNode);
                                                }

                                                updateNavigation();

                                                App.notify.success(message);
                                                modal.close();
                                            } else {
                                                App.notify.error(message);
                                            }
                                        });
                                    });

                                    $('#delete_tab').on(App.event.click(), function (event) {
                                        event.preventDefault();

                                        var tabId = $(this).attr('tab_id');

                                        App.remote.get(App.baseUrl('admin/interface/top-navigation/tab-delete'), {
                                            tab_id: tabId
                                        }, function (response) {
                                            var result = App.remote.parseResult(response);
                                            try {
                                                var msg = result.data.getMessage();
                                                if (result.data.isSuccess()) {
                                                    tabsContainer.find('li[tab_id="' + tabId + '"]').remove();
                                                    App.notify.success(msg);
                                                    modal.close();
                                                    updateNavigation();
                                                } else {
                                                    App.notify.error(msg);
                                                }
                                            } catch (e) {
                                            }
                                        });
                                    });
                                }
                            });
                        }

                        $('#add_tab').on(App.event.click(), tabsManageHandler);
                        tabsContainer.on(App.event.click(), 'a[x-action="edit"]', tabsManageHandler);

                        /* Toggle tabs */
                        tabsContainer.on('change', 'input[x-action="tab_toggle"]', function (event) {
                            var preloader = App.preloader(this),
                                self = $(this);
                            preloader.start();

                            App.remote.get(App.baseUrl('/admin/interface/top-navigation/tab-toggle'), {
                                tab_id: $(this).attr('tab_id'),
                                switch: $(this).is(':checked') ? 'yes' : 'no'
                            }, function (response) {
                                preloader.stop();
                                updateNavigation();
                                var result = App.remote.parseResult(response);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                }
                            });
                        });
                    });
                }
            },
            adminSettings: {
                general: function () {
                    App.onReady(function () {
                        $("input[type=file]").change(function () {
                            filename = this.value.replace(/^.*[\/\\]/g, "");
                            $(this).parent().find("input[type=text]").val(filename);
                        });
                        $("input[name=anonymous_responses]").live('click', function () {
                            if ($(this).val() == "1") {
                                $("label[for=feedback_captcha]").show();
                            } else {
                                $("label[for=feedback_captcha]").hide();
                            }
                        });
                        $("input[name=anonymous_responses]:checked").click();

                        $('.content-tabs-area form').on('submit', function (e) {
                            var form = $(this),
                                submit = form.find('#submit'),
                                preloader = submit.siblings(".preloader");

                            var required = form.find("input.required");

                            if (required.length && required.val().trim() == "") {
                                required.parent().addClass("error");
                                App.notify.error(App.t("Please fill in required fields"));
                                return false;
                            }

                            preloader.removeClass('hidden');
                            submit.attr('disabled', 'disabled');
                        });

                        var preModerate = $('div.content-tabs-object.setting_key_pre_moderate');
                        var reportAbuse = $('div.content-tabs-object.setting_key_use_report_abuse');
                        var declineReason = $('div.content-tabs-object.setting_key_decline_reason');
                        var toggleReportAbuse = function (mode) {
                            if (mode == 0) {
                                reportAbuse.addClass('hidden');
                                declineReason.addClass('hidden');
                            } else {
                                reportAbuse.removeClass('hidden');
                                declineReason.removeClass('hidden');
                            }
                        };
                        declineReason.addClass('object-color').insertAfter(preModerate);
                        reportAbuse.addClass('object-color').insertAfter(preModerate);
                        preModerate.on(App.event.click(), 'input[name="pre_moderate"]', function () {
                            toggleReportAbuse($(this).val());
                        });
                        toggleReportAbuse(
                            preModerate.find('input[name="pre_moderate"][checked]').val()
                        );

                        /* API settings script */
                        var useApi = $('div.content-tabs-object.use-api');

                        var treatVisibility = function () {
                            if (useApi.find('input:checked').val() == 1) {
                                $('div.content-tabs-object.api-enabled-option').removeClass('hidden');
                                $('div.content-tabs-object.api-disabled-option').addClass('hidden');
                            } else {
                                $('div.content-tabs-object.api-enabled-option').addClass('hidden');
                                $('div.content-tabs-object.api-disabled-option').removeClass('hidden');
                            }
                        };

                        useApi.find('input').on('change', treatVisibility);
                        treatVisibility();
                    });
                }
            },

            adminModules: {
                index: function () {
                    App.onReady(function () {
                        $("#ftp-access").click(function () {
                            if ($(".dropDown-div.ftp-access").is(":visible")) {
                                $(".dropDown-div.ftp-access").fadeOut();
                            } else {
                                $(".dropDown-div.ftp-access").fadeIn();
                            }
                            return false;
                        });
                        $(".udgrade").click(function () {
                            $("#upgrade-title, #upgrade-description").remove();
                            $(".dropDown-div.upgrade-form, .dropDown-div.upgrade-process").remove();
                            if (!$(".dropDown-div.upgrade-form").is(":visible")) {
                                button = $(this);
                                button.hide();
                                preloader = $(this).parents(".object").find(".preloader");
                                preloader.show();
                                params = {
                                    url: App.baseUrl('/admin/upgrade'),
                                    data: {step: 'prepare'},
                                    success: function (response) {
                                        output = response.data.getOutput();
                                        $(".mainArea-type2 .modules-area").prepend(output);
                                    },
                                    complete: function (response) {
                                        preloader.hide();
                                        button.show();
                                    },
                                    error: function (response) {
                                        App.notify.error(response.data.getMessage());
                                    }
                                };
                                App.remote.post(params);
                            }
                            return false;
                        });

                        rollback = function (obj) {
                            obj.find('i').addClass('preloader');
                            params = {
                                url: App.baseUrl('/admin/upgrade'),
                                data: {step: obj.attr('id')},
                                complete: function (response) {
                                    if (response.status == 'error') {
                                        obj.find('i').removeClass('preloader').addClass('delete');
                                    } else {
                                        obj.find('i').removeClass('preloader')
                                            .addClass(response.data.getParam('icon'));
                                    }
                                },
                                error: function () {
                                    obj.find("i").addClass('delete');
                                }
                            };
                            App.remote.post(params);
                        };

                        step = function (objects) {
                            obj = $(objects.shift());
                            obj.find('i').addClass('preloader');
                            params = {
                                url: App.baseUrl('/admin/upgrade'),
                                data: {step: obj.attr('id')},
                                success: function (response) {
                                    if (objects.length > 0) {
                                        step(objects);
                                    } else {
                                        App.notify.success(response.data.getMessage());
                                        setTimeout(function () {
                                            location.reload();
                                        }, 5000);
                                    }
                                },
                                complete: function (response) {
                                    if (!jQuery.isPlainObject(response.data)) {
                                        obj.find('i').removeClass('preloader').addClass('delete');
                                        ;
                                        $(objects).each(function () {
                                            $(this).find("i").addClass('delete');
                                        });
                                        $("#rollback").show();
                                        rollback($("#rollback"));
                                        return;
                                    }
                                    obj.find('i').removeClass('preloader')
                                        .addClass(response.data.getParam('icon'));
                                },
                                error: function (response) {
                                    App.notify.error(response.data.getMessage());
                                    $(objects).each(function () {
                                        $(this).find("i").addClass('delete');
                                    });
                                    $("#rollback").show();
                                    rollback($("#rollback"));
                                }
                            };
                            App.remote.post(params);
                        };

                        $("#start-upgrade").live("click", function () {
                            var objects = [];
                            form = $(this).parents("form");
                            data = {};
                            data['settings'] = App.getFormParams(form);
                            data['step'] = 'start';
                            params = {
                                url: App.baseUrl('/admin/upgrade'),
                                data: data,
                                success: function (response) {
                                    if (!jQuery.isPlainObject(response.data)) {
                                        return;
                                    }
                                    $(".upgrade-form").remove();
                                    output = response.data.getOutput();
                                    descr = response.data.getParam('description');
                                    $("#upgrade-description").html(descr);
                                    $("#upgrade-description").after(output);
                                    $('.upgrade-process .table-col-line').each(function () {
                                        if ($(this).attr("id") != "rollback") {
                                            objects.push($(this));
                                        }
                                    });
                                    step(objects);
                                }
                            };
                            App.remote.post(params);
                            return false;
                        });

                        $("#testconnect").click(function () {
                            form = $("#system-form-ftpaccess");
                            form.find(".preloader").show();
                            params = {
                                url: App.baseUrl('/admin/modules/ftp-test-connect'),
                                data: App.getFormParams(form),
                                success: function (response) {
                                    App.notify.success(response.data.getMessage());
                                    $('#ftp_folder').val(response.data.getParam('path'));
                                },
                                complete: function () {
                                    form.find(".preloader").hide();
                                },
                                error: function (response) {
                                    App.notify.error(response.data.getMessage());
                                }
                            };
                            App.remote.post(params);
                        });
                        $(".activeCheckbox input").click(function () {
                            var input = $(this);
                            input.hide();
//                            input.parent().css("margin-top", "0px");
                            input.parent().append('<i class="preloader" style="display:inline-block;"></i>');
                            if (input.is(":checked")) {
                                value = 1;
                                input.attr("title", App.t('Disactivate Module'));
                            } else {
                                value = 0;
                                input.attr("title", App.t('Activate Module'));
                            }
//                            $('.tooltip').powerTip({ placement: 'n', smartPlacement: true });

                            params = {
                                url: App.baseUrl('/admin/modules/activation'),
                                data: {'name': input.attr('name'), 'value': value},
                                success: function (response) {
                                    input.show();
//                                    input.parent().css("margin-top", "3px");
                                    input.parent().find(".preloader").remove();
                                    App.notify.success(response.data.getMessage());
                                },
                                error: function (response) {
                                    App.notify.error(response.data.getMessage());
                                }
                            };
                            App.remote.get(params);
                        });
                        $(".button-uninstall").click(function () {
                            var module = $(this).closest('.content-tabs-object').find('.tab-content-title a').text().trim();
                            return confirm(App.t('You want to uninstall ":moduleName" module. There is no UNDO action. Continue?', {moduleName: module}));
                        });
                        $('.content-tabs li span').on(App.event.click(), function (e) {
                            tab_id = $(this).parent().attr('id');
                            $('.content-tabs li').removeClass('active');
                            $(this).parent().addClass('active');
                            $('.content-tabs-area').addClass('hidden');
                            $('.content-tabs-area.' + tab_id).removeClass('hidden');
                        });
                    });
                }
            },
            adminMailingLog: {
                index: function () {
                    App.onReady(function () {
                        $('select.sortByLocation').on('change', function () {
                            var self = $(this);
                            var preloader = self.parent().find(".preloader");
                            preloader.css('display', 'inline-block');
                            App.remote.get(location.href, {'location': self.val()}, function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                $(".mainArea").html(result.data.getOutput());
                                preloader.hide();
                                $('.tooltip').powerTip({ placement: 'n', smartPlacement: true });
                            });
                        });

                        $(".wrap-container").on(App.event.click(), '.mailing_log .email-option a.iview', function (e) {
                            e.preventDefault();
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: $('.page-title').text(),
                                    width: '750',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: $(this).attr("href")
                                },

                                complete: function (modal) {
                                    var modalBody = modal.getContent(true);
                                }
                            });
                        });
                    });
                }
            },

            adminStatuses: {
                index: function () {
                    App.onReady(function () {
                        var bodyTable = $('tbody');
                        var addEditFunction = function () {
                            var link = $(this);
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: this.id === 'add-new-status' ? App.t("New Status") : App.t("Edit Status"),
                                    width: '500',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: this.href
                                },
                                complete: function (modal) {
                                    var modalBody = modal.getContent(true);
                                    jscolor.dir = '';
                                    jscolor.init();

                                    var updateStatusForm = function () {
                                        var statusPreview = document.getElementById('status-preview');
                                        statusPreview.style.backgroundColor = document.getElementById('color').style.backgroundColor;
                                        statusPreview.style.color = document.getElementById('text_color').style.backgroundColor;
//                                        statusPreview.innerHTML = document.getElementById('title').value ? App.t(document.getElementById('title').value) : App.t('Status Title');
                                        $(statusPreview).text(document.getElementById('title').value ? App.t(document.getElementById('title').value) : App.t('Status Title'));
                                    };
                                    modalBody.on('change', '#color, #text_color',function (e) {
                                        updateStatusForm();
                                    }).on('keyup', '#title', function (e) {
                                        updateStatusForm();
                                    });
//
                                    updateStatusForm();

                                    modalBody.on("submit", 'form', function (e) {
                                        e.preventDefault();

                                        var form = $(this),
                                            required = form.find("input.required"),
                                            submit = form.find(':submit'),
                                            preloader = form.find('i.preloader');

                                        submit.toggleDisable();
                                        preloader.toggle();
                                        if (required.length && required.val().trim() == "") {
                                            submit.toggleDisable();
                                            preloader.toggle();
                                            required.parent().addClass("error");
                                            App.notify.error(App.t("Please fill in required fields"));
                                            return false;
                                        }
                                        form.find('.preloader').css('margin-right', '10px').show();

                                        var objectType = $('#object_type');
                                        if (objectType.attr('disabled') != undefined) {
                                            objectType.data('was-disabled', 1);
                                        }
                                        objectType.removeAttr('disabled');
                                        var data = form.serialize();
                                        if (objectType.data('was-disabled') == 1) {
                                            objectType.removeData('objectType');
                                            objectType.attr('disabled', 'disabled');
                                        }
                                        App.remote.post(form.attr("action"), data, function (r) {
                                            var result = App.remote.parseResult(r);
                                            if (result.data === null || result.data.isError()) {
                                                preloader.toggle();
                                                submit.toggleDisable();
                                                App.notify.error(result.data.getMessage());
                                                return false;
                                            }
                                            preloader.toggle();
                                            submit.toggleDisable();
                                            var id = 'status_' + result.data.getParam('status_id'),
                                                editedRow = document.getElementById(id);
                                            if (editedRow) {
                                                document.getElementById(id).outerHTML = result.data.getOutput();
                                            } else {
                                                $(document.getElementById(result.data.getParam('object_type'))).click();
                                                $('tbody').filter(':visible').append(result.data.getOutput());
                                            }
                                            App.notify.success(result.data.getMessage());
                                            App.dynamic.modal.close(modal.modal);
                                        });
                                    });
                                }
                            });
                        };

                        bodyTable.on(App.event.click(), '.iedit', function (e) {
                                e.preventDefault();
                                addEditFunction.call(this);
                            }
                        );
                        $('#add-new-status').on(App.event.click(), function (e) {
                            e.preventDefault();
                            addEditFunction.call(this);
                        });

                        bodyTable.on(App.event.click(), ".idelete", function (e) {
                            e.preventDefault();
                            if (!confirm(App.t("Are you sure you want to delete category? All related objects will be without category!"))) {
                                return false;
                            }

                            var link = $(this);
                            link.removeClass("idelete").addClass("preloader");
                            App.remote.post(link.attr("href"), null, function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                link.closest("tr").remove();
                                var defaultId = result.data.getParam('default_id');
                                console.log(defaultId);
                                console.log(bodyTable.find('tr[data-id=' + defaultId + '] :radio'));
                                bodyTable.find('tr[data-id=' + defaultId + '] :radio').attr('checked', true);
                                App.notify.success(result.data.getMessage());
                            });
                        });

                        bodyTable.sortable({
                            handle: "a.imove",
                            update: function (event, ui) {
                                var order = $(this).find('tr').map(function () {
                                    return $(this).data('id');
                                }).get();
                                ui.item.find("a.imove").removeClass("imove").addClass('preloader');
                                App.remote.post(window.location.href, {order: order}, function (r) {
                                    var result = App.remote.parseResult(r);
                                    ui.item.find("a.preloader").addClass("imove").removeClass('preloader');
                                    if (result.data.isError()) {
                                        App.notify.error(result.data.getMessage());
                                        return false;
                                    }
                                    App.notify.success(result.data.getMessage());
                                });
                            }
                        });

                        bodyTable.on('change', ':radio', function (e) {
                            var $this = $(this),
                                preloader = App.preloader(this);
                            preloader.start();
                            App.remote.post(window.location.href, {is_default: this.value}, function (r) {
                                var result = App.remote.parseResult(r);
                                preloader.stop();
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                App.notify.success(result.data.getMessage());
                            });
                        });
                    });
                }
            },

            adminCategories: {
                index: function () {
                    App.onReady(function () {
                        var mainArea = $(".mainArea"),
                            module = mainArea.find('#tab_name').val(),
                            currUrl = App.baseUrl(App.getParam('categoryAdminUrl'));

                        //submit "requite" form
                        mainArea.on("change", ":radio[name=config_category_required]", function (e) {
                            e.preventDefault();
                            var self = $(this),
                                buttons = self.closest(".form-settings");
                            buttons.append("<i class='preloader' style='display: inline-block; margin-bottom: 5px; margin-left: 10px;'></i>");
                            App.remote.post(currUrl, {required: self.val()}, function (r) {
                                var result = App.remote.parseResult(r);
                                buttons.find("i").remove();
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                App.notify.success(result.data.getMessage());
                            });
                        });
                        mainArea.find("tbody").sortable({
                            handle: "a.imove",
                            update: function (event, ui) {
                                var slugs = $(this).find("tr").map(function () {
                                    return this.id;
                                }).get();
                                ui.item.find("a.imove").removeClass("imove").addClass('preloader');
                                App.remote.post(currUrl, {slugs: slugs}, function (r) {
                                    var result = App.remote.parseResult(r);
                                    ui.item.find("a.preloader").addClass("imove").removeClass('preloader');
                                    if (result.data.isError()) {
                                        App.notify.error(result.data.getMessage());
                                        return false;
                                    }
                                    App.notify.success(result.data.getMessage());
                                });
                            }
                        });

                        mainArea.on(App.event.click(), ".idelete", function (e) {
                            if (!confirm(App.t("Are you sure you want to delete category? All related objects will be without category!"))) {
                                return false;
                            }
                            e.preventDefault();
                            var link = $(this);
                            link.removeClass("idelete").addClass("preloader");
                            App.remote.post(link.attr("href"), null, function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                var parent = link.closest('.content-tabs-area');
                                link.closest("tr").remove();
                                resultsNotFoundToggler(parent);
                                App.notify.success(result.data.getMessage());
                            });
                        });

                        var editAddCategory = function () {
                            App.dynamic.modal.openFromUrl({
                                modal: {
                                    title: (this.id === 'add-new-category') ? App.t("New Category") : App.t("Edit Category"),
                                    width: '500',
                                    shader: false,
                                    useCustomScroller: true,
                                    useWrapper: false
                                },
                                request: {
                                    url: this.href
                                },
                                complete: function (modal) {
                                    var modalBody = modal.getContent(true);
                                    App.dynamic.event().trigger('categoryFormOpen', modalBody);
                                    modalBody.attachFiles({extensions: ['gif', 'png', 'jpeg', 'jpg']});
                                    /* show/hide visibility options */
                                    modalBody.on('change', '#module', function (e) {
                                        var privateInput = modalBody.find('input[name=is_private]'),
                                            privateBlock = privateInput.closest('.modalBlock');
                                    });

                                    modalBody.find('.form-file-upload').removeAttr('multiple');

                                    modalBody.on("submit", 'form', function (e) {
                                        e.preventDefault();
                                        var form = $(this);
                                        var required = form.find("input.required");
                                        form.toggleDisable();
                                        if (required.length && required.val().trim() == "") {
                                            required.parent().addClass("error");
                                            App.notify.error(App.t("Please fill in required fields"));
                                            form.toggleDisable();
                                            return false;
                                        }

                                        form.find('.preloader').css('margin-right', '10px').show();

                                        App.remote.post(form.attr("action"), form.serialize(), function (r) {
                                            var result = App.remote.parseResult(r);
                                            form.toggleDisable();
                                            if (result.data.isError()) {
                                                App.notify.error(result.data.getMessage());
                                                form.find('.preloader').hide();
                                                return false;
                                            }
                                            var id = result.data.getParam('slug'),
                                                editedRow = document.getElementById(id);
                                            if (editedRow) {
                                                document.getElementById(id).outerHTML = result.data.getOutput();
                                            } else {
                                                var tabId = result.data.getParam('object_type') != null ? result.data.getParam('object_type') : result.data.getParam('module');
                                                $(document.getElementById(tabId)).click();
                                                $('.content-tabs-area:visible').find('table').show().find('tbody').append(result.data.getOutput());
                                                resultsNotFoundToggler($('.content-tabs-area:visible'));
                                            }
                                            App.notify.success(result.data.getMessage());
                                            App.dynamic.modal.close(modal.modal);
                                        });
                                    });
                                }
                            });
                        };

                        var resultsNotFoundToggler = function (parent) {
                            if (parent.find('table tr').length <= 1) {
                                parent.find('.result-not-found').show();
                            } else {
                                parent.find('.result-not-found').hide();
                            }
                        };

                        mainArea.on(App.event.click(), '.iedit', function (event) {
                            event.preventDefault();
                            editAddCategory.call(this);
                        });

                        $('#add-new-category').on(App.event.click(), function (event) {
                            event.preventDefault();
                            editAddCategory.call(this);
                        });
                    });
                }

            },
            adminUpgrade: {
                step: function () {
                    alert('!!!');
                }
            },
            adminBackup: {
                index: function () {
                    App.onReady(function () {
                        $('input[name="backup_enabled"]').on('change', function () {
                            if ($(this).val() == 1) {
                                $(this).parents(".content-tabs-object").next().removeClass('hidden');
                            } else {
                                $(this).parents(".content-tabs-object").next().addClass('hidden');
                            }
                        });

                        $('#system-form-backup').on('submit', function () {
                            var form = $(this),
                                submit = form.find('#submit'),
                                preloader = submit.siblings(".preloader");

                            preloader.removeClass('hidden');
                            submit.attr('disabled', 'disabled');
                        });
                    });
                }
            }
        }
    }
});

$(document).ready(function () {
    /* Help Block On\Off */
    $('.info-block-head').on(App.event.click(),function () {
        if ($(this).next().css('display') == 'none') {
            document.cookie = "help=block; path=/;";
            $(this).next().slideDown('fast');
            $(this).children('i').removeClass('over');
        } else {
            document.cookie = "help=none; path=/;";
            $(this).next().slideUp('fast');
            $(this).children('i').addClass('over');
        }
        return false;
    });
    $('.checkAllREsponses input').on(App.event.click(), function () {
        if ($(this).is(':checked')) {
            $('.objects .object').addClass('active');
            $('.checkTopic input').attr('checked', 'checked');
        } else {
            $('.objects .object').removeClass('active');
            $('.checkTopic input').removeAttr('checked');
        }
    });

    $('.content-tabs-area').on(App.event.click(), '.department-notify', function () {
        var list = $(this).parent().find('.change-notify');
        list.toggleClass('hidden');
        return $(document).on(App.event.click(), function (e) {
            if (!($(e.target).hasClass('department-notify') || list.hasClass('hidden'))) {
                list.addClass('hidden');
                $(this).off(e);
            }
        });
    });
    /*$('.content-tabs li').on(App.event.click(), function (e) {
     var tab_id = $(this).attr('id');
     $('.content-tabs li').removeClass('active');
     $(this).addClass('active');
     $('.content-tabs-area').addClass('hidden');
     $('.content-tabs-area.' + tab_id).removeClass('hidden');
     });*/
});


/** File: application/3.0.2/modules/knowledge-base/assets/desktop/js/admin.js **/

App.module.extend({
    knowledgeBase: {
        controllers: {
            adminArticle: {
                _init : function() {
                    App.onReady(function() {

                    });
                },
                index : function() {
                    App.onReady(function() {
                        var mainArea = $('.mainArea'),
                            tBody = mainArea.find("tbody");
                        tBody.sortable({
                            handle: "a.imove",
                            axis: 'y',
                            update: function (event, ui) {
                                var order = $(this).find('tr').map(function () {
                                    return this.id;
                                }).get();
                                ui.item.find("a.imove").removeClass("imove").addClass('preloader');
                                App.remote.post(window.location.href, {order: order}, function (r) {
                                    var result = App.remote.parseResult(r);
                                    ui.item.find("a.preloader").addClass("imove").removeClass('preloader');
                                    if (result.data.isError()) {
                                        App.notify.error(result.data.getMessage());
                                        return false;
                                    }
                                    App.notify.success(result.data.getMessage());
                                });
                            }
                        });

                        tBody.on('change', ':checkbox', function () {
                            var $this = $(this);
                            var preloader = App.preloader(this),
                                value = this.checked;
                            preloader.start();
                            App.remote.post(window.location.href, {'is_active': {slug: this.value, value: value}}, function (r) {
                                var result = App.remote.parseResult(r);
                                preloader.stop();
                                $this.closest('tr').toggleClass('checked');
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                App.notify.success(result.data.getMessage());
                            });
                        });

                        mainArea.on('change', ':radio', function () {
                            App.remote.post(window.location.href, {name: this.name, value: this.value}, function (r) {
                                var result = App.remote.parseResult(r);
                                if (result.data.isError()) {
                                    App.notify.error(result.data.getMessage());
                                    return false;
                                }
                                App.notify.success(result.data.getMessage());
                            });
                        });
                    });
                }
            }
        }
    }
});

App.onReady(function () {
    if ('admin_external_widgets' == App.routeName || 'admin_knowledgebase_widget' == App.routeName) {
        $("#knowledge-base-widget-submit").on(App.event.click(), function (event) {
            $("#knowledgebase-form-widget").submit();
        });

        $('#widget-knowledge-base-get-code').on(App.event.click(), function (event) {
            var widgetHeight = parseInt($('#knowledge_base_widget_height').val());

            if ('' == widgetHeight || 0 == widgetHeight || isNaN(widgetHeight)) {
                alert(App.t('Height value can\'t be empty!'));
                return;
            }

            var code = '<!-- START USERESPONSE KNOWLEDGE BASE -->'
            code += "\n" + '<style type="text/css">#kb-frame{margin:0;padding:0;height:' + widgetHeight + 'px;display:block;width:100%;border:none;}</style>';
            code += "\n" + '<iframe id="kb-frame" src="' + App.baseUrl('knowledge-base/widget/display') + '"></iframe>';
            code += "\n" + '<!-- END USERESPONSE KNOWLEDGE BASE -->';

            var codeArea = $('div.code-for-knowledge-base-widget');
            $('#knowledge-base_widget_code').val(code);
            codeArea.fadeIn();
        });
    }
});


/** File: application/3.0.2/modules/resources/assets/desktop/js/votes.js **/

App.setVotes = function (votes) {
    for (id in votes) {
        var cl = "iDont";
        if (votes[id]*1 > 0) {
            cl = "iLikeIt";
        }
        var topic = $("#topic-" + id),
            button = topic.find("." + cl);
        if (button.length) {
            button.addClass("disactive");
        } else {
            topic.find(".vote-add-like").addClass("disactive");
        }
    }
}
App.getCookie = function (name) {
    var i,x,y,ARRcookies = document.cookie.split(";");
    for (i=0; i < ARRcookies.length; i++)
    {
      x = ARRcookies[i].substr(0,ARRcookies[i].indexOf("="));
      y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
      x = x.replace(/^\s+|\s+$/g, "");
      if (x == name) {
        return unescape(y);
      }
    }
}

$(function () {
    var topicVotes = {};
    if (App.getParam("isGuest")) {
        var votes = App.getCookie('votes');
        if (votes) {
            votes = eval ("(" + votes + ")");
            topicVotes = votes.response;
        }
    } else {
        topicVotes = App.getParam('user_votes', {});
    }

    App.setVotes(topicVotes);
    
    /* Vote button on topics list */
    $(".mainArea").on(App.event.click(), ".vote > a, a.vote-add-like, a.remove-vote", function(event){
        event.preventDefault();

        if (!App.getParam("canVote")) {
            var params = {'get': {} , 'redirect' : this.href};
            App.openLoginPopup(params);
            return false;
        }

        var voteButton = $(this),
            allVotesBlock = voteButton.closest(".all-votes"),
            isAuthor = parseInt(voteButton.closest('.vote').data('is-author'));
        if((voteButton.hasClass('disactive') && voteButton.siblings('a').length)  || isAuthor){
            return;
        }
        allVotesBlock.append('<i class="preloader" style="display: inline-block"></i>');
        allVotesBlock.find('div').hide();

        /* Make server request */
        App.remote.get(voteButton.attr("href"), {format: 'json'}, function(r) {
            var result     = App.remote.parseResult(r);

            voteButton.parent().siblings(".preloader").remove();
            voteButton.parent().removeAttr("style");

            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
                return false;
            }

            var html = result.data.getOutput();
            allVotesBlock.html(html);

            $(document).trigger('topic.voteAdded', [result.data]);
            App.notify.success(result.data.getMessage());
        });

        return false;
    });
});


/** File: application/3.0.2/modules/sso/assets/desktop/js/main.js **/

App.onReady(function () {

    var popupTabs = $('ul.b-popup-tabs'),
        tab       = null;

    if (App.hasParam('loginMethod')) {
        switch (App.getParam('loginMethod')) {
            case 'sso':
                tab = popupTabs.find('li.ssoTab');
                break;
            case 'ldap':
                tab = popupTabs.find('li.ldapTab');
                break;
            case 'default':
                tab = popupTabs.find('a[rel="form-login"]').closest('li');
                break;
        }
    } else if (App.hasParam('registrationMethod')) {
        tab = popupTabs.find('a[rel="form-registration"]').closest('li');
    } else if (App.hasParam('forgotPasswordMethod')) {
        App.openLoginPopup({
            title: 'Forgot Password',
            forgotPassword: true,
            get: {},
            redirect: document.location.href
        });
    }

    if (null !== tab) {
        setTimeout(function () {
            tab.click();
        }, 70);
    }

    // TODO: refactor deprecated/removed "live" method.
    $("#loginplus-form-ldaplogin").live("submit", function (event) { //debug
        var form = $(this),
            data = App.getFormParams($(this));
        form.find("input[type=submit]").attr("disabled", "disabled").addClass("disabled");
        form.find(".preloader").show();

        App.remote.post($(this).attr("action"), data, function(r) {
            result = App.remote.parseResult(r);
            form.find("input[type=submit]").removeAttr("disabled").removeClass("disabled");
            $(".preloader").hide();
            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
                return false;
            }
            App.notify.success(result.data.getMessage());
            if (form.attr("id") == "loginplus-form-ldaplogin") {
                $(".l-popup-overlay, .l-popup-body").hide();
                formId = result.data.getParam("formId");
                if (formId) {
                    $("#" + formId).unbind("submit").die("submit");
                    $("#" + formId + " input[type=submit], button[type=submit]").die("click").unbind("click").click();
                } else {
                    if (result.data.getParam("url")) {
                        location.href = result.data.getParam("url");
                    } else {
                        location.reload();
                    }
                }
            } else {
                $('.b-popup-tabs li.itTab .filter').removeClass('filter-active');
                $('.b-popup-tabs li.itTab .filter .marker').hide();
                $('.b-popup-tabs li.itTab .filter').eq(0).addClass('filter-active');
                $('.b-popup-tabs li.itTab .filter').eq(0).find('.marker').show();
                $(".auth-form").remove();
                $(".inner2 .popup-powered").before(result.data.getOutput());
                App.notify.success(result.data.getMessage());
            }
        });
        return false;
    });
    
    /* Manual user email confirmation if service doesn't provide email */
    $("body").on("submit", "#loginplus-form-email", function (event) {
        var form = $(this),
            data = App.getFormParams($(this));
        form.find("#submit").attr("disabled", "disabled").addClass("disabled");
        form.find(".preloader").show();

        App.remote.post($(this).attr("action"), data, function (r) {
            var result = App.remote.parseResult(r);
            form.find("#submit").removeAttr("disabled").removeClass("disabled");
            $(".preloader").hide();

            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
                return false;
            }

            $('.b-popup-tabs li.itTab').removeClass('selected');
            $('.b-popup-tabs li.itTab').eq(0).addClass('selected');
            $(".auth-form").remove();
            $(".inner2 .popup-powered").before(result.data.getOutput());
            App.notify.success(result.data.getMessage());

        });

        return false;
    });

    // @ROUTE: "response_add"
    if (App.route().is(['topic_add', 'topic_show']) && !App.isMobileTheme()) {
        /*
         If "anonymous_responses" is on, "sso_active_method" is "integration"
         and "sso_native_auth_disabled" is switched off - proceed user to make a choice
         to post response anonymously or go to external login.
         */
        if (App.getParam('confirmAddTopic')) {
            var wrapClass = '.wrap-container';
            if(App.route().is('topic_show')){
                wrapClass = '.mainArea';
            }
            var confirm = $('<div class="textCenter"></div>').appendTo(wrapClass),
                message = $('<p class="result-not-found"></p>')
                    .html(App.t('To proceed, please choose required action!'))
                    .appendTo(confirm),
                butLogin = $('<a class="button-medium-color" href="#login"></a>')
                    .css('margin-right', '10px')
                    .html(App.t('Login')).appendTo(confirm),
                butAnon  = $('<a class="button-medium-color" href="#anonymously"></a>')
                    .html(App.t('Anonymously')).appendTo(confirm);

            /* Login button "click" event */
            butLogin.on(App.event.click(), function (event) {
                location.href = App.getParam('ssoLoginUrl');
                event.preventDefault();
            });

            /* Specify form block according current route */
            var form = App.route().is('topic_add') ? $('#object-add') : $('div.leave-comment');

            /*
            Add "Leave Comment" button on proceed block and replace form on Response
            add page if Lock comments is not activated.
            */
            if (App.route().is('topic_show') && 0 < form.size()) {
                form.remove();
                butAnon.remove();
            }

            /* Anonymously button "click" event */
            if (App.route().is('topic_add')) {
                butAnon.on(App.event.click(), function (event) {
                    confirm.hide();
                    form.removeClass('hidden');
                    var guestLink = $('#submit_guest_link');
                    if ($('div.anonymous-block').is(':hidden')) {
                        guestLink.trigger('click');
                        $('#category_id').customSelect();
                        App.module.feedback.controllers.topic.add();

                        /* Prevent scrolling to anonymous email input */
                        $('html, body').stop();
                    }
                    /* Show proceed block again if user cancel anonymous response adding. */
                    guestLink.one(App.event.click(), function (event) {
                        form.addClass('hidden');
                        confirm.show();
                    });
                    event.preventDefault();
                });
            }

            /* Remove form and anonymous button if "anonymous_responses" is switched off. */
            if (!App.getParam('anonymouslyPosting')) {
                butAnon.remove();
                form.remove();
            }

            /* Don't display proceed block if form is visible (e.x: if form is submitted and has errors). */
            if (App.route().is('topic_add') && !form.hasClass('hidden')) {
                confirm.hide();
                butAnon.triggerHandler(App.event.click());
            }
        }
    }
});


/** File: application/3.0.2/modules/polls/assets/desktop/js/main.js **/

App.onReady(function () {

    var container = $('#poll_container');

    if (App.getParam('canVotePoll') == 0) {
        container.on(App.event.click(), '#vote_poll_submit', function () {
            App.openLoginPopup({'form_id': 'vote_polling'});
            return false;
        });
    }

    var openAddPopup = function (url) {
        App.dynamic.modal.openFromUrl({
            modal: {
                title: App.t("New Poll"),
                width: '600',
                shader: false,
                useCustomScroller: true,
                useWrapper: false
            },
            request: {
                url: url
            },
            complete: function (modal) {
                var modalBody = modal.getContent(true);

                modalBody.find('tbody').sortable({
                    handle: ".imove",
                    axis:   'y'
                });

                $('#expire_select').on('change', function () {
                    var expiresAt = $('#poll-expires-at-block');
                    if ($(this).val() == 'on_date') {
                        expiresAt.removeClass('hidden');
                    } else {
                        expiresAt.addClass('hidden');
                    }
                });

                modalBody.on(App.event.click(), 'input[name="display_in_topic"]', function () {
                    if ($(this).val() == 1) {
                        modalBody.find('.topic-selector').removeClass('hidden');
                    } else {
                        modalBody.find('.topic-selector').addClass('hidden');
                    }
                });

                var optionsWrapper = $('.options-wrapper');
                modalBody.on(App.event.click(), '.add-option', function () {
                    optionsWrapper.find('tr.option:last').after(
                        '<tr class="option">' + optionsWrapper.find('tr:first').html() + '</tr>'
                    );
                    return false;
                });
                optionsWrapper.on(App.event.click(), '.idelete', function () {
                    if (optionsWrapper.find('tr.option').length > 2) {
                        $(this).parents('tr:first').remove();
                    } else {
                        $(this).parents('tr:first').find('input').val('');
                    }
                    return false;
                });

                /* Form submit */
                modalBody.on("submit", 'form', function (e) {
                    e.preventDefault();
                    var form = $(this);

                    var required = form.find("input.required");

                    if (required.length && required.val().trim() == "") {
                        required.parent().addClass("error");
                        App.notify.error(App.t("Please fill in required fields"));
                        return false;
                    }

                    form.find('input[type=submit]').attr('disabled', 'disabled');
                    form.find('.preloader').css('margin-right', '10px').show();

                    App.remote.post(form.attr("action"), form.serialize(), function (r) {
                        var result = App.remote.parseResult(r);
                        if (result.data.isError()) {
                            App.notify.error(result.data.getMessage());
                            form.find('input[type=submit]').removeAttr('disabled');
                            form.find('.preloader').hide();
                            return false;
                        }
                        App.notify.success(result.data.getMessage());
                        App.dynamic.modal.close(modal.modal);
                        if ($('.polls-manage-element').length > 0) {
                            $('.filter-area').find('select:first').trigger('change');
                        }
                    });

                });
            }
        });
    };

    $("#poll_add_quick a, .poll_add").on(App.event.click(), function () {
        openAddPopup($(this).attr('href'));
        return false;
    });

    /* Ajax vote */
    container.on("submit", 'form', function (e) {
        e.preventDefault();
        var form = $(this);

        if (form.find('.variants input:checked').length == 0) {
            App.notify.error(App.t("Please select at least 1 option!"));
            return false;
        }

        form.find('input[type=submit]').attr('disabled', 'disabled');
        container.find('.poll_header .preloader').addClass('ico-small');

        App.remote.post(form.attr("action"), form.serialize(), function (r) {
            var result = App.remote.parseResult(r);
            container.find('.poll_header .preloader').removeClass('ico-small');
            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
            } else {
                container.find('.poll-results').html(result.data.getOutput());
                App.notify.success(result.data.getMessage());
                container.find('.preview-results').parents('.objects-filter.buttons').remove();
            }

            if (!App.auth().userIsLoggedIn() && App.getParam('canVotePoll') == 0) {
                location.reload(true);
            }
        });
    });

    container.on(App.event.click(), '.preview-results', function () {
        var button = $(this);
        if (button.hasClass('loading')) {
            return false;
        }
        button.addClass('loading');
        container.find('.poll_header .preloader').css('display', 'block');

        App.remote.get(button.attr('href'), null, function (r) {
            container.find('.poll_header .preloader').css('display', 'none');
            var result = App.remote.parseResult(r);
            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
                return false;
            }
            button.addClass('preview-results-back')
                .removeClass('loading')
                .removeClass('preview-results')
                .data('back-data', container.find('.poll-results').html())
                .text(App.t('Back'));
            container.find('.poll-results').html(result.data.getOutput());
        });

        return false;
    });

    container.on(App.event.click(), '.preview-results-back', function () {
        var button = $(this);
        container.find('.poll-results').html(button.data('back-data'));
        button.addClass('preview-results')
            .removeClass('preview-results-back')
            .data('back-data', null)
            .text(App.t('View Results'));
        return false;
    });


    container.on(App.event.click(), '.slider-arrow', function () {
        var button = $(this);
        if (button.hasClass('loading')) {
            return false;
        }
        button.addClass('loading');
        container.find('.poll_header .preloader').addClass('ico-small');

        App.remote.get(button.attr('href'), null, function (r) {
            var result = App.remote.parseResult(r);
            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
                return false;
            }
            container.html(result.data.getOutput());
        });

        return false;
    });

});

/** File: application/3.0.2/assets/desktop/js/global.js **/

window.App || (window.App = {});

if (typeof Widgets === "undefined") var Widgets = {};

if (typeof String.prototype.trim !== 'function') {
    String.prototype.trim = function () {
        return this.replace(/^\s+|\s+$/g, '');
    }
}

/**
 * Center block plugin
 *
 * @param options
 * @return {*}
 */
$.fn.centerInClient = function (options) {
    var opt = { forceAbsolute: false,
        container: window,
        completeHandler: null
    };
    $.extend(opt, options);

    return this.each(function (i) {
        var el = $(this);
        var jWin = $(opt.container);
        var isWin = opt.container == window;

        // force to the top of document to ENSURE that
        // document absolute positioning is available
        if (opt.forceAbsolute) {
            if (isWin)
                el.remove().appendTo("body");
            else
                el.remove().appendTo(jWin.get(0));
        }

        // have to make absolute
        el.css("position", "absolute");

        // height is off a bit so fudge it
        var heightFudge = isWin ? 2.0 : 1.8;

        var x = (isWin ? jWin.width() : jWin.outerWidth()) / 2 - el.outerWidth() / 2;
        var y = (isWin ? jWin.height() : jWin.outerHeight()) / heightFudge - el.outerHeight() / 2;

        el.css("left", x + jWin.scrollLeft());
        el.css("top", y + jWin.scrollTop());

        // if specified make callback and pass element
        if (opt.completeHandler)
            opt.completeHandler(this);
    });
};

App.switchGrayscale = function (element) {
    element = $(element);
    var _css = {
        filter: 'url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale")'
    };

    if ('none' == element.css('filter')) {
        element.css(_css);
    } else {
        element.css('filter', 'none');
    }
};

App.switchUnactive = function (element, action) {
    element = $(element);

    var _css = {
            backgroundColor: '#FFFFFF',
            bottom: 0,
            height: '100%',
            left: 0,
            margin: 0,
            padding: 0,
            position: 'absolute',
            right: 0,
            top: 0,
            width: '100%'
        },
        overflow = $('<div x-element="overflow"></div>').css(_css),
        existing = element.find('div[x-element="overflow"]'),
        has = function () {
            return existing.is('div');
        },
        show = function () {
            if (!has()) {
                element.append(overflow.fadeTo("fast", 0.6));
                App.switchGrayscale(element);
            }
        },
        hide = function () {
            if (has()) {
                existing.remove();
                App.switchGrayscale(element);
            }
        };

    if (action) {
        if ('show' === action) {
            show();
        } else if ('hide' === action) {
            hide();
        }
    } else {
        has() ? hide() : show();
    }
};

App.preloader = function (element, options) {
    element = $(element);
    if (!$.isPlainObject(options)) {
        options = {};
    }
    var defaults = {
            replace: true,
            loader_element: $('<i class="preloader">&nbsp;</i>'),
            loader_css: {
                display: 'inline-block',
                lineHeight: 'inherit',
                verticalAlign: 'bottom',
                margin: 0,
                padding: 0
            }
        },
        settings = $.extend(defaults, options);

    element.data('preloader', settings);

    return {
        _target: element,
        _loader: null,
        start: function () {
            this._loader = $(this._target.data('preloader').loader_element);
            this._target.after(this._loader);
            this._loader.css(this._target.data('preloader').loader_css);
            if (this._target.data('preloader').replace) {
                this._target.hide();
                this._loader.css('marginTop', this._target.css('marginTop'));
                this._loader.css('marginBottom', this._target.css('marginBottom'));
                this._loader.css('marginLeft', this._target.css('marginLeft'));
                this._loader.css('marginRight', this._target.css('marginRight'));
                if (this._target.width() < 16) {
                    this._loader.css('width', '16px');
                } else {
                    this._loader.css('width', this._target.width());
                }
            }
        },
        stop: function () {
            $('body').css('cursor', 'auto');
            try {
                if (this._target.next().is(this._loader)) {
                    this._loader.remove();
                    if (this._target.is(':hidden')) {
                        this._target.show();
                    }
                }
            } catch (e) {
            }
        }
    };
};

App.widgetCmd = function (cmd, params, callback) {
    if ('function' !== typeof callback) {
        callback = function (response) {
        };
    }

    App.remote.post({
        url: App.baseUrl('/admin/widget/cmd'),
        data: $.extend(params, {'cmd': cmd}),
        success: function (response) {
            callback(response);
        },
        error: function (response) {
            callback(response);
        }
    });
};

App.sysCmd = function (cmd, params, callback) {
    if ('function' !== typeof callback) {
        callback = function (response) {
        };
    }

    App.remote.post({
        url: App.baseUrl('/syscmd'),
        data: $.extend(params, {'cmd': cmd}),
        success: function (response) {
            callback(response);
        },
        error: function (response) {
            callback(response);
        }
    });
};

App.notify = {
    error: function (message) {
        App.notify.show('error', message)
    },

    success: function (message) {
        App.notify.show('success', message)
    },

    info: function (message) {
        App.notify.show('info', message)
    },

    show: function (type, message) {
        switch (type) {
            case 'error':
                _subClass = 'success-notification error-notification';
                break;
            case 'success':
                _subClass = 'success-notification';
                break;
            case 'info':
                _subClass = 'success-notification';
                break;
        }
        $(".success-notification").hide();
        newDate = new Date;
        id = 'message_' + newDate.getTime();
        html = '<div id="' + id + '" class="' + _subClass + '"><div class="inner">' + message + '</div></div>';
        $('body').append(html);
        setTimeout(function () {
            $("#" + id).fadeOut()
        }, 3000);
    }
};

App.getFormParams = function (form) {
    data = {};
    i = 0;
    form.find("input, textarea, select").each(function () {
        name = $(this).attr("name");
        if (name != undefined) {
            if (($(this).attr("type") != "checkbox"
                && $(this).attr("type") != "radio")
                || ($(this).attr("type") == "radio"
                && $(this).is(":checked"))
                || ($(this).attr("type") == "checkbox"
                && $(this).is(":checked"))) {

                if (name.match(/\[\]$/)) {
                    name = name.match(/.*[^\[\]]/);
                    if (!data[name]) {
                        data[name] = {};
                    }
                    data[name][i] = $(this).val();
                    i++;
                } else {
                    data[name] = $(this).val();
                }
            }
        }
    });
    return data;
}

App.get_gravatar = function (email, size) {
    // MD5 (Message-Digest Algorithm) by WebToolkit
    // http://www.webtoolkit.info/javascript-md5.html
    var MD5 = function (s) {
        function L(k, d) {
            return(k << d) | (k >>> (32 - d))
        }

        function K(G, k) {
            var I, d, F, H, x;
            F = (G & 2147483648);
            H = (k & 2147483648);
            I = (G & 1073741824);
            d = (k & 1073741824);
            x = (G & 1073741823) + (k & 1073741823);
            if (I & d) {
                return(x ^ 2147483648 ^ F ^ H)
            }
            if (I | d) {
                if (x & 1073741824) {
                    return(x ^ 3221225472 ^ F ^ H)
                } else {
                    return(x ^ 1073741824 ^ F ^ H)
                }
            } else {
                return(x ^ F ^ H)
            }
        }

        function r(d, F, k) {
            return(d & F) | ((~d) & k)
        }

        function q(d, F, k) {
            return(d & k) | (F & (~k))
        }

        function p(d, F, k) {
            return(d ^ F ^ k)
        }

        function n(d, F, k) {
            return(F ^ (d | (~k)))
        }

        function u(G, F, aa, Z, k, H, I) {
            G = K(G, K(K(r(F, aa, Z), k), I));
            return K(L(G, H), F)
        }

        function f(G, F, aa, Z, k, H, I) {
            G = K(G, K(K(q(F, aa, Z), k), I));
            return K(L(G, H), F)
        }

        function D(G, F, aa, Z, k, H, I) {
            G = K(G, K(K(p(F, aa, Z), k), I));
            return K(L(G, H), F)
        }

        function t(G, F, aa, Z, k, H, I) {
            G = K(G, K(K(n(F, aa, Z), k), I));
            return K(L(G, H), F)
        }

        function e(G) {
            var Z;
            var F = G.length;
            var x = F + 8;
            var k = (x - (x % 64)) / 64;
            var I = (k + 1) * 16;
            var aa = Array(I - 1);
            var d = 0;
            var H = 0;
            while (H < F) {
                Z = (H - (H % 4)) / 4;
                d = (H % 4) * 8;
                aa[Z] = (aa[Z] | (G.charCodeAt(H) << d));
                H++
            }
            Z = (H - (H % 4)) / 4;
            d = (H % 4) * 8;
            aa[Z] = aa[Z] | (128 << d);
            aa[I - 2] = F << 3;
            aa[I - 1] = F >>> 29;
            return aa
        }

        function B(x) {
            var k = "", F = "", G, d;
            for (d = 0; d <= 3; d++) {
                G = (x >>> (d * 8)) & 255;
                F = "0" + G.toString(16);
                k = k + F.substr(F.length - 2, 2)
            }
            return k
        }

        function J(k) {
            k = k.replace(/\r\n/g, "\n");
            var d = "";
            for (var F = 0; F < k.length; F++) {
                var x = k.charCodeAt(F);
                if (x < 128) {
                    d += String.fromCharCode(x)
                } else {
                    if ((x > 127) && (x < 2048)) {
                        d += String.fromCharCode((x >> 6) | 192);
                        d += String.fromCharCode((x & 63) | 128)
                    } else {
                        d += String.fromCharCode((x >> 12) | 224);
                        d += String.fromCharCode(((x >> 6) & 63) | 128);
                        d += String.fromCharCode((x & 63) | 128)
                    }
                }
            }
            return d
        }

        var C = Array();
        var P, h, E, v, g, Y, X, W, V;
        var S = 7, Q = 12, N = 17, M = 22;
        var A = 5, z = 9, y = 14, w = 20;
        var o = 4, m = 11, l = 16, j = 23;
        var U = 6, T = 10, R = 15, O = 21;
        s = J(s);
        C = e(s);
        Y = 1732584193;
        X = 4023233417;
        W = 2562383102;
        V = 271733878;
        for (P = 0; P < C.length; P += 16) {
            h = Y;
            E = X;
            v = W;
            g = V;
            Y = u(Y, X, W, V, C[P + 0], S, 3614090360);
            V = u(V, Y, X, W, C[P + 1], Q, 3905402710);
            W = u(W, V, Y, X, C[P + 2], N, 606105819);
            X = u(X, W, V, Y, C[P + 3], M, 3250441966);
            Y = u(Y, X, W, V, C[P + 4], S, 4118548399);
            V = u(V, Y, X, W, C[P + 5], Q, 1200080426);
            W = u(W, V, Y, X, C[P + 6], N, 2821735955);
            X = u(X, W, V, Y, C[P + 7], M, 4249261313);
            Y = u(Y, X, W, V, C[P + 8], S, 1770035416);
            V = u(V, Y, X, W, C[P + 9], Q, 2336552879);
            W = u(W, V, Y, X, C[P + 10], N, 4294925233);
            X = u(X, W, V, Y, C[P + 11], M, 2304563134);
            Y = u(Y, X, W, V, C[P + 12], S, 1804603682);
            V = u(V, Y, X, W, C[P + 13], Q, 4254626195);
            W = u(W, V, Y, X, C[P + 14], N, 2792965006);
            X = u(X, W, V, Y, C[P + 15], M, 1236535329);
            Y = f(Y, X, W, V, C[P + 1], A, 4129170786);
            V = f(V, Y, X, W, C[P + 6], z, 3225465664);
            W = f(W, V, Y, X, C[P + 11], y, 643717713);
            X = f(X, W, V, Y, C[P + 0], w, 3921069994);
            Y = f(Y, X, W, V, C[P + 5], A, 3593408605);
            V = f(V, Y, X, W, C[P + 10], z, 38016083);
            W = f(W, V, Y, X, C[P + 15], y, 3634488961);
            X = f(X, W, V, Y, C[P + 4], w, 3889429448);
            Y = f(Y, X, W, V, C[P + 9], A, 568446438);
            V = f(V, Y, X, W, C[P + 14], z, 3275163606);
            W = f(W, V, Y, X, C[P + 3], y, 4107603335);
            X = f(X, W, V, Y, C[P + 8], w, 1163531501);
            Y = f(Y, X, W, V, C[P + 13], A, 2850285829);
            V = f(V, Y, X, W, C[P + 2], z, 4243563512);
            W = f(W, V, Y, X, C[P + 7], y, 1735328473);
            X = f(X, W, V, Y, C[P + 12], w, 2368359562);
            Y = D(Y, X, W, V, C[P + 5], o, 4294588738);
            V = D(V, Y, X, W, C[P + 8], m, 2272392833);
            W = D(W, V, Y, X, C[P + 11], l, 1839030562);
            X = D(X, W, V, Y, C[P + 14], j, 4259657740);
            Y = D(Y, X, W, V, C[P + 1], o, 2763975236);
            V = D(V, Y, X, W, C[P + 4], m, 1272893353);
            W = D(W, V, Y, X, C[P + 7], l, 4139469664);
            X = D(X, W, V, Y, C[P + 10], j, 3200236656);
            Y = D(Y, X, W, V, C[P + 13], o, 681279174);
            V = D(V, Y, X, W, C[P + 0], m, 3936430074);
            W = D(W, V, Y, X, C[P + 3], l, 3572445317);
            X = D(X, W, V, Y, C[P + 6], j, 76029189);
            Y = D(Y, X, W, V, C[P + 9], o, 3654602809);
            V = D(V, Y, X, W, C[P + 12], m, 3873151461);
            W = D(W, V, Y, X, C[P + 15], l, 530742520);
            X = D(X, W, V, Y, C[P + 2], j, 3299628645);
            Y = t(Y, X, W, V, C[P + 0], U, 4096336452);
            V = t(V, Y, X, W, C[P + 7], T, 1126891415);
            W = t(W, V, Y, X, C[P + 14], R, 2878612391);
            X = t(X, W, V, Y, C[P + 5], O, 4237533241);
            Y = t(Y, X, W, V, C[P + 12], U, 1700485571);
            V = t(V, Y, X, W, C[P + 3], T, 2399980690);
            W = t(W, V, Y, X, C[P + 10], R, 4293915773);
            X = t(X, W, V, Y, C[P + 1], O, 2240044497);
            Y = t(Y, X, W, V, C[P + 8], U, 1873313359);
            V = t(V, Y, X, W, C[P + 15], T, 4264355552);
            W = t(W, V, Y, X, C[P + 6], R, 2734768916);
            X = t(X, W, V, Y, C[P + 13], O, 1309151649);
            Y = t(Y, X, W, V, C[P + 4], U, 4149444226);
            V = t(V, Y, X, W, C[P + 11], T, 3174756917);
            W = t(W, V, Y, X, C[P + 2], R, 718787259);
            X = t(X, W, V, Y, C[P + 9], O, 3951481745);
            Y = K(Y, h);
            X = K(X, E);
            W = K(W, v);
            V = K(V, g)
        }
        var i = B(Y) + B(X) + B(W) + B(V);
        return i.toLowerCase()
    };
    var size = size || 50;
    return 'http://www.gravatar.com/avatar/' + MD5(email) + '.jpg?s=' + size;
}

/* Secure requests */
App.initSecurity = function () {
    App.remote.post(App.baseUrl('/security'), {}, function (response) {
        var result = App.remote.parseResult(response);
    });
};

/* Login/Registration popup */
App.authModal = null;

/**
 * Login popup.
 *
 * @param object params
 */
App.openLoginPopup = function (params) {

    if (!params) params = {};
    /* if 'OneLogin' method is enabled and only it can use for login */
    if (App.getParam('hrefRedirectLogin')) {
        window.location.href = App.getParam('hrefRedirectLogin');
        return;
    }
    var defaults = {
            title: 'Login Form',
            activeTab: 'form-login',
            redirect: null,
            url: null,
            ajaxPostHref: null
        },
        settings = $.extend({}, defaults, params),
        filterParams = function () {
            var filtered = {};
            for (key in settings) {
                if (!(key in defaults)) {
                    filtered[key] = settings[key];
                }
            }
            return filtered;
        };

    if (App.auth().userIsLoggedIn()) {
        App.notify.error(App.t('You are already logged in!'));
    }

    App.authModal = App.dynamic.modal.openFromUrl({
        modal: {
            title: App.t(settings.title),
            width: '500',
            shader: false,
            useCustomScroller: true,
            useWrapper: false
        },

        request: {
            url: App.baseUrl('/loginform')
        },

        complete: function (modal) {
            var modalBody = modal.getContent(true),
                tabs = modalBody.find('.modal-tabs li'),
                forms = modalBody.find('.auth-form form');

            forms.each(function () {
                $(this).find(".hidden-params").remove();
                for (key in filterParams()) {
                    $(this).append("<input class='hidden-params' type='hidden' name='" + key + "' value='" + settings[key] + "' />");
                }
            });

            modalBody.find('a').each(function () {
                var href = location.protocol + '//' + location.hostname + this.pathname;
                if (!$(this).attr('href').match('sso_redirect')) {
                    var urlQuery = $.param(filterParams());
                    if ('' != urlQuery) {
                        urlQuery = '?' + urlQuery;
                    }
                    $(this).attr("href", href + urlQuery);
                }
            });

            /* Tabs onClick */
            /** @event click */
            tabs.on(App.event.click(), function (e) {
                /* if 'OneLogin' method is enabled */
                if (e.target.nodeName === 'A' && !e.target.parentNode.getAttribute("rel").length) {
                    return true;
                }
                e.preventDefault();
                var rel_tab = $(this).attr('rel');
                tabs.removeClass('active');

                modalBody.find('div.auth-form > div:visible').hide();
                $('#' + rel_tab).show();

                $(this).addClass('active');
                //App.authModal.setTitle($(this).attr('title') + ' ' + App.t('Form'));
            });

            /* Forgot password onClick */
            /** @event click */
            modalBody.find('a.forgotPass').on(App.event.click(), function (e) {
                e.preventDefault();
                tabs.removeClass('active');

                modalBody.find('div.auth-form > div:visible').hide();
                $('#form-forgotpassword').show();

                App.authModal.setTitle(App.t('Forgot Password'));
            });

            /* Social login */
            (function () {
                $('.tooltip').powerTip({ placement: 'n', smartPlacement: true });
                var getHref = function (element) {
                    var url = $(element).attr('href');
                    if (!$.browser.msie) {
                        return url;
                    }
                    if (7 <= parseInt($.browser.version, 10)) {
                        return url.replace('login-oauth', '/login-oauth');
                    }
                    return url.replace('login-oauth', '/login-oauth');
                };

                var getCoords = function (width, height) {
                    return {
                        'left'   : Math.round(window.screen.width / 2 - width / 2),
                        'top'    : Math.round(window.screen.height / 2 - height / 2),
                        'width'  : width,
                        'height' : height
                    };
                };

                /* Login using Twitter */
                var twitterButton = $("#twitter-button");
                if (twitterButton.length > 0) {
                    /** @event click */
                    var coords = getCoords(560, 700);
                    twitterButton.on(App.event.click(), function () {
                        window.open(getHref(this), 'social_login', 'width='+coords.width+',height='+coords.height+',left='+coords.left+',top='+coords.top);
                        return false;
                    });
                }

                /* Login using Facebook */
                /** @event click */
                $("#facebook-button, #google-button").on(App.event.click(), function (event) {
                    var coords = getCoords(900, 540);
                    window.open(getHref(this), 'social_login', 'width='+coords.width+',height='+coords.height+',left='+coords.left+',top='+coords.top);
                    return false;
                });
            })();

            /* Choose active tab */
            /** @trigger click */
            tabs.filter('[rel=' + settings.activeTab + ']').trigger('click');

            if (settings.forgotPassword != undefined) {
                modalBody.find('.forgotPass:first').trigger(App.event.click());
            }

            /* Make security request */
            App.initSecurity();

            /* Forms submission */
            /** @event submit */
            $("#system-form-registration, #system-form-login,  #system-form-passwordforgot, #sso-form-ldaplogin").on('submit', function (e) {
                e.preventDefault();
                var form = $(this),
                    submitButton = form.find("input[type=submit]");

                var emptyError = false;
                var emailError = false;
                form.find("input.required").removeClass('error').each(function () {
                    var validOne = $(this).val().trim() != '';

                    if (validOne) {
                        if ($(this).attr('name') == 'email') {
                            var pattern = /^[\w.\-_]+@[\w.\-_]+$/;
                            if (!pattern.test($(this).val().trim())) {
                                emailError = true;
                                validOne = false;
                            }
                        }
                    } else {
                        emptyError = true;
                    }

                    if (!validOne) {
                        $(this).addClass('error');
                    }
                });

                if (emptyError || emailError) {
                    var message = '';
                    if (emptyError) {
                        message = App.t("Please fill in required fields");
                    }
                    if (emptyError && emailError) {
                        message += '<br />';
                    }
                    if (emailError) {
                        message += App.t("Email is incorrect!");
                    }
                    App.notify.error(message);
                    return false;
                }

                if ("system-form-registration" === form.attr("id")) {
                    var regAssign = form.find('#assign'),
                        dataToHash = form.find('#full_name').val() + form.find('#registration-email').val();
                    regAssign.val(App.utils.md5(dataToHash).split('').reverse().join(''));
                }

                submitButton.toggleDisable();
                var preloader = form.find(".preloader");
                preloader.show();
                var data = App.getFormParams(form);
                data['resolution'] = window.screen.availWidth + 'x' + window.screen.availHeight;
                App.remote.post(form.attr("action"), data, function (r) {
                    submitButton.toggleDisable();
                    preloader.hide();
                    var result = App.remote.parseResult(r);

                    if (result.data.isError()) {
                        form.find("#csrf").val(result.data.getParam("csrfhash"));
                        App.notify.error(result.data.getMessage());
                        return false;
                    }

                    var afterSuccess = function () {
                        if (form.attr("id") == "system-form-login" || form.attr("id") == "sso-form-ldaplogin") {
                            $(".l-popup-body, .l-popup-overlay").hide();
                            var formId = result.data.getParam("formId");
                            if (formId) {
                                App.addParam('login.submit', 1);
                                $("#" + formId).submit();
                            } else {
                                if (result.data.getParam("url") || settings.redirect) {
                                    location.href = settings.redirect ? settings.redirect : result.data.getParam("url");
                                } else {
                                    location.reload();
                                }
                            }
                        } else {
                            /** @trigger click */
                            tabs.filter('[rel=form-login]').trigger('click');
                            $("#login-email").val(result.data.getParam('email'));
                            $("#password").val("");
                            App.notify.success(result.data.getMessage());
                        }
                    }

                    if (settings.ajaxPostHref) {
                        App.remote.post(settings.ajaxPostHref, null, function (r) {
                            var result = App.remote.parseResult(r);
                            if (result.data.isError()) {
                                App.notify.error(result.data.getMessage());
                                return false;
                            }
                            afterSuccess();
                        });
                    } else {
                        afterSuccess();
                    }
                });
            });
        }
    });
};

App.baseUrl = function (path) {
    var url = App.config.basePath;
    url = url.trim().replace(/\/$/, "").trim();
    if (path != void 0) {
        path = path.trim().replace(/^\//, "").trim();
    } else {
        path = '';
    }
    return  url + "/" + path;
}

App.initMemberTopBar = function () {
    /* Make Top Bar always visible and on top */
    $('body').css({
        marginTop: '40px'
    });
};

App.initGuestTopBar = function () {
    (function ($) {
        $.fn.MovetoTop = function (options) {

            var defaults = {
                    //min: 200,
                    containerID: 'top-bar',
                    scrollSpeed: 200,
                    easingType: 'linear'
                },
                settings = $.extend(defaults, options),
                containerIDhash = '#' + settings.containerID;

            //$(containerIDhash).on('click.UItoTop',function(){
            $(".toTop").click(function () {
                $('html, body').animate({scrollTop: 0}, settings.scrollSpeed, settings.easingType);
                return false;
            });

            $(window).scroll(function () {
                var topPos = $('.all').position(),
                    sd = $(window).scrollTop();


                if (sd > topPos.top) {
                    $(containerIDhash).show();
                    //$(containerIDhash).slideDown(settings.inDelay);
                } else {
                    $(containerIDhash).hide();
                }//$(containerIDhash).slideUp(settings.inDelay);
            });
        };
    })(jQuery);

    /* Execute self */
    $(document).ready(function () {
        $().MovetoTop();
    });
};

App.translite = function (text) {
    var L = {
            'А': 'A', 'а': 'a', 'Б': 'B', 'б': 'b', 'В': 'V', 'в': 'v', 'Г': 'G', 'г': 'g',
            'Д': 'D', 'д': 'd', 'Е': 'E', 'е': 'e', 'Ё': 'Yo', 'ё': 'yo', 'Ж': 'Zh', 'ж': 'zh',
            'З': 'Z', 'з': 'z', 'И': 'I', 'и': 'i', 'Й': 'Y', 'й': 'y', 'К': 'K', 'к': 'k',
            'Л': 'L', 'л': 'l', 'М': 'M', 'м': 'm', 'Н': 'N', 'н': 'n', 'О': 'O', 'о': 'o',
            'П': 'P', 'п': 'p', 'Р': 'R', 'р': 'r', 'С': 'S', 'с': 's', 'Т': 'T', 'т': 't',
            'У': 'U', 'у': 'u', 'Ф': 'F', 'ф': 'f', 'Х': 'Kh', 'х': 'kh', 'Ц': 'Ts', 'ц': 'ts',
            'Ч': 'Ch', 'ч': 'ch', 'Ш': 'Sh', 'ш': 'sh', 'Щ': 'Sch', 'щ': 'sch', 'Ъ': '"', 'ъ': '"',
            'Ы': 'Y', 'ы': 'y', 'Ь': "'", 'ь': "'", 'Э': 'E', 'э': 'e', 'Ю': 'Yu', 'ю': 'yu',
            'Я': 'Ya', 'я': 'ya'
        },
        r = '',
        k;
    for (k in L) r += k;
    r = new RegExp('[' + r + ']', 'g');
    k = function (a) {
        return a in L ? L[a] : '';
    };
    text = text.replace(r, k);
    return text;
};

App.slugify = function (str, spaceDivider) {
    str = App.translite(str);
    str = str.replace(/^\s+|\s+$/g, ''); // trim
    str = str.toLowerCase();

    // remove accents, swap ? for n, etc
    var from = "?????????????????????????·/_,:;";
    var to = "aaaaaeeeeeiiiiooooouuuunc------";
    for (var i = 0, l = from.length; i < l; i++) {
        str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));
    }

    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars
        .replace(/\s+/g, '-') // collapse whitespace and replace by -
        .replace(/-+/g, '-'); // collapse dashes

    if (spaceDivider) {
        str = str.replace(/-/gi, spaceDivider);
    }

    return str;
};

App.scrollMassEdit = function (sidebarArea, topPos, div_class) {
    $(window).scroll(function () {
        var top = $(document).scrollTop(),
            pip = $('.footer').offset().top - 90,
            height = $('.' + div_class).outerHeight(),
            window_height = $(window).innerHeight();

        if (div_class == 'ctrl-help') {
            var width_ctrl = sidebarArea.width();
            $('.' + div_class).width(width_ctrl);
        }

        if (window_height > height + 50 && $('.mainArea').outerHeight() > sidebarArea.outerHeight()) {
            if (top > topPos && top < (pip - height)) {
                $('.' + div_class).addClass('fixed').removeClass("absolute");
            }
            else if (top >= (pip - height)) {
                $('.' + div_class).removeClass('fixed').addClass('absolute');
            }
            else {
                $('.' + div_class).removeClass('fixed').removeClass('absolute');
            }
        }
    });
};

App.manageResponsible = function (template, successCallback) {
    $('.wrap-container').on(App.event.click(), '.object_manage_responsible', function (e) {
        e.preventDefault();

        var href = $(this).attr('href');

        App.dynamic.modal.openFromUrl({
            modal: {
                title: App.t('Manage Responsible'),
                width: '500',
                shader: false,
                useCustomScroller: true,
                useWrapper: false
            },

            request: {
                url: href
            },

            complete: function (modal) {
                var content = modal.getContent(true),
                    submit = $('#submit_responsible'),
                    preloader = content.find('.preloader'),
                    options = content.find('input[type="radio"]'),
                    responsibleId = options.filter(':checked').val();

                options.on('change', function (event) {
                    responsibleId = $(this).val();
                });

                submit.on(App.event.click(), function (event) {
                    $(this).attr('disabled', 'disabled');
                    preloader.show();

                    App.remote.post({
                        url: href + '/edit',
                        data: {responsible: responsibleId, template: template},
                        success: function (response) {
                            App.notify.success(response.data.getMessage());
                            successCallback(response);
                            modal.close();
                        },
                        complete: function (response) {
                            preloader.hide();
                        },
                        error: function (response) {
                            App.notify.error(response.data.getMessage());
                        }
                    });
                });
            }
        });
    });
}

$(document).ready(function () {

    /* Member Options */
    function ShowHidePassword(id) {
        var element = document.getElementById(id);
        if (element.type == 'password') {
            element.type = 'text';
        }
        else {
            element.type = 'password';
        }
    }

    $("a.user-setting, #user_avatar").openFromUrl(function (modal) {
        var modalBody = modal.getContent(true),
            form = modalBody.find('form');

        var checkVisibility = function (radio) {
            var _r = (!arguments.length) ? modalBody.find(':radio') : radio;
            _r.each(function () {
                if ($(this).attr('checked') === 'checked') {
                    var label = $(this).closest('label');
                    label.siblings("div").addClass("hidden").find('input').attr('disabled', true);
                    label.next().removeClass("hidden").find('input').attr('disabled', false);
                }
            });
        };
        modalBody.on("change", ":radio", function () {
            checkVisibility($(this));
        });
        checkVisibility();

        modalBody.uploadImage(50, function (encodeName) {
            var submit = $(this).find('#submit'),
                preloader = modalBody.find(".preloader"),
                emailError = false;

            var pattern = /^[\w.\-_]+@[\w.\-_]+$/;
            var userEmail = $('#email');
            var gravatarEmail = $('#gravatar_email');
            if (userEmail.length > 0) {
                if (!pattern.test(userEmail.val().trim())) {
                    userEmail.addClass('error');
                    emailError = true;
                } else {
                    userEmail.removeClass('error');
                }
            }
            if (form.find('input[name="photo_types"]:checked').val() == 'gravatar_email') {
                if (!pattern.test(gravatarEmail.val().trim())) {
                    gravatarEmail.addClass('error');
                    emailError = true;
                } else {
                    gravatarEmail.removeClass('error');
                }
            }

            if (emailError) {
                App.notify.error(App.t("Email is incorrect!"));
                preloader.remove();
                submit.removeAttr('disabled');
                return false;
            }

            var photo = $('#preview-uploaded-img');
            form.find('input[name="has_photo"]').val(
                (photo.length > 0 && photo.is(':visible') ? 1 : 0)
            );
            var _values = form.serializeArray();
            if (encodeName) {
                _values.push({
                    name: "avatar",
                    value: typeof encodeName == 'object' && encodeName.base_name != undefined ? encodeName.base_name : encodeName
                });
            }
            App.remote.post(form.attr("action"), _values, function (r) {
                preloader.remove();
                var result = App.remote.parseResult(r);
                if (result.data.isError()) {
                    submit.toggleDisable();
                    App.notify.error(result.data.getMessage());
                    return false;
                }
                App.notify.success(result.data.getMessage());
                if (document.getElementsByClassName('employee-avatar')[0] != undefined) {
                    document.getElementsByClassName('employee-avatar')[0].src = result.data.getParam('x128');
                }
                if (result.data.getParam('x50') && document.getElementsByClassName('avatar')[0] != undefined) {
                    document.getElementsByClassName('avatar')[0].src = result.data.getParam('x50');
                }
                var userName = result.data.getParam('user_name');
                var userShortName = result.data.getParam('user_short_name');
                if (userName) {
                    $('.profile-card .user-name span').text(userName);
                }
                if (userShortName) {
                    $('.members-area .user-info span.name').text(userShortName);
                }
                App.dynamic.modal.close(modal.modal);
            });
        });
    });

    $('.api-setting').openFromUrl(function (modal) {
        var modalBody = modal.getContent(true);

        modalBody.find('.regenerate-api-key').powerTip({ placement: 'n', smartPlacement: true });

        modalBody.on(App.event.click(), '#reset_api_key', function (e) {
            e.preventDefault();

            App.remote.get(
                {
                    url: $(this).attr('href'),
                    success: function (response) {
                        modalBody.find('#api-key').text(response.data.getParam('new_api'));
                        App.notify.success(response.data.getMessage());
                    },
                    error: function (response) {
                        App.notify.error(response.data.getMessage());
                    }
                }
            );
        });

        modalBody.on(App.event.click(), 'input.toggle_api_status', function (e) {
            var input = $(this);
            var apiKey = $('#api-key');
            if (apiKey.attr('api-status') == input.val() && apiKey.attr('api-status') != 'loading') {
                return;
            }
            apiKey.attr('api-status', 'loading');
            modalBody.find('.preloader').show();
            modalBody.find('.irefresh').hide();
            App.remote.get({
                url: input.attr('href'),
                success: function (response) {
                    apiKey.attr('api-status', input.val());
                    modalBody.find('.preloader').hide();
                    modalBody.find('.irefresh').show();
                    App.notify.success(response.data.getMessage());
                    modalBody.find('.api-status').text(App.t(response.data.getParam("api_status")));
                    modalBody.find('#api-key').text(response.data.getParam('api_key'));
                },
                error: function (response) {
                    App.notify.error(response.data.getMessage());
                }
            });
        });

        modalBody.on(App.event.click(), 'a.regenerate-api-key', function (e) {
            var link = $(this);
            var apiKey = $('#api-key');
            modalBody.find('.preloader').show();
            link.hide();
            App.remote.get({
                url: link.attr('href'),
                success: function (response) {
                    apiKey.text(response.data.getParam("api_key"));
                    modalBody.find('.preloader').hide();
                    link.show();
                    App.notify.success(response.data.getMessage());
                },
                error: function (response) {
                    App.notify.error(response.data.getMessage());
                }
            });
            return false;
        });
    });

    $(".change-password").openFromUrl(function (modal) {
        var modalBody = modal.getContent(true);

        modalBody.on(App.event.click(), '.show-password', function () {
            $('.show-password').toggleClass('active');
            ShowHidePassword('password');
            ShowHidePassword('password_again');
        });

        modalBody.on("submit", 'form', function (e) {
            e.preventDefault();
            var form = $(this);
            var required = form.find("input.required");

            if (required.length && required.val().trim() == "") {
                required.parent().addClass("error");
                App.notify.error(App.t("Please fill in required fields"));
                return false;
            }

            form.find('input[type=submit]').attr('disabled', 'disabled');
            form.find('.preloader').css('margin-right', '10px').show();

            App.remote.post(form.attr("action"), form.serialize(), function (r) {
                var result = App.remote.parseResult(r);
                form.find('input[type=submit]').removeAttr('disabled');
                form.find('.preloader').hide();
                if (result.data.isError()) {
                    App.notify.error(result.data.getMessage());
                    return false;
                }
                App.notify.success(result.data.getMessage());
                App.dynamic.modal.close(modal.modal);
            });
        });
    });

    /* Top navigation */
    if ($('#top_navigation').length) {
        $.topNavScroll();
    }

    $(".disclosure").on(App.event.click(), function () {
        $(this).toggleClass('opened');
        $(this).next().toggle();
    });

    var toTopResize = function () {
        var window_width = $(window).width();
        var main_width = $('#main').width();
        var top_right = (window_width - main_width) / 4;

        if ($('a.toTop').width() < top_right && $(window).scrollTop() != "0") {
            $('a.toTop').css({'display': 'block', 'right': top_right + 'px'});
        } else {
            $('a.toTop').hide();
        }
    };

    if ($(document).height() > $(window).height()) {
        toTopResize();
    }

    $(window).resize(function () {
        toTopResize();
    });

    $(window).scroll(function () {
        toTopResize();
    });

    /* Error fields */
    $('body').on('focus keyup change ' + App.event.click(),
        'input.error, textarea.error, select.error',
        function (event) {
            $(this).removeClass('error');
        });

    /* Top bar */
    $('a.toTop').on(App.event.click(), function (event) {
        App.utils.scrollTo('html');
        event.preventDefault();
    });

    var topBarNav = $('ul.top-bar-nav > li');
    $.each(topBarNav, function (liIdx, li) {
        return;
        var badge = $(li).children('a').find('span.badge'),
            subNav = $(li).has('ul.sub-menu').find('li');

        badge.text(0);

        $.each(subNav, function (subIdx, subLi) {
            var subBadge = $(subLi).find('a > span.badge'),
                subBadgeVal = parseInt(subBadge.text());

            if (subBadge.is('span') && subBadgeVal > 0) {
                badge.text(parseInt(badge.text()) + subBadgeVal);
            }
        });

        if (parseInt(badge.text()) > 0) badge.css('display', 'inline-block');
        else badge.css('display', 'none');
    });

    $('.wrap-container').hover(function () {
        $('.openSub').removeClass('openSub');
        $('.overlay-subNav').remove();
        $('.sub-nav').hide();
    });

    /* Login link handler */
    $('.login-popup').on(App.event.click(), function (e) {
        e.preventDefault();
        App.openLoginPopup({
            title: 'Login Form',
            activeTab: 'form-login',
            get: {},
            redirect: document.location.href,
        });
        return false;
    });

    var registrationForm = function () {
        App.openLoginPopup({
            title: 'Register Form',
            activeTab: 'form-registration',
            get: {},
            redirect: document.location.href
        });
    };

    /* Registration link handler */
    $('.register-popup').on(App.event.click(), function (e) {
        e.preventDefault();
        registrationForm();
        return false;
    });

    if (App.getParam('openRegistrationForm', 0) == 1) {
        registrationForm();
    }

    $("form.resources-form-search").submit(function () {
        var searchField = $(this).find("input[name=text]"),
        // Search form slashes replacement
            searchVal = searchField.val().replace('/', '-').replace('\\', '-');
        if (searchVal.trim().length == 0) {
            searchField.addClass('error');
        } else {
            location.href = App.baseUrl("search/" + encodeURIComponent(searchVal));
        }
        return false;
    });

    /* Member Area */
    $(document).on(App.event.click(), function () {
        $('.members-area').removeClass('active');
    });

    $('.members-area .ddArrow').on(App.event.click(), function () {
        $('.members-area').toggleClass('active');
        return false;
    });

    /* Search Form */
//    $("form#search-form input#search").focus(function () {
//        if ($(this).val() == App.t('Search')) {
//            $(this).val('');
//        }
//    }).blur(function () {
//        if ($(this).val() == '') {
//            $(this).val(App.t('Search'));
//        }
//    });

    $(".success-notification").live('click', function () {
        $(this).fadeOut();
    });

    /* Select new roles */
    $('.table-col-line label').live("click", function () {
        var chkBox = $(this).parent().find('input[type=checkbox]');
        if ($(chkBox).attr('checked') == 'checked') {
            $(this).addClass('active');
        } else {
            $(this).removeClass('active');
        }
    });

    /* Check if field is required */
//    $('body').on("submit", 'form',  function(e) {
//        $(this).find(".require").removeClass("error");
//        var form = $(this);
//        var fields = form.find(".require input, .require textarea, .required select");
//        if (fields.length) {
//            var error = false;
//            fields.each(function(){
//                if ($(this).val().trim() == "") {
//                    $(this).parent().addClass("error");
//                    error = true;
//                }
//                if($(this).val() == 0){
//                    form.find(".ddcommon[id^="+$(this).attr("id")+"]").addClass("error");
//                    error = true;
//                }
//            });
//            if (error) {
//                App.notify.error(App.t("Please fill in required fields"));
//                e.stopImmediatePropagation();
//                return false;
//            }
//        }
//    });

    /* Select / Deselect Responses */
    $('.responses-table tr td input, .checkTopic input').live("click", function () {
        if ($(this).is(':checked')) {
            $(this).parent().parent().addClass('active');
        } else {
            $(this).parent().parent().removeClass('active');
        }
    });

    /* Select / Deselect all Responses in table */
    $('.responses-table tr th input').live("click", function () {
        if ($(this).is(':checked')) {
            $('.responses-table tr td input').attr('checked', 'checked').parent().parent().addClass('active');
        } else {
            $('.responses-table tr td input').removeAttr('checked').parent().parent().removeClass('active');
        }
    });

    /* Form input type file */
    $("body").on('change', 'div.element-upload input[type=file]', function () {
        filename = this.value.replace(/^.*[\/\\]/g, "");
        $(this).parent().find("input[type=text]").val(filename);
    });

    var searchWrapWidth;
    $('#top-bar div.search-block-wrap').on('focus', 'input[name="text"]',function (event) {
        var target = $(event.delegateTarget);
        searchWrapWidth = target.width();
        $(target).animate({
            width: '230'
        });
    }).on('blur', 'input[name="text"]', function (event) {
        var target = $(event.delegateTarget);
        $(target).animate({
            width: searchWrapWidth
        });
    });

    /******** Object options ********/

    $(".object-options, .object-actions").on(App.event.click(), "[isajax='1']", function (e) {
        e.preventDefault();

        if ($(this).hasClass('tooltip')) {
            $(this).css("background-image", 'url(' + App.assets.common.image('/preloader.gif') + ')');
        } else {
            var options = $(this).closest('div');
            options.find('.options i').addClass('preloader');
        }

        var link = $(e.target);

        if (link.is('.object_lock_comments')) {
            lockComments($(this));
        } else if (link.is('.object_trash')) {
            changeState.trash($(this));
        } else if (link.is('.object_archive')) {
            changeState.archive($(this));
        }
    });

    var all = $('div.all');

    all.on(App.event.click(), '.object-state-header a', function () {
        var objActions = all.find('.object-actions');
        var actClass = null;

        if (objActions.length > 0) {
            if ($(this).is('.object_trash')) {
                actClass = 'object_trash';
            } else if ($(this).is('.object_archive')) {
                actClass = 'object_archive';
            }
        }

        if (actClass != null) {
            objActions.find('.' + actClass).trigger('click');
            return false;
        }

    });

    all.on(App.event.click(), ".subscribe-link.email", function (e) {
        e.preventDefault();
        var link = $(this);
        if (App.loggedUser().isGuest()) {
            var params = {'redirect': link.attr("href")};
            App.openLoginPopup(params);
        } else {
            var img = link.css("background-image");
            link.css("background-image", 'url(' + App.assets.common.image('/preloader.gif') + ')');
            App.remote.get(link.attr("href"), {format: 'json'}, function (r) {
                var result = App.remote.parseResult(r);
                link.css("background-image", img);
                if (result.data.isError()) {
                    App.notify.error(result.data.getMessage());
                    return false;
                }
                App.notify.success(result.data.getMessage());
                link.attr('href', result.data.getParam('url'));
                link.text(result.data.getParam('text'));
            });
        }
        return false;
    });

    var lockComments = function (self) {
        App.remote.get(self.attr("href"), null, function (r) {
            var result = App.remote.parseResult(r);

            if (self.hasClass('tooltip')) {
                self.removeAttr("style");
            } else {
                var options = self.closest('div');
                options.find('.options i').removeClass('preloader');
            }

            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
                return false;
            }

            var lock = $(".object_lock_comments");
            lock.toggleClass('unlock');

            var title_text = self.is(".unlock") ? App.t("Lock Comments") : App.t("Unlock Comments");

            lock.each(function (index) {
                if ($(this).hasClass('tooltip')) {
                    $(this).data('powertip', title_text);
                } else {
                    $(this).text(title_text);
                }
            });
            $('.comment-reply').toggle();

            if (self.is(".unlock")) {
                $('#add-comment-button').removeClass('hidden');
                $('.comment-quick-reply[locked-comments="1"]').removeAttr('locked-comments').removeClass('hidden');
            } else {
                $('#add-comment-button').addClass('hidden');
                $('.comment-quick-reply:not(.hidden)').attr('locked-comments', 1).addClass('hidden');
            }

            var html = result.data.getOutput();
            $('.leave-comment-block').replaceWith(html);
            var textAreaId = $(html).find("textarea").attr("id");
            var textarea = $("#" + textAreaId).get(0);
            App.initEditor(textarea);
            App.notify.success(result.data.getMessage());
        });
    };

    var changeState = {
        prepare: function (self, response, state) {
            var result = App.remote.parseResult(response),
                recoveryUrl = result.data.getParam('recoveryUrl'),
                originalUrl = result.data.getParam("originalUrl"),
                message = result.data.getMessage();

            if (self.hasClass('tooltip')) {
                self.removeAttr("style");
            } else {
                options = self.closest('div');
                options.find('.options i').removeClass('preloader');
            }

            if (result.data.isError()) {
                App.notify.error(result.data.getMessage());
                return false;
            }
            var html = result.data.getOutput(),
                objStateHeader = $("#object_state_lines");
            if (objStateHeader.length) {
                objStateHeader.remove();
            }
            if (html) {
                if ($(".breadcrumbs").length) {
                    $(".breadcrumbs").after(html);
                } else {
                    $(".mainArea").before(html);
                }
            }
            var links = $(".object_" + state);
            links.toggleClass('restore');

            return {links: links, message: message};
        },

        trash: function (self) {
            App.remote.get(self.attr("href"), null, function (r) {
                var prepare = changeState.prepare(self, r, 'trash');
                var newTitle, newUrl;
                if (r.response.params.step == 'recovery') {
                    newTitle = App.t('Move to Trash');
                    newUrl = r.response.params.trash_url;
                } else {
                    newTitle = App.t('Restore');
                    newUrl = r.response.params.recovery_url;
                }
                var trashLink = prepare.links;
                if (trashLink.hasClass('tooltip')) {
                    trashLink.data('powertip', newTitle);
                }
                trashLink.attr('href', newUrl).text(newTitle);

                var makeCommentNormal = function (comment) {
                    comment.find('.comment-content .block-preloader').remove();
                    comment.find('.comment-content .trash-line').remove();
                    comment.removeClass('trashed').find('.comment-content > .hidden-by-trash').removeClass('hidden-by-trash').show();

                    $(".comment-reply-to[reply_to=" + comment.attr("comment_id") + "]").show();
                    var best = $(".best-answer[comment_id=" + comment.attr("comment_id") + "]");
                    if (best.length) {
                        $("span.best-answer").show();
                        best.show();
                    }
                };

                if (self.hasClass('restore')) {
                    $('.object_archive').addClass('hidden');
                    $('.comments-block .comment.trashed').each(function () {
                        makeCommentNormal($(this));
                    });
                    $('.comments-block .comment').hide();
                } else {
                    $('.comments-block .comment').show();
                    $('.object_archive').removeClass('hidden');
                }
                $("#count-comments").html($('.comments-block').find('.comment:not(.trashed):not(.best-answer):visible').length);

                if (self.hasClass('restore')) {
                    $('.comment-quick-reply:not(.hidden)').attr('in-trash', 1).addClass('hidden');
                } else {
                    $('.comment-quick-reply[in-trash="1"]').removeAttr('in-trash').removeClass('hidden');
                }

                App.notify.success(prepare.message);
            });
        },

        archive: function (self) {
            App.remote.get(self.attr("href"), null, function (r) {
                var prepare = changeState.prepare(self, r, 'archive');
                var newTitle, newUrl;
                if (r.response.params.step == 'recovery') {
                    newTitle = App.t('Move to Archive');
                    newUrl = r.response.params.archive_url;
                } else {
                    newTitle = App.t('Restore');
                    newUrl = r.response.params.recovery_url;
                }
                $('a.object_archive').data('powertip', newTitle).attr('href', newUrl).text(newTitle);

                if (self.hasClass('restore')) {
                    $('.object_trash').addClass('hidden');
                } else {
                    $('.object_trash').removeClass('hidden');
                }

                App.notify.success(prepare.message);
            });
        }
    };

    /* Trash */
    $('#top-bar-trash').off(App.event.click()).on(App.event.click(), function () {
        var url = this.href;
        App.dynamic.modal.openFromUrl({
            modal: {
                title: App.t('Trash'),
                width: '600',
                shader: false,
                useCustomScroller: true,
                useWrapper: false
            },
            request: {
                url: url,
                success: function (res) {

                }
            },
            complete: function (modal) {
                $('.tooltip').powerTip({ placement: 'n', smartPlacement: true });
                var wrapper = $('#trash-popup');
                wrapper.find('ul.modal-trash-list li div.icons-trash a').on(App.event.click(), function () {
                    var trashPopup = $('#trash-popup');
                    var element = $(this);
                    var deleteAction = element.hasClass('delete');
                    var parent = element.parents('li:first');
                    var url = this.href;
                    var allThread = false;
                    var hasReplies = parent.attr('reply_to') != undefined && parent.attr('reply_to') == 0 && $('#trash-popup').find('li[reply_to="' + parent.attr('object-id') + '"]').length > 0;
                    if (hasReplies && !deleteAction) {
                        allThread = confirm(App.t('Recover the whole thread with replies?'));
                        if (!allThread) {
                            url += '?withoutReplies=1';
                        }
                    }
                    var restoreParent = false;
                    if (!deleteAction && parent.attr('parent-is-alive') != undefined && parent.attr('parent-is-alive') == 0) {
                        restoreParent = confirm(App.t('Recover main comment of this reply?'));
                        if (restoreParent) {
                            url += '?recoverMain=1';
                        } else {
                            url += '?makeComment=1';
                        }
                    }
                    element.hide().after('<i class="preloader ico-small"></i>');
                    $.ajax({
                        url: url,
                        success: function (response) {
                            if (response.response.response_type == 'error') {
                                App.notify.error(App.t(response.response.message));
                                element.show().next().remove();
                            } else {
                                App.notify.success(App.t(response.response.message));
                                parent.parents('div.modal-trash:first').find('div.title-small div.badge').text(parseInt(wrapper.find('ul.modal-trash-list li[object-type="' + parent.attr('object-type') + '"]').length - 1));
                                if (element.hasClass('delete') && parent.attr('object-type') != 'Comments') {
                                    wrapper.find('ul.modal-trash-list li[object-type="Comments"][parent-id="' + parent.attr('object-id') + '"]').remove();
                                    wrapper.find('div.modal-trash[objects-type="Comments"] div.title-small div.badge').text(parseInt(wrapper.find('ul.modal-trash-list li[object-type="Comments"]').length));
                                }
                                if (allThread || (hasReplies && deleteAction)) {
                                    trashPopup.find('li[reply_to="' + parent.attr('object-id') + '"]').remove();
                                } else {
                                    if (hasReplies) {
                                        trashPopup.find('li[reply_to="' + parent.attr('object-id') + '"]').attr('parent-is-alive', 1);
                                    }
                                }
                                if (restoreParent) {
                                    trashPopup.find('li[object-id="' + parent.attr('reply_to') + '"][object-type="Comments"]').remove();
                                    trashPopup.find('li[reply_to="' + parent.attr('reply_to') + '"]').attr('parent-is-alive', 1);
                                }
                                parent.remove();
                                if (trashPopup.find('li').length == 0) {
                                    trashPopup.find('.rollbar-content .modalBlock').remove();
                                    trashPopup.find('.result-not-found').removeClass('hidden');
                                }
                            } // if
                        }
                    });
                    return false;
                });
                wrapper.find('.empty-trash').on(App.event.click(), function () {
                    if (confirm(App.t("Are you sure? You can't UNDO this operation!"))) {
                        var element = $(this);
                        var url = this.href;
                        element.hide().after('<i class="preloader ico-small"></i>');
                        $.ajax({
                            url: url,
                            success: function (response) {
                                element.show().next().remove();
                                if (response.response.response_type == 'error') {
                                    App.notify.error(App.t(response.response.message));
                                } else {
                                    App.notify.success(App.t(response.response.message));
                                    wrapper.find('ul.modal-trash-list li').remove();
                                    wrapper.find('div.modal-trash div.badge').text(0);
                                    wrapper.find('.rollbar-content .modalBlock').remove();
                                    wrapper.find('.result-not-found').removeClass('hidden');
                                } // if
                            }
                        });
                    }
                    return false;
                });
                wrapper.find('input.object-type-checkbox').on(App.event.click(), function () {
                    var inputs = wrapper.find('input.object-checkbox[object-type="' + $(this).attr('object-type') + '"]');
                    if ($(this).attr('checked') != undefined) {
                        inputs.attr('checked', 'checked');
                    } else {
                        inputs.removeAttr('checked');
                    }
                });
                wrapper.find('input.object-checkbox').on(App.event.click(), function () {
                    if ($(this).attr('checked') != undefined) {
                        if (wrapper.find('input.object-checkbox[object-type="' + $(this).attr('object-type') + '"]').length == wrapper.find('input.object-checkbox[object-type="' + $(this).attr('object-type') + '"]:checked').length) {
                            wrapper.find('input.object-type-checkbox[object-type="' + $(this).attr('object-type') + '"]').attr('checked', 'checked');
                        }
                    } else {
                        wrapper.find('input.object-type-checkbox[object-type="' + $(this).attr('object-type') + '"]').removeAttr('checked');
                    }
                });
                wrapper.find('select.multi-actions').on('change', function () {
                    var action = $(this).val();
                    if (action) {
                        wrapper.find('button.execute-multi-actions').removeClass('hidden');
                    } else {
                        wrapper.find('button.execute-multi-actions').addClass('hidden');
                    }
                });
                wrapper.find('button.execute-multi-actions').on(App.event.click(), function () {
                    var butoon = $(this);
                    var select = wrapper.find('select.multi-actions');
                    var action = wrapper.find('select.multi-actions').val();
                    var url = butoon.attr('href');
                    var objects = [];
                    var postObjects = {};
                    var rows = wrapper.find('input.object-checkbox:checked');
                    if (rows.length == 0) {
                        App.notify.error('You should select at least one object!');
                        return false;
                    }
                    rows.each(function () {
                        var parent = $(this).parents('li:first');
                        if (postObjects[parent.attr('object-type')] == undefined) {
                            postObjects[parent.attr('object-type')] = [];
                        }
                        objects.push(parent);
                        $(this).attr('disabled', true);
                        postObjects[parent.attr('object-type')].push(parent.attr('object-id'));
                    });
                    butoon.attr('disabled', true);
                    select.attr('disabled', true);
                    $.ajax({
                        url: url,
                        type: 'POST',
                        data: {
                            params: {
                                action: action,
                                objects: postObjects
                            }
                        },
                        success: function (response) {
                            if (response.response.response_type == 'error') {
                                App.notify.error(App.t(response.response.message));
                            } else {
                                butoon.removeAttr('disabled');
                                select.removeAttr('disabled');
                                App.notify.success(App.t(response.response.message));
                                $.each(objects, function () {
                                    try {
                                        if (this.attr('object-type') != 'Comments' && action == 'delete') {
                                            wrapper.find('ul.modal-trash-list li[object-type="Comments"][parent-id="' + this.attr('object-id') + '"]').remove();
                                            wrapper.find('div.modal-trash[objects-type="Comments"] div.title-small div.badge').text(parseInt(wrapper.find('ul.modal-trash-list li[object-type="Comments"]').length));
                                        } // if
                                        this.parents('div.modal-trash:first').find('div.title-small div.badge').text(parseInt(wrapper.find('ul.modal-trash-list li[object-type="' + this.attr('object-type') + '"]').length - 1));
                                        this.remove();
                                    } catch (e) {
                                    }
                                });
                                if (wrapper.find('li').length == 0) {
                                    wrapper.find('.rollbar-content .modalBlock').remove();
                                    wrapper.find('.result-not-found').removeClass('hidden');
                                }
                            } // if
                        }
                    });
                    return false;
                });
            }
        });
        return false;
    });

    $('body').on(App.event.click(), ".combined-buttons li", function () {
        var self = $(this);
        if (!self.hasClass("activ-pos")) {
            self.addClass("activ-pos").siblings("li").removeClass("activ-pos");
        }
    });

    $('.tooltip').powerTip({ placement: 'n', smartPlacement: true });

    $('.content-tabs li').on(App.event.click(), function (e) {
        var self = $(this),
            tabId = this.id,
            contentTab = self.closest('.content-tabs').siblings('.content-tabs-area.' + tabId + '');
        if (self.closest('li.active').length) {
            return;
        }
        self.addClass('active').siblings().removeClass('active');
        contentTab.toggleClass('hidden').siblings('.content-tabs-area').addClass('hidden');
        $('span.tab-related').hide();
        $('span.tab-related[tab-id="' + tabId + '"]').show();
    });

    /* Share block handler */
    $('#share-block-header').one(App.event.click(), function (event) {
        /* System command "loadShare" */
        App.sysCmd('loadShare', {}, function (response) {
            try {
                if (response.data.isSuccess()) {
                    $('#share-block').html(response.data.getOutput());
                    //App.notify.error(response.data.getMessage());
                }
            } catch (e) {
            }
        });
    });

    /**
     * Follows tabs activity to inject hash(tab id) into address.
     * Monitors hash on browser address input and triggers 'click' event on corresponding tab.
     * Detects active tab on page load and sets it's hash if hash wan't defined.
     */
    (function () {
        var tabsContainer = $('ul.content-tabs');

        if (!tabsContainer.length) return;

        var setHash = function (element) {
            element = $(element);
            var tabHash = element.attr('id'),
                elTopPos = Math.round(element.offset().top);
            element.removeAttr('id');
            var x = pageXOffset, y = pageYOffset;
            if (y == elTopPos) {
                y = 0;
            }
            document.location.hash = '#/' + tabHash;
            scrollTo(x, y);
            element.attr('id', tabHash);
        };

        tabsContainer.on(App.event.click(), 'li', function (event) {
            setHash(this);
        });

        var currHash = document.location.hash.replace('#/', '');
        if (currHash) {
            var hashTarget = tabsContainer.find('#' + currHash);
            if (hashTarget.length) {
                hashTarget.trigger(App.event.click());
            }
        }
    })();
});

(function ($) {

    $.topNavScroll = function () {
        var top_nav_width = $('#top_navigation').width();
        var top_nav_right_width = $('#top_navigation .top-nav-right').width() + 10;

        var menu_width = top_nav_width - top_nav_right_width;

        $('.menu-tabs').css('max-width', menu_width);
        var menuLast = $('.menu-tabs ul li').last(),
            last_pos = 0;
        if (menuLast.length) {
            last_pos = menuLast.position().left + menuLast.outerWidth();
        }

        var elem = $('.menu-tabs ul'),
            right_arrow_top = $(".top-nav .arrow-tab.right-arrow"),
            left_arrow_top = $(".top-nav .arrow-tab.left-arrow");

        if (last_pos > menu_width) {
            var maxScroll = menu_width - last_pos;

            right_arrow_top.show();
            elem.css('left', 0);
            right_arrow_top.mousedown(function () {
                $.scrollTabs_right(elem, left_arrow_top, right_arrow_top, maxScroll);
            })
                .mouseup(function () {
                    $.scrollTabs_stop(elem);
                });

            left_arrow_top.mousedown(function () {
                $.scrollTabs_left(elem, left_arrow_top, right_arrow_top, maxScroll);
            })
                .mouseup(function () {
                    $.scrollTabs_stop(elem);
                });
        } else {
            elem.css('left', 0);
            right_arrow_top.hide();
            left_arrow_top.hide();
        }
    }

    $.scrollTabs_init = function (elem, maxScroll) {
        if (elem) {
            elem.state = 0;
            elem.timer = null;
            elem.maxScroll = maxScroll;
        }
    };

    $.scrollTabs_right = function (elem, left_arrow, right_arrow, maxScroll, timer) {
        var left_scroll = elem.position().left;

        if (!elem.maxScroll) {
            $.scrollTabs_init(elem, maxScroll);
        }
        if (timer == undefined) {
            elem.state = 1;
        }
        if ((left_scroll > elem.maxScroll) && (elem.state == 1)) {
            if (left_scroll == 0) {
                left_arrow.fadeIn(900);
            }
            elem.css({ "left": "-=1px" });
            elem.timer = setTimeout(function () {
                $.scrollTabs_right(elem, left_arrow, right_arrow, maxScroll, true);
            }, 1);
        } else {
            right_arrow.fadeOut(900);
        }
    };

    $.scrollTabs_left = function (elem, left_arrow, right_arrow, maxScroll, timer) {
        var left_scroll = elem.position().left;

        if (!elem.maxScroll) {
            $.scrollTabs_init(elem, maxScroll);
        }
        if (timer == undefined) {
            elem.state = -1;
        }
        if ((left_scroll < 0) && (elem.state == -1)) {
            if (right_arrow.is(":hidden")) {
                right_arrow.fadeIn(900);
            }
            elem.css({ "left": "+=1px" });
            elem.timer = setTimeout(function () {
                $.scrollTabs_left(elem, left_arrow, right_arrow, maxScroll, true);
            }, 1);
        } else {
            left_arrow.fadeOut(900);
        }
    };

    $.scrollTabs_stop = function (elem) {
        if (elem.length) {
            if (elem.timer) {
                clearTimeout(elem.timer);
            }
            elem.state = 0;
        }
    };

    $.fn.openFromUrl = function (options, selector, callback) {
        var self = $(this),
            callbackFun = function () {
            },
            opt = null,
            sel = '';
        $.each(arguments, function (i, arg) {
            if ($.isFunction(arg)) {
                callbackFun = arg;
            } else if ($.isPlainObject(arg) && !$.isEmptyObject(arg)) {
                opt = arg;
            } else if ($.type(arg) === "string" || arg instanceof jQuery) {
                sel = arg;
            }
        });

        self.on(App.event.click(), sel, function (event) {
            event.preventDefault();
            var _title = this.title,
                _href = this.href
            var defaults = {
                autoNotifySuccess: true,
                autoNotifyError: true,
                complete: callbackFun,
                modal: {
                    title: (typeof _title !== "undefined") ? App.t(_title) : '',
                    width: '500',
                    shader: false,
                    useCustomScroller: true,
                    useWrapper: false
                },
                request: {
                    type: 'get',
                    url: (typeof _href !== "undefined") ? _href : '',
                    data: {
                        format: 'json'
                    },
                    complete: function (response) {
                    },
                    success: function (response) {
                    },
                    error: function (response) {
                    }
                }
            };
            var settings = null;
            if (opt) {
                settings = $.extend(true, defaults, opt);
            }
            App.dynamic.modal.openFromUrl(settings ? settings : defaults);
        });
    };
    $.fn.toggleDisable = function () {
        var button = $(this);
        if (button.prop('disabled')) {
            button.attr("disabled", false).removeClass("disabled");
        } else {
            button.attr("disabled", true).addClass("disabled");
        }
        return this;
    };
    /**
     * Counts letters in input field
     *
     * @return void
     * @param {jQuery} lengthSelector
     */
    $.countTitleLength = function (lengthSelector) {
        var titleLength = 99;
        lengthSelector.html(titleLength - this.val().length);
        $(this).keydown(function (e) {
            if (e.keyCode !== 13) {
                var length = this.value.length;
                if (length > titleLength) {
                    $(this).val(this.value.substr(0, titleLength));
                    length = titleLength;
                }
                lengthSelector.html(titleLength - length);
            }
        });
    }
    /**
     * Create Custom select
     *
     * @return void
     */
    $.fn.customSelect = function () {
        var select = $(this);
        var isModal = false;
        if (select.parents('.modal').length) {
            isModal = true;
        }
        var size_select, width_select_child;
        var isModal = false;
        if (select.parents('.modal').length) {
            isModal = true;
        }
        select.width(function (i, val) {
            width_select_child = val + 55;
            return val + 55;
        });
        select.msDropDown({
            animStyle: 'none',
            enableAutoFilter: false,
            visibleRows: 10,
            isModal: isModal,
            childWidth: width_select_child + "px"});
    }
    /**
     * Upload Images
     * @param {number} previewSize
     * @param {function} callback
     * @return void
     */
    $.fn.uploadImage = function (size, callbackFun) {
        var $this = $(this),
            availableExt = ['jpg', 'JPG', 'jpeg', 'JPEG', 'gif', 'GIF', 'png', 'PNG'],
            isSupportHTML5 = $.isFunction(window.FormData),
            imgPreview = document.getElementById('preview-uploaded-img'),
            imgPreviewBlock = imgPreview.parentNode,
            fileFormBlock = document.getElementById('upload-image-block'),
            file = fileFormBlock.getElementsByTagName('input')[0],
            previewSize, callback,
            name = function () {
                return !isSupportHTML5 ? file.value : file.files.item(0).name
            },
            resizeImg = function () {
                imgPreview.style.height = !previewSize ? '50px' : previewSize + 'px';
            };

        $.each(arguments, function () {
            if (typeof this === 'function') {
                callback = this;
            } else if (typeof parseInt(this, 10) === 'number') {
                previewSize = this;
                resizeImg();
            }
        });

        /* Hide preview block */
        if (isSupportHTML5) {
            var showPreviw = function (boolean) {
                if (boolean) {
                    imgPreviewBlock.classList.remove('hidden');
                    fileFormBlock.classList.add('hidden');
                } else {
                    imgPreviewBlock.classList.add('hidden');
                    fileFormBlock.classList.remove('hidden');
                }
            };

            $this.on(App.event.click(), '.idelete', function (e) {
                e.preventDefault();
                showPreviw(false);
                file.value = '';
            })
        }

        $this.on("change", 'input:file', function (e) {
            var filename = name().replace(/^.*[\/\\]/g, ""),
                ext = filename.substring(filename.lastIndexOf('.') + 1),
                file = $(this);
            if ($.inArray(ext, availableExt) < 0) {
                this.value = '';
                App.notify.error("You are trying to use incorrect file type!");
                return false;
            }
            if (isSupportHTML5) {
                /* Preview the uploaded img */
                var reader = new FileReader();
                reader.onload = function (e) {
                    showPreviw(true);
                    resizeImg();
                    imgPreview.src = e.target.result;
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
        /* Submit form */
        $this.on('submit', function (e) {
            if (!e.isDefaultPrevented()) {
                e.preventDefault();
            }
            var form = $(this),
                $file = form.find('input:file');
            form.find(':submit').toggleDisable();
            form.find('.modalFooter').append('<i class="ico-small preloader"></i>');
            if (!$file.val()) {
                if (callback && typeof(callback) === "function") {
                    callback.call($this, null);
                }
                return;
            }
            if (isSupportHTML5) {
                var formData = new FormData();
                formData.append('image', file.files[0]);
                $.ajax({
                    url: App.baseUrl('/editor/upload'),  //Server script to process data
                    type: 'POST',
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false
                }).done(function (r) {
                    var result = App.remote.parseResult(r);
                    if (result.data.isError()) {
                        form.find(':submit').toggleDisable();
                        App.notify.error(result.data.getMessage());
                        return false;
                    }
                    if (callback && typeof(callback) === "function") {
                        callback.call($this, result.data.getParams());
                    }
                    return true;
                });
            } else {
                var nameIfrmae = "iframe-upload-file-wysiwyg";
                $("body").append("<iframe class='iframe-file-upload' id='" + nameIfrmae + "' name='" + nameIfrmae + "' src=" + App.baseUrl('/editor/upload') + "></iframe>");
                var iFrame = $('#' + nameIfrmae);
                iFrame.load(function () {
                    iFrame.contents().find("#editor-image-upload").append(document.getElementById('upload-image-block').getElementsByTagName('input')[0]);
                    var uploadForm = iFrame.contents().find("#editor-image-upload");
                    if (iFrame.contents().find("form").length === 0) {
                        var resp = $.parseJSON(iFrame.contents().find('body').text());
                        if ($.isPlainObject(resp)) {
                            App.notify.error(resp.message);
                        } else {
                            if (callback && typeof(callback) === "function") {
                                callback.call($this, resp);
                            }
                        }
                        iFrame.remove();
                    }
                    //magic/hack for IE8 to resolve "access denied" issue
                    try {
                        uploadForm.submit();
                    } catch (er) {
                        uploadForm.submit();
                    }
                });
            }
        });
    }
})(jQuery);


/** File: application/3.0.2/assets/desktop/js/msdropdown/jquery.dd.min.js **/

// MSDropDown - jquery.dd.js
// author: Marghoob Suleman - http://www.marghoobsuleman.com/
// Date: 10 Nov, 2012 
// Version: 3.5.2
// Revision: 27
// web: www.marghoobsuleman.com
/*
// msDropDown is free jQuery Plugin: you can redistribute it and/or modify
// it under the terms of the either the MIT License or the Gnu General Public License (GPL) Version 2
*/ 
;eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('4 1E=1E||{};(9($){1E={41:{2o:\'3.5.2\'},42:"5G 5H",3r:20,43:9(v){6(v!==14){$(".2X").1m({1u:\'3s\',2b:\'4N\'})}1d{$(".2X").1m({1u:\'4O\',2b:\'3t\'})}},3u:\'\',3v:9(a,b,c){c=c||"44";4 d;26(c.2p()){1i"44":1i"4P":d=$(a).2o(b).1a("1W");1j}15 d}};$.3w={};$.2o={};$.2Y(11,$.3w,1E);$.2Y(11,$.2o,1E);6($.1Q.1M===1B){$.1Q.1M=$.1Q.5I}6($.1Q.18===1B){$.1Q.18=$.1Q.5J;$.1Q.1x=$.1Q.5K}6(1y $.3x.4Q===\'9\'){$.3x[\':\'].45=$.3x.4Q(9(b){15 9(a){15 $(a).1p().3y().3z(b.3y())>=0}})}1d{$.3x[\':\'].45=9(a,i,m){15 $(a).1p().3y().3z(m[3].3y())>=0}}9 1W(q,t){4 t=$.2Y(11,{1N:{1a:1g,1n:0,3A:1g,2c:0,1R:14,2Z:5L},3B:\'1W\',1u:5M,1X:7,3C:0,30:11,1J:5N,28:14,3D:\'5O\',2q:\'1Y\',3E:\'3s\',2d:11,1C:\'\',3F:0.7,48:11,3G:0,1v:14,3H:\'5P\',2e:\'\',2f:\'\',31:14,2g:11,1F:11,2r:11,18:{3v:1g,2G:1g,3I:1g,29:1g,1G:1g,2H:1g,2I:1g,1Y:1g,49:1g,4a:1g,2s:1g,2J:1g,32:1g,2t:1g,2u:1g}},t);4 u=1b;4 x={4b:\'5Q\',1S:\'5R\',4c:\'5S\',2h:\'5T\',1l:\'5U\'};4 y={1W:t.3B,33:\'33\',4R:\'5V 5W\',4d:\'4d\',3J:\'3J\',2K:\'2K\',1q:\'1q\',2X:\'2X\',4S:\'4S\',4T:\'4T\',19:\'19\',4e:\'4e\',3K:"3K",4f:"4f",1h:"1h",34:"5X",35:\'35\',3L:\'3L\'};4 z={12:\'5Y\',2v:\'2v\',4U:\'5Z 4V\',3M:"3M"};4 A=14,1Z=14,1k=14,3N={},q,36={},3a=14;4 B=40,4g=38,4h=37,4i=39,4W=27,4j=13,3b=47,4k=16,4l=17,4X=8,4Y=46;4 C=14,2i=14,3c=1g,2L=14,3d,60=14;4 D=3e,3f=4m.61.62,4Z=3f.63(/64/i);t.2g=t.2g.2j();t.1F=t.1F.2j();4 E=9(a){15(65.50.2j.51(a)=="[52 53]")?11:14};4 F=9(){4 a=3f.3z("66");6(a>0){15 2w(3f.67(a+5,3f.3z(".",a)))}1d{15 0}};4 G=9(){t.3B=$("#"+q).1a("68")||t.3B;t.1X=$("#"+q).1a("69")||t.1X;6($("#"+q).1a("54")==14){t.30=$("#"+q).1a("54")};t.28=$("#"+q).1a("55")||t.28;t.3D=$("#"+q).1a("6a")||t.3D;t.2q=$("#"+q).1a("2q")||t.2q;t.3E=$("#"+q).1a("6b")||t.3E;t.2d=$("#"+q).1a("6c")||t.2d;t.3F=$("#"+q).1a("6d")||t.3F;t.3G=$("#"+q).1a("56")||t.3G;t.1v=$("#"+q).1a("6e")||t.1v;t.3H=$("#"+q).1a("6f")||t.3H;t.2e=$("#"+q).1a("2e")||t.2e;t.2f=$("#"+q).1a("2f")||t.2f;t.2g=$("#"+q).1a("6g")||t.2g;t.1F=$("#"+q).1a("6h")||t.1F;t.2r=$("#"+q).1a("6i")||t.2r;t.31=$("#"+q).1a("31")||t.31;t.2g=t.2g.2j();t.1F=t.1F.2j();t.2r=t.2r.2j()};4 H=9(a){6(3N[a]===1B){3N[a]=D.6j(a)}15 3N[a]};4 I=9(a){4 b=L("1l");15 $("#"+b+" 12."+z.12).1o(a)};4 J=9(){6(t.1N.1a){4 a=["1h","1D","1r"];2M{6(!q.1H){q.1H="44"+1E.3r};t.1N.1a=57(t.1N.1a);4 b="6k"+(1E.3r++);4 c={};c.1H=b;c.3A=t.1N.3A||q.1H;6(t.1N.2c>0){c.2c=t.1N.2c};c.1R=t.1N.1R;4 d=O("4P",c);21(4 i=0;i<t.1N.1a.1c;i++){4 f=t.1N.1a[i];4 g=3O 4n(f.1p,f.1f);21(4 p 3P f){6(p.2p()!=\'1p\'){4 h=($.6l(p.2p(),a)!=-1)?"1a-":"";g.6m(h+p,f[p])}};d.1K[i]=g};H(q.1H).1s(d);d.1n=t.1N.1n;$(d).1m({2Z:t.1N.2Z+\'2N\'});q=d}2O(e){6n"6o 6p 6q 6r 3P 6s 1a.";}}};4 K=9(){J();6(!q.1H){q.1H="6t"+(1E.3r++)};q=q.1H;u.6u=q;G();1k=H(q).2K;4 a=t.1v;6(a.2j()==="11"){H(q).1R=11;t.1v=11};A=(H(q).2c>1||H(q).1R==11)?11:14;6(A){1Z=H(q).1R};58();59();1w("5a",2k());1w("5b",$("#"+q+" 1T:19"));4 b=L("1l");3d=$("#"+b+" 12."+y.19);6(t.2g==="11"){$("#"+q).18("2H",9(){22(1b.1n)})};H(q).4o=9(e){$("#"+q).2o().1a("1W").4o()}};4 L=9(a){15 q+x[a]};4 M=9(a){4 s=(a.1C===1B)?"":a.1C.5c;15 s};4 N=9(a){4 b=\'\',1r=\'\',1h=\'\',1f=-1,1p=\'\',1e=\'\',1z=\'\',1o;6(a!==1B){4 c=a.1r||"";6(c!=""){4 d=/^\\{.*\\}$/;4 e=d.6v(c);6(e&&t.2d){4 f=57("["+c+"]")};1r=(e&&t.2d)?f[0].1r:1r;1h=(e&&t.2d)?f[0].1h:1h;b=(e&&t.2d)?f[0].1D:c;1z=(e&&t.2d)?f[0].1z:1z;1o=a.1o};1p=a.1p||\'\';1f=a.1f||\'\';1e=a.1e||"";1r=$(a).1M("1a-1r")||$(a).1a("1r")||(1r||"");1h=$(a).1M("1a-1h")||$(a).1a("1h")||(1h||"");b=$(a).1M("1a-1D")||$(a).1a("1D")||(b||"");1z=$(a).1M("1a-1z")||$(a).1a("1z")||(1z||"");1o=$(a).1o()};4 o={1D:b,1r:1r,1h:1h,1f:1f,1p:1p,1e:1e,1z:1z,1o:1o};15 o};4 O=9(a,b,c){4 d=D.6w(a);6(b){21(4 i 3P b){26(i){1i"1C":d.1C.5c=b[i];1j;2P:d[i]=b[i];1j}}};6(c){d.6x=c};15 d};4 P=9(){4 a=L("4b");6($("#"+a).1c==0){4 b={1C:\'1u: 4O;4p: 2x;2b: 3t;\',1e:y.2X};b.1H=a;4 c=O("2Q",b);$("#"+q).5d(c);$("#"+q).6y($("#"+a))}1d{$("#"+a).1m({1u:0,4p:\'2x\',2b:\'3t\'})};H(q).3g=-1};4 Q=9(){4 a=(t.1F=="11")?" 2R":"";4 b={1e:y.1W+" 5e"+a};4 c=M(H(q));4 w=$("#"+q).6z();b.1C="2Z: "+w+"2N;";6(c.1c>0){b.1C=b.1C+""+c};b.1H=L("1S");b.3g=H(q).3g;4 d=O("2Q",b);15 d};4 R=9(){4 a;6(H(q).1n>=0){a=H(q).1K[H(q).1n]}1d{a={1f:\'\',1p:\'\'}}4 b="",4q="";4 c=$("#"+q).1a("55");6(c){t.28=c};6(t.28!=14){b=" "+t.28;4q=" "+a.1e};4 d=(t.1F=="11")?" "+z.2v:"";4 e=O("2Q",{1e:y.33+b+d});4 f=O("2l",{1e:y.4e});4 g=O("2l",{1e:y.4R});4 h=L("4c");4 i=O("2l",{1e:y.3J+4q,1H:h});4 j=N(a);4 k=j.1D;4 l=j.1p||"";6(k!=""&&t.30){4 m=O("3Q");m.4r=k;6(j.1z!=""){m.1e=j.1z+" "}};4 n=O("2l",{1e:y.34},l);e.1s(f);e.1s(g);6(m){i.1s(m)};i.1s(n);e.1s(i);4 o=O("2l",{1e:y.1h},j.1h);i.1s(o);15 e};4 S=9(){4 a=L("2h");4 b=(t.1F=="11")?"2R":"";4 c=O("2y",{1H:a,5f:\'1p\',1f:\'\',6A:\'1x\',1e:\'1p 4V \'+b,1C:\'23: 2z\'});15 c};4 T=9(a){4 b={};4 c=M(a);6(c.1c>0){b.1C=c};4 d=(a.2K)?y.2K:y.1q;d=(a.19)?(d+" "+y.19):d;d=d+" "+z.12;b.1e=d;6(t.28!=14){b.1e=d+" "+a.1e};4 e=O("12",b);4 f=N(a);6(f.1r!=""){e.1r=f.1r};4 g=f.1D;6(g!=""&&t.30){4 h=O("3Q");h.4r=g;6(f.1z!=""){h.1e=f.1z+" "}};6(f.1h!=""){4 i=O("2l",{1e:y.1h},f.1h)};4 j=a.1p||"";4 k=O("2l",{1e:y.34},j);6(t.1v===11){4 l=O("2y",{5f:\'3h\',3A:q+t.3H+\'[]\',1f:a.1f||"",1e:"3h"});e.1s(l);6(t.1v===11){l.2a=(a.19)?11:14}};6(h){e.1s(h)};e.1s(k);6(i){e.1s(i)}1d{6(h){h.1e=h.1e+z.3M}};4 m=O("2Q",{1e:\'6B\'});e.1s(m);15 e};4 U=9(){4 a=L("1l");4 b={1e:y.4d+" 6C "+z.4U,1H:a};6(A==14){b.1C="z-1o: "+t.1J}1d{b.1C="z-1o:1"};4 c=$("#"+q).1a("56")||t.3G;6(c){b.1C=(b.1C||"")+";2Z:"+c};4 d=O("2Q",b);4 e=O("4s");6(t.28!=14){e.1e=t.28};4 f=H(q).24;21(4 i=0;i<f.1c;i++){4 g=f[i];4 h;6(g.4t.2p()=="3K"){h=O("12",{1e:y.3K});4 k=O("2l",{1e:y.4f},g.34);h.1s(k);4 l=g.24;4 m=O("4s");21(4 j=0;j<l.1c;j++){4 n=T(l[j]);m.1s(n)};h.1s(m)}1d{h=T(g)};e.1s(h)};d.1s(e);15 d};4 V=9(a){4 b=L("1l");6(a){6(a==-1){$("#"+b).1m({1u:"3s",4p:"3s"})}1d{$("#"+b).1m("1u",a+"2N")};15 14};4 c;4 d=H(q).1K.1c;6(d>t.1X||t.1X){4 e=$("#"+b+" 12:6D");4 f=2w(e.1m("5g-6E"))+2w(e.1m("5g-1O"));6(t.3C===0){$("#"+b).1m({5h:\'2x\',23:\'3R\'});t.3C=3i.6F(e.1u());$("#"+b).1m({5h:\'1U\'});6(!A||t.1v===11){$("#"+b).1m({23:\'2z\'})}};c=((t.3C+f)*3i.5i(t.1X,d))+3}1d 6(A){c=$("#"+q).1u()};15 c};4 W=9(){4 j=L("1l");$("#"+j).18("1Y",9(e){6(1k===11)15 14;e.1V();e.2m();6(A){3S()}});$("#"+j+" 12."+y.1q).18("1Y",9(e){6(e.5j.4t.2p()!=="2y"){2A(1b)}});$("#"+j+" 12."+y.1q).18("2t",9(e){6(1k===11)15 14;3d=$("#"+j+" 12."+y.19);3c=1b;e.1V();e.2m();6(t.1v===11){6(e.5j.4t.2p()==="2y"){2i=11}};6(A===11){6(1Z){6(C===11){$(1b).1t(y.19);4 a=$("#"+j+" 12."+y.19);4 b=I(1b);6(a.1c>1){4 c=$("#"+j+" 12."+z.12);4 d=I(a[0]);4 f=I(a[1]);6(b>f){d=(b);f=f+1};21(4 i=3i.5i(d,f);i<=3i.6G(d,f);i++){4 g=c[i];6($(g).3T(y.1q)){$(g).1t(y.19)}}}}1d 6(2i===11){$(1b).6H(y.19);6(t.1v===11){4 h=1b.4u[0];h.2a=!h.2a}}1d{$("#"+j+" 12."+y.19).1I(y.19);$("#"+j+" 2y:3h").1M("2a",14);$(1b).1t(y.19);6(t.1v===11){1b.4u[0].2a=11}}}1d{$("#"+j+" 12."+y.19).1I(y.19);$(1b).1t(y.19)}}1d{$("#"+j+" 12."+y.19).1I(y.19);$(1b).1t(y.19)}});$("#"+j+" 12."+y.1q).18("3j",9(e){6(1k===11)15 14;e.1V();e.2m();6(3c!=1g){6(1Z){$(1b).1t(y.19);6(t.1v===11){1b.4u[0].2a=11}}}});$("#"+j+" 12."+y.1q).18("2s",9(e){6(1k===11)15 14;$(1b).1t(y.35)});$("#"+j+" 12."+y.1q).18("2J",9(e){6(1k===11)15 14;$("#"+j+" 12."+y.35).1I(y.35)});$("#"+j+" 12."+y.1q).18("2u",9(e){6(1k===11)15 14;e.1V();e.2m();6(t.1v===11){2i=14};4 a=$("#"+j+" 12."+y.19).1c;2L=(3d.1c!=a||a==0)?11:14;3k();3l();3S();3c=1g});6(t.48==14){$("#"+j+" 12."+z.12).18("1Y",9(e){6(1k===11)15 14;2B(1b,"1Y")});$("#"+j+" 12."+z.12).18("3j",9(e){6(1k===11)15 14;2B(1b,"3j")});$("#"+j+" 12."+z.12).18("2s",9(e){6(1k===11)15 14;2B(1b,"2s")});$("#"+j+" 12."+z.12).18("2J",9(e){6(1k===11)15 14;2B(1b,"2J")});$("#"+j+" 12."+z.12).18("2t",9(e){6(1k===11)15 14;2B(1b,"2t")});$("#"+j+" 12."+z.12).18("2u",9(e){6(1k===11)15 14;2B(1b,"2u")})}};4 X=9(){4 a=L("1l");$("#"+a).1x("1Y");$("#"+a+" 12."+y.1q).1x("3j");$("#"+a+" 12."+y.1q).1x("1Y");$("#"+a+" 12."+y.1q).1x("2s");$("#"+a+" 12."+y.1q).1x("2J");$("#"+a+" 12."+y.1q).1x("2t");$("#"+a+" 12."+y.1q).1x("2u")};4 Y=9(a,b,c){$("#"+a).1x(b,c);$("#"+a).4v(b);$("#"+a).18(b,c)};4 Z=9(){4 a=L("1S");4 b=L("2h");4 c=L("1l");$("#"+a).18(t.2q,9(e){6(1k===11)15 14;1P(t.2q);e.1V();e.2m();3U(e)});$("#"+a).18("2S",9(e){4 k=e.6I;6(!3a&&(k==4j||k==4g||k==B||k==4h||k==4i||(k>=3b&&!A))){3U(e);6(k>=3b){4w()}1d{e.1V();e.6J()}}});$("#"+a).18("32",4x);$("#"+a).18("2I",4y);$("#"+b).18("2I",9(e){Y(a,"32",4x)});W();$("#"+a).18("49",5k);$("#"+a).18("4a",5l);$("#"+a).18("3j",5m);$("#"+a).18("6K",5n);$("#"+a).18("2t",5o);$("#"+a).18("2u",5p)};4 4x=9(e){1P("32")};4 4y=9(e){1P("2I")};4 3V=9(){4 a=L("1S");4 b=L("1l");6(A===11&&t.1v===14){$("#"+a+" ."+y.33).3m();$("#"+b).1m({23:\'3R\',2b:\'4N\'})}1d{6(t.1v===14){1Z=14};$("#"+a+" ."+y.33).2C();$("#"+b).1m({23:\'2z\',2b:\'3t\'});4 c=$("#"+b+" 12."+y.19)[0];$("#"+b+" 12."+y.19).1I(y.19);4 d=I($(c).1t(y.19));22(d)};V(V())};4 4z=9(){4 a=L("1S");4 b=(1k==11)?t.3F:1;6(1k===11){$("#"+a).1t(y.3L)}1d{$("#"+a).1I(y.3L)}};4 5q=9(){4 a=L("2h");6(t.2r=="11"){$("#"+a).18("2T",5r)};3V();4z()};4 59=9(){4 a=Q();4 b=R();a.1s(b);4 c=S();a.1s(c);4 d=U();a.1s(d);$("#"+q).5d(a);P();5q();Z();4 e=L("1l");6(t.2e!=\'\'){$("#"+e).2e(t.2e)};6(t.2f!=\'\'){$("#"+e).2f(t.2f)};6(1y t.18.3v=="9"){t.18.3v.25(u,1A)}};4 4A=9(b){4 c=L("1l");$("#"+c+" 12."+z.12).1I(y.19);6(t.1v===11){$("#"+c+" 12."+z.12+" 2y.3h").1M("2a",14)};6(E(b)===11){21(4 i=0;i<b.1c;i++){4B(b[i])}}1d{4B(b)};9 4B(a){$($("#"+c+" 12."+z.12)[a]).1t(y.19);6(t.1v===11){$($("#"+c+" 12."+z.12)[a]).3n("2y.3h").1M("2a","2a")}}};4 4C=9(a,b){4 c=L("1l");4 d=a||$("#"+c+" 12."+y.19);21(4 i=0;i<d.1c;i++){4 e=(b===11)?d[i]:I(d[i]);H(q).1K[e].19="19"};22(d)};4 3k=9(){4 a=L("1l");4 b=$("#"+a+" 12."+y.19);6(1Z&&(C||2i)||2L){H(q).1n=-1};4 c;6(b.1c==0){c=-1}1d 6(b.1c>1){4C(b)}1d{c=I($("#"+a+" 12."+y.19))};6((H(q).1n!=c||2L)&&b.1c<=1){2L=14;4 e=3o("2H");H(q).1n=c;22(c);6(1y t.18.2H=="9"){4 d=2k();t.18.2H(d.1a,d.1L)};$("#"+q).4v("2H")}};4 22=9(a,b){6(a!==1B){4 c,1f,2D;6(a==-1){c=-1;1f="";2D="";2E(-1)}1d{6(1y a!="52"){4 d=H(q).1K[a];H(q).1n=a;c=a;1f=N(d);2D=(a>=0)?H(q).1K[a].1p:"";2E(1B,1f);1f=1f.1f}1d{c=(b&&b.1o)||H(q).1n;1f=(b&&b.1f)||H(q).1f;2D=(b&&b.1p)||H(q).1K[H(q).1n].1p||"";2E(c)}};1w("1n",c);1w("1f",1f);1w("2D",2D);1w("24",H(q).24);1w("5a",2k());1w("5b",$("#"+q+" 1T:19"))}};4 3o=9(a){4 b={2U:14,2V:14,2n:14};4 c=$("#"+q);2M{6(c.1M("18"+a)!==1g){b.2n=11;b.2U=11}}2O(e){}4 d;6(1y $.5s=="9"){d=$.5s(c[0],"4D")}1d{d=c.1a("4D")};6(d&&d[a]){b.2n=11;b.2V=11};15 b};4 3S=9(){3l();$("5t").18("1Y",2A);$(3e).18("2S",4E);$(3e).18("2T",4F)};4 3l=9(){$("5t").1x("1Y",2A);$(3e).1x("2S",4E);$(3e).1x("2T",4F)};4 5r=9(e){6(e.2W<3b&&e.2W!=4X&&e.2W!=4Y){15 14};4 a=L("1l");4 b=L("2h");4 c=H(b).1f;6(c.1c==0){$("#"+a+" 12:2x").2C();V(V())}1d{$("#"+a+" 12").3m();4 d=$("#"+a+" 12:45(\'"+c+"\')").2C();6($("#"+a+" 12:1U").1c<=t.1X){V(-1)};6(d.1c>0&&!A||!1Z){$("#"+a+" ."+y.19).1I(y.19);$(d[0]).1t(y.19)}};6(!A){3p()}};4 4w=9(){6(t.2r=="11"){4 a=L("1S");4 b=L("2h");6($("#"+b+":2x").1c>0&&2i==14){$("#"+b+":2x").2C().6L("");Y(a,"2I",4y);H(b).32()}}};4 5u=9(){4 a=L("2h");6($("#"+a+":1U").1c>0){$("#"+a+":1U").3m();H(a).2I()}};4 4E=9(a){4 b=L("2h");4 c=L("1l");26(a.2W){1i B:1i 4i:a.1V();a.2m();5v();1j;1i 4g:1i 4h:a.1V();a.2m();5w();1j;1i 4W:1i 4j:a.1V();a.2m();2A();4 d=$("#"+c+" 12."+y.19).1c;2L=(3d.1c!=d||d==0)?11:14;3k();3l();3c=1g;1j;1i 4k:C=11;1j;1i 4l:2i=11;1j;2P:6(a.2W>=3b&&A===14){4w()};1j};6(1k===11)15 14;1P("2S")};4 4F=9(a){26(a.2W){1i 4k:C=14;1j;1i 4l:2i=14;1j};6(1k===11)15 14;1P("2T")};4 5k=9(a){6(1k===11)15 14;1P("49")};4 5l=9(a){6(1k===11)15 14;1P("4a")};4 5m=9(a){6(1k===11)15 14;a.1V();1P("2s")};4 5n=9(a){6(1k===11)15 14;a.1V();1P("2J")};4 5o=9(a){6(1k===11)15 14;1P("2t")};4 5p=9(a){6(1k===11)15 14;1P("2u")};4 3W=9(a,b){4 c={2U:14,2V:14,2n:14};6($(a).1M("18"+b)!=1B){c.2n=11;c.2U=11};4 d=$(a).1a("4D");6(d&&d[b]){c.2n=11;c.2V=11};15 c};4 2B=9(a,b){6(t.48==14){4 c=H(q).1K[I(a)];6(3W(c,b).2n===11){6(3W(c,b).2U===11){c["18"+b]()};6(3W(c,b).2V===11){26(b){1i"2S":1i"2T":1j;2P:$(c).4v(b);1j}};15 14}}};4 1P=9(a){6(1y t.18[a]=="9"){t.18[a].25(1b,1A)};6(3o(a).2n===11){6(3o(a).2U===11){H(q)["18"+a]()}1d 6(3o(a).2V===11){26(a){1i"2S":1i"2T":1j;2P:$("#"+q).6M(a);1j}};15 14}};4 3X=9(a){4 b=L("1l");a=(a!==1B)?a:$("#"+b+" 12."+y.19);6(a.1c>0){4 c=2w(($(a).2b().1O));4 d=2w($("#"+b).1u());6(c>d){4 e=c+$("#"+b).3q()-(d/2);$("#"+b).5x({3q:e},5y)}}};4 5v=9(){4 b=L("1l");4 c=$("#"+b+" 12:1U."+z.12);4 d=$("#"+b+" 12:1U."+y.19);d=(d.1c==0)?c[0]:d;4 e=$("#"+b+" 12:1U."+z.12).1o(d);6((e<c.1c-1)){e=4G(e);6(e<c.1c){6(!C||!A||!1Z){$("#"+b+" ."+y.19).1I(y.19)};$(c[e]).1t(y.19);2E(e);6(A==11){3k()};3X($(c[e]))};6(!A){3p()}};9 4G(a){a=a+1;6(a>c.1c){15 a};6($(c[a]).3T(y.1q)===11){15 a};15 a=4G(a)}};4 5w=9(){4 b=L("1l");4 c=$("#"+b+" 12:1U."+y.19);4 d=$("#"+b+" 12:1U."+z.12);4 e=$("#"+b+" 12:1U."+z.12).1o(c[0]);6(e>=0){e=4H(e);6(e>=0){6(!C||!A||!1Z){$("#"+b+" ."+y.19).1I(y.19)};$(d[e]).1t(y.19);2E(e);6(A==11){3k()};6(2w(($(d[e]).2b().1O+$(d[e]).1u()))<=0){4 f=($("#"+b).3q()-$("#"+b).1u())-$(d[e]).1u();$("#"+b).5x({3q:f},5y)}};6(!A){3p()}};9 4H(a){a=a-1;6(a<0){15 a};6($(d[a]).3T(y.1q)===11){15 a};15 a=4H(a)}};4 3p=9(){4 a=L("1S");4 b=L("1l");4 c=$("#"+a).3Y();4 d=$("#"+a).1u();4 e=$(4m).1u();4 f=$(4m).3q();4 g=$("#"+b).1u();4 h=$("#"+a).1u();4 i=t.3E.2p();6(t.31==11){e=$("#"+b).5z(\'.5A\').1u();c.1O=$("#"+a).3Y().1O-$("#"+b).5z(\'.5A\').3Y().1O}6(((e+f)<3i.6N(g+d+c.1O)||i==\'6O\')&&i!=\'6P\'){h=g;$("#"+b).1m({1O:"-"+h+"2N",23:\'3R\',1J:t.1J});6(t.1F=="11"){$("#"+a).1I("2R 2v").1t("3Z")};4 h=$("#"+b).3Y().1O;6(h<-10){$("#"+b).1m({1O:(2w($("#"+b).1m("1O"))-h+20+f)+"2N",1J:t.1J});6(t.1F=="11"){$("#"+a).1I("3Z 2v").1t("2R")}}}1d{$("#"+b).1m({1O:h+"2N",1J:t.1J});6(t.1F=="11"){$("#"+a).1I("2R 3Z").1t("2v")}};6(4Z){6(F()<=7){$(\'2Q.5e\').1m("1J",t.1J-10);$("#"+a).1m("1J",t.1J+5)}}};4 3U=9(e){6(1k===11)15 14;4 a=L("1S");4 b=L("1l");6(!3a){3a=11;6(1E.3u!=\'\'){$("#"+1E.3u).1m({23:"2z"})};1E.3u=b;$("#"+b+" 12:2x").2C();3p();4 c=t.3D;6(c==""||c=="2z"){$("#"+b).1m({23:"3R"});3X();6(1y t.18.2G=="9"){4 d=2k();t.18.2G(d.1a,d.1L)}}1d{$("#"+b)[c]("6Q",9(){3X();6(1y t.18.2G=="9"){4 d=2k();t.18.2G(d.1a,d.1L)}})};3S()}1d{6(t.2q!==\'2s\'){2A()}}};4 2A=9(e){3a=14;4 a=L("1S");4 b=L("1l");6(A===14||t.1v===11){$("#"+b).1m({23:"2z"});6(t.1F=="11"){$("#"+a).1I("2v 3Z").1t("2R")}};3l();6(1y t.18.3I=="9"){4 d=2k();t.18.3I(d.1a,d.1L)};5u();V(V());$("#"+b).1m({1J:1});2E(H(q).1n)};4 58=9(){2M{36=$.2Y(11,{},H(q));21(4 i 3P 36){6(1y 36[i]!="9"){u[i]=36[i]}}}2O(e){};u.2D=(H(q).1n>=0)?H(q).1K[H(q).1n].1p:"";u.41=1E.41.2o;u.42=1E.42};4 4I=9(a){6(a!=1g&&1y a!="1B"){4 b=L("1l");4 c=N(a);4 d=$("#"+b+" 12."+z.12+":4J("+(a.1o)+")");15{1a:c,1L:d,1T:a,1o:a.1o}};15 1g};4 2k=9(){4 a=L("1l");4 b=H(q);4 c,1L,1T,1o;6(b.1n==-1){c=1g;1L=1g;1T=1g;1o=-1}1d{1L=$("#"+a+" 12."+y.19);6(1L.1c>1){4 d=[],4K=[],6R=[];21(4 i=0;i<1L.1c;i++){4 e=I(1L[i]);d.5B(e);4K.5B(b.1K[e])};c=d;1T=4K;1o=d}1d{1T=b.1K[b.1n];c=N(1T);1o=b.1n}};15{1a:c,1L:1L,1o:1o,1T:1T}};4 2E=9(a,b){4 c=L("4c");4 d={};6(a==-1){d.1p="&6S;";d.1e="";d.1h="";d.1D=""}1d 6(1y a!="1B"){4 e=H(q).1K[a];d=N(e)}1d{d=b};$("#"+c).3n("."+y.34).4L(d.1p);H(c).1e=y.3J+" "+d.1e;6(d.1h!=""){$("#"+c).3n("."+y.1h).4L(d.1h).2C()}1d{$("#"+c).3n("."+y.1h).4L("").3m()};4 f=$("#"+c).3n("3Q");6(f.1c>0){$(f).1G()};6(d.1D!=""&&t.30){f=O("3Q",{4r:d.1D});$("#"+c).2f(f);6(d.1z!=""){f.1e=d.1z+" "};6(d.1h==""){f.1e=f.1e+z.3M}}};4 1w=9(p,v){u[p]=v};4 4M=9(a,b,i){4 c=L("1l");4 d=14;26(a){1i"29":4 e=T(b||H(q).1K[i]);4 f;6(1A.1c==3){f=i}1d{f=$("#"+c+" 12."+z.12).1c-1};6(f<0||!f){$("#"+c+" 4s").2e(e)}1d{4 g=$("#"+c+" 12."+z.12)[f];$(g).6T(e)};X();W();6(t.18.29!=1g){t.18.29.25(1b,1A)};1j;1i"1G":d=$($("#"+c+" 12."+z.12)[i]).3T(y.19);$("#"+c+" 12."+z.12+":4J("+i+")").1G();4 h=$("#"+c+" 12."+y.1q);6(d==11){6(h.1c>0){$(h[0]).1t(y.19);4 j=$("#"+c+" 12."+z.12).1o(h[0]);22(j)}};6(h.1c==0){22(-1)};6($("#"+c+" 12."+z.12).1c<t.1X&&!A){V(-1)};6(t.18.1G!=1g){t.18.1G.25(1b,1A)};1j}};1b.6U=9(){4 a=1A[0];53.50.6V.51(1A);26(a){1i"29":u.29.25(1b,1A);1j;1i"1G":u.1G.25(1b,1A);1j;2P:2M{H(q)[a].25(H(q),1A)}2O(e){};1j}};1b.29=9(){4 a,1f,1r,1D,1h;4 b=1A[0];6(1y b=="6W"){a=b;1f=a;2F=3O 4n(a,1f)}1d{a=b.1p||\'\';1f=b.1f||a;1r=b.1r||\'\';1D=b.1D||\'\';1h=b.1h||\'\';2F=3O 4n(a,1f);$(2F).1a("1h",1h);$(2F).1a("1D",1D);$(2F).1a("1r",1r)};1A[0]=2F;H(q).29.25(H(q),1A);1w("24",H(q)["24"]);1w("1c",H(q).1c);4M("29",2F,1A[1])};1b.1G=9(i){H(q).1G(i);1w("24",H(q)["24"]);1w("1c",H(q).1c);4M("1G",1B,i)};1b.5C=9(a,b){6(1y a=="1B"||1y b=="1B")15 14;a=a.2j();2M{1w(a,b)}2O(e){};26(a){1i"2c":H(q)[a]=b;6(b==0){H(q).1R=14};A=(H(q).2c>1||H(q).1R==11)?11:14;3V();1j;1i"1R":H(q)[a]=b;A=(H(q).2c>1||H(q).1R==11)?11:14;1Z=H(q).1R;3V();1w(a,b);1j;1i"2K":H(q)[a]=b;1k=b;4z();1j;1i"1n":1i"1f":6(a=="1n"&&E(b)===11){$("#"+q+" 1T").1M("19",14);4C(b,11);4A(b)}1d{H(q)[a]=b;4A(H(q).1n);22(H(q).1n)};1j;1i"1c":4 c=L("1l");6(b<H(q).1c){H(q)[a]=b;6(b==0){$("#"+c+" 12."+z.12).1G();22(-1)}1d{$("#"+c+" 12."+z.12+":6X("+(b-1)+")").1G();6($("#"+c+" 12."+y.19).1c==0){$("#"+c+" 12."+y.1q+":4J(0)").1t(y.19)}};1w(a,b);1w("24",H(q)["24"])};1j;1i"1H":1j;2P:2M{H(q)[a]=b;1w(a,b)}2O(e){};1j}};1b.6Y=9(a){15 u[a]||H(q)[a]};1b.1U=9(a){4 b=L("1S");6(a===11){$("#"+b).2C()}1d 6(a===14){$("#"+b).3m()}1d{15($("#"+b).1m("23")=="2z")?14:11}};1b.43=9(v){1E.43(v)};1b.3I=9(){2A()};1b.2G=9(){3U()};1b.5D=9(r){6(1y r=="1B"||r==0){15 14};t.1X=r;V(V())};1b.1X=1b.5D;1b.18=9(a,b){$("#"+q).18(a,b)};1b.1x=9(a,b){$("#"+q).1x(a,b)};1b.6Z=1b.18;1b.70=9(){15 2k()};1b.5E=9(){4 a=H(q).5E.25(H(q),1A);15 4I(a)};1b.5F=9(){4 a=H(q).5F.25(H(q),1A);15 4I(a)};1b.71=9(a){1b.5C("1f",a)};1b.72=9(){4 a=L("4b");4 b=L("1S");$("#"+b+", #"+b+" *").1x();H(q).3g=H(b).3g;$("#"+b).1G();$("#"+q).73().74($("#"+q));$("#"+q).1a("1W",1g)};1b.4o=9(){22(H(q).1n)};K()};$.1Q.2Y({3w:9(b){15 1b.75(9(){6(!$(1b).1a(\'1W\')){4 a=3O 1W(1b,b);$(1b).1a(\'1W\',a)}})}});$.1Q.2o=$.1Q.3w})(76);',62,441,'||||var||if|||function||||||||||||||||||||||||||||||||||||||||||||||||||||||true|li||false|return|||on|selected|data|this|length|else|className|value|null|description|case|break|isDisabled|postChildID|css|selectedIndex|index|text|enabled|title|appendChild|addClass|height|enableCheckbox|cy|off|typeof|imagecss|arguments|undefined|style|image|msBeautify|roundedCorner|remove|id|removeClass|zIndex|options|ui|prop|byJson|top|cn|fn|multiple|postID|option|visible|preventDefault|dd|visibleRows|click|isMultiple||for|bW|display|children|apply|switch||useSprite|add|checked|position|size|jsonTitle|append|prepend|reverseMode|postTitleTextID|controlHolded|toString|cw|span|stopPropagation|hasEvent|msDropdown|toLowerCase|event|enableAutoFilter|mouseover|mousedown|mouseup|borderRadiusTp|parseInt|hidden|input|none|ct|cm|show|selectedText|cx|opt|open|change|blur|mouseout|disabled|forcedTrigger|try|px|catch|default|div|borderRadius|keydown|keyup|byElement|byJQuery|keyCode|ddOutOfVision|extend|width|showIcon|isModal|focus|ddTitle|label|hover|orginial||||isOpen|ALPHABETS_START|lastTarget|oldSelected|document|ua|tabIndex|checkbox|Math|mouseenter|bV|bZ|hide|find|bX|cr|scrollTop|counter|auto|absolute|oldDiv|create|msDropDown|expr|toUpperCase|indexOf|name|mainCSS|rowHeight|animStyle|openDirection|disabledOpacity|childWidth|checkboxNameSuffix|close|ddTitleText|optgroup|disabledAll|fnone|cacheElement|new|in|img|block|bY|hasClass|cs|bP|cl|co|offset|borderRadiusBtm||version|author|debug|dropdown|Contains|||disabledOptionEvents|dblclick|mousemove|postElementHolder|postTitleID|ddChild|divider|optgroupTitle|UP_ARROW|LEFT_ARROW|RIGHT_ARROW|ENTER|SHIFT|CONTROL|window|Option|refresh|overflow|selectedClass|src|ul|nodeName|childNodes|trigger|cb|bN|bO|bQ|bT|updateNow|bU|events|cd|ce|getNext|getPrev|cv|eq|op|html|cz|relative|0px|select|createPseudo|arrow|borderTop|noBorderTop|ddChildMore|shadow|ESCAPE|BACKSPACE|DELETE|isIE|prototype|call|object|Array|showicon|usesprite|childwidth|eval|cu|bS|uiData|selectedOptions|cssText|after|ddcommon|type|padding|visibility|min|target|cf|cg|ch|ci|cj|ck|bR|ca|_data|body|cc|cp|cq|animate|500|parents|modalScrollable|push|set|showRows|namedItem|item|Marghoob|Suleman|attr|bind|unbind|250|120|9999|slideDown|_mscheck|_msddHolder|_msdd|_title|_titleText|_child|ddArrow|arrowoff|ddlabel|_msddli_|border|isCreated|navigator|userAgent|match|msie|Object|MSIE|substring|maincss|visiblerows|animstyle|opendirection|jsontitle|disabledopacity|enablecheckbox|checkboxnamesuffix|reversemode|roundedcorner|enableautofilter|getElementById|msdropdown|inArray|setAttribute|throw|There|is|an|error|json|msdrpdd|element|test|createElement|innerHTML|appendTo|outerWidth|autocomplete|clear|ddchild_|first|bottom|ceil|max|toggleClass|which|stopImmediatePropagation|mouseleave|val|triggerHandler|floor|alwaysup|alwaysdown|fast|ind|nbsp|before|act|shift|string|gt|get|addMyEvent|getData|setIndexByValue|destroy|parent|replaceWith|each|jQuery'.split('|'),0,{}));

/** File: application/3.0.2/assets/desktop/js/main.js **/

$(document).ready(function (e) {

});

/** File: application/3.0.2/assets/desktop/js/jquery.slimscroll.min.js **/

/*

 RollBar - jQuery ScrollBar Plugin
 -----------------------------------------------

 @author   flGravity
 @created  4/4/12
 @version  1.5
 @site     http://codecanyon.net/user/flGravity

 */

;
(function ($) {
    function RollBar(c, s) {
        this.container = $(c);
        this.settings = s;
        this.timer = 0;
        this.before = {v: 0, h: 0};
        this.touch = {};
        this.pressed = 0;
        this.vslider = $("<div/>", {"class": "rollbar-handle"});
        this.vpath = $("<div/>", {"class": "rollbar-path-vertical"});
        this.hslider = $("<div/>", {"class": "rollbar-handle"});
        this.hpath = $("<div/>", {"class": "rollbar-path-horizontal"});
        this.sliders = this.vslider.add(this.hslider);
        this.container.css({overflow: "hidden", position: "relative"}).contents().filter(this.settings.contentFilter).wrapAll('<div class="rollbar-content"></div>');
        this.content = this.container.children(".rollbar-content").css({position: "relative", top: 0, left: 0, height: "auto", overflow: "hidden"});
        if (this.settings.scroll == "horizontal") {
            this.container.prepend(this.hpath.append(this.hslider))
        } else {
            if (this.settings.scroll == "vertical") {
                this.container.prepend(this.vpath.append(this.vslider))
            } else {
                this.container.prepend(this.vpath.append(this.vslider), this.hpath.append(this.hslider))
            }
        }
        this.vpath.add(this.hpath).css({"z-index": this.settings.zIndex, display: "none"});
        this.vslider.css({height: this.settings.sliderSize, opacity: this.settings.sliderOpacity});
        this.hslider.css({width: this.settings.sliderSize, opacity: this.settings.sliderOpacity});
        if (this.settings.sliderOpacity) {
            this.sliders.hover(this.fixFn(function () {
                this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, 1)
            }), this.fixFn(function () {
                if (!this.pressed) {
                    this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, this.settings.sliderOpacity)
                }
            }))
        }
        this.init();
        this.pathSize();
        this.bindEvent($(window), "load", function () {
            setTimeout(this.fixFn(this.checkScroll), 10)
        });
        if (this.settings.lazyCheckScroll > 0) {
            setInterval(this.fixFn(function () {
                this.checkScroll();
                this.pathSize()
            }), this.settings.lazyCheckScroll)
        }
    }

    RollBar.prototype.checkScroll = function () {
        this.vtrack = this.vpath.height() - this.vslider.height();
        this.htrack = this.hpath.width() - this.hslider.width();
        this.vdiff = this.content.height() - this.container.height();
        this.hdiff = this.content.width() - this.container.width();
        if (!this.settings.autoHide) {
            return
        }
        if (this.vdiff > 0) {
            this.vpath.fadeIn(this.settings.autoHideTime)
        } else {
            this.vpath.fadeOut(this.settings.autoHideTime)
        }
        if (this.hdiff > 0) {
            this.hpath.fadeIn(this.settings.autoHideTime)
        } else {
            this.hpath.fadeOut(this.settings.autoHideTime)
        }
    };
    RollBar.prototype.pathSize = function () {
        var pad = parseInt(this.settings.pathPadding, 10);
        this.vpath.css({top: pad + "px", height: this.container.height() - 2 * pad + "px"});
        this.hpath.css({left: pad + "px", width: this.container.width() - 2 * pad + "px"})
    };
    RollBar.prototype.scroll = function (v, h, e) {
        var hs = 0;
        var vs = 0;
        if (v < 0) {
            v = 0
        }
        if (v > this.vtrack) {
            v = this.vtrack
        }
        this.vslider.css("top", v + "px");
        if (h < 0) {
            h = 0
        }
        if (h > this.htrack) {
            h = this.htrack
        }
        this.hslider.css("left", h + "px");
        if (this.vdiff > 0) {
            vs = v / this.vtrack;
            this.content.css("top", Math.round(-this.vdiff * vs));
            if (e && (v && v != this.vtrack)) {
                e.stopPropagation();
                e.preventDefault()
            }
        }
        if (this.hdiff > 0) {
            hs = h / this.htrack;
            this.content.css("left", Math.round(-this.hdiff * hs));
            if (e && (h && h != this.htrack)) {
                e.stopPropagation();
                e.preventDefault()
            }
        }
        if (this.before.v != vs || this.before.h != hs) {
            if (typeof this.settings.onscroll == "function") {
                this.settings.onscroll.call(this.container.get(0), vs, hs)
            }
            this.before.v = vs;
            this.before.h = hs
        }
    };
    RollBar.prototype.easeScroll = function (v, h) {
        var n = 0;
        var steps = Math.floor(this.settings.scrollTime / this.settings.scrollInterval);
        var vs = this.vslider.position().top;
        var hs = this.hslider.position().left;
        var easing = $.easing[this.settings.scrollEasing] || $.easing.linear;
        this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, 1);
        window.clearInterval(this.timer);
        this.timer = window.setInterval(this.fixFn(function () {
            this.scroll(vs + easing(n / steps, n, 0, 1, steps) * v, hs + easing(n / steps, n, 0, 1, steps) * h);
            if (++n > steps) {
                window.clearInterval(this.timer);
                this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, this.settings.sliderOpacity)
            }
        }), this.settings.scrollInterval)
    };
    RollBar.prototype.fixFn = function (f, s) {
        var scope = this;
        return function () {
            f.apply(s || scope, Array.prototype.slice.call(arguments))
        }
    };
    RollBar.prototype.bindEvent = function (t, e, f, s) {
        return t.bind(e, this.fixFn(f, s))
    };
    RollBar.prototype.init = function () {
        var document = $(window.document);
        this.bindEvent(this.sliders, "mousedown", function (e) {
            this.pressed = (e.target === this.vslider.get(0)) ? 1 : 2;
            var hclick = e.pageX;
            var vclick = e.pageY;
            var vtop = this.vslider.position().top;
            var hleft = this.hslider.position().left;
            this.bindEvent(document, "mousemove", function (e) {
                if (this.pressed == 1) {
                    this.scroll(vtop + (e.pageY - vclick), hleft)
                } else {
                    this.scroll(vtop, hleft + (e.pageX - hclick))
                }
            });
            this.bindEvent(document, "selectstart", function (e) {
                e.preventDefault()
            })
        });
        this.bindEvent(document, "mouseup", function (e) {
            if (this.pressed == 1 && e.target !== this.vslider.get(0)) {
                this.vslider.fadeTo(this.settings.sliderOpacityTime, this.settings.sliderOpacity)
            } else {
                if (this.pressed == 2 && e.target !== this.hslider.get(0)) {
                    this.hslider.fadeTo(this.settings.sliderOpacityTime, this.settings.sliderOpacity)
                }
            }
            this.pressed = 0;
            document.unbind("mousemove");
            document.unbind("selectstart")
        });
        this.bindEvent(this.container, "touchstart", function (e) {
            var event = e.originalEvent;
            var touch = event.changedTouches[0];
            this.touch.sx = touch.pageX;
            this.touch.sy = touch.pageY;
            this.touch.sv = this.vslider.position().top;
            this.touch.sh = this.hslider.position().left;
            this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, 1);
            if (this.settings.blockGlobalScroll && (this.vdiff || this.hdiff)) {
                event.stopPropagation()
            }
        });
        this.bindEvent(this.container, "touchmove", function (e) {
            var event = e.originalEvent;
            var touch = event.targetTouches[0];
            this.scroll(this.touch.sv + (this.touch.sy - touch.pageY) * this.settings.touchSpeed, this.touch.sh + (this.touch.sx - touch.pageX) * this.settings.touchSpeed, e);
            if (this.settings.blockGlobalScroll && (this.vdiff || this.hdiff)) {
                event.preventDefault();
                event.stopPropagation()
            }
        });
        this.bindEvent(this.container, "touchend touchcancel", function (e) {
            var event = e.originalEvent;
            var touch = event.changedTouches[0];
            this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, this.settings.sliderOpacity);
            if (this.settings.blockGlobalScroll && (this.vdiff || this.hdiff)) {
                event.stopPropagation()
            }
        });
        var vtrack = this.vpath.height(), htrack = this.hpath.width();
        this.bindEvent($(window), "resize", function () {
            this.pathSize();
            this.checkScroll();
            if (this.vdiff <= 0) {
                this.content.css("top", 0)
            }
            if (this.hdiff <= 0) {
                this.content.css("left", 0)
            }
            this.scroll(Math.round(parseInt(this.vslider.css("top"), 10) * this.vpath.height() / vtrack), Math.round(parseInt(this.hslider.css("left"), 10) * this.hpath.width() / htrack));
            vtrack = this.vpath.height();
            htrack = this.hpath.width()
        });
        this.bindEvent(this.container, "mousewheel", function (e, delta, deltaX, deltaY) {
            var targetNode = e.target.nodeName;
            if (targetNode == "TEXTAREA" || (targetNode == "SELECT" || targetNode == "OPTION")) {
                e.stopPropagation();
                return
            }
            this.scroll(this.vslider.position().top - this.settings.wheelSpeed * deltaY, this.hslider.position().left + this.settings.wheelSpeed * deltaX, e);
            this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, 1);
            window.clearTimeout(this.timer);
            this.timer = window.setTimeout(this.fixFn(function () {
                this.sliders.stop().fadeTo(this.settings.sliderOpacityTime, this.settings.sliderOpacity)
            }), this.settings.sliderOpacityDelay);
            if (this.settings.blockGlobalScroll && (this.vdiff || this.hdiff)) {
                e.preventDefault();
                e.stopPropagation()
            }
        });
        this.bindEvent(document, "keydown", function (e) {
            var hkey = 0, vkey = 0;
            vkey = (e.keyCode == 38) ? -this.settings.keyScroll : vkey;
            vkey = (e.keyCode == 40) ? this.settings.keyScroll : vkey;
            hkey = (e.keyCode == 37) ? -this.settings.keyScroll : hkey;
            hkey = (e.keyCode == 39) ? this.settings.keyScroll : hkey;
            if (vkey || hkey) {
                this.easeScroll(vkey, hkey)
            }
        });
        this.bindEvent(this.container, "dragstart", function (e) {
            e.preventDefault()
        });
        this.bindEvent(this.container, "rollbar", function (e, v, h, px) {
            e.stopPropagation();
            if (v === "reset") {
                this.container.find(".rollbar-content, .rollbar-handle").css({top: 0, left: 0});
                return
            }
            v = v || 0;
            h = h || 0;
            if (/^[-\d\.]+$/.test(v)) {
                v = parseFloat(v);
                if (Math.abs(v) <= 1 && !px) {
                    v *= this.vtrack
                } else {
                    v = v + v * (this.vtrack / this.vdiff - 1)
                }
            }
            if (/^[-\d\.]+$/.test(h)) {
                h = parseFloat(h);
                if (Math.abs(h) <= 1 && !px) {
                    h *= this.htrack
                } else {
                    h = h + h * (this.htrack / this.hdiff - 1)
                }
            }
            this.easeScroll(v, h)
        })
    };
    $.fn.rollbar = function (s) {
        var settings = {scroll: "both", autoHide: true, autoHideTime: "fast", lazyCheckScroll: 1000, blockGlobalScroll: false, contentFilter: "*", sliderSize: "30%", sliderOpacity: 0.5, sliderOpacityTime: 200, sliderOpacityDelay: 1000, wheelSpeed: 20, touchSpeed: 0.3, pathPadding: "20px", keyScroll: 100, scrollTime: 500, scrollInterval: 15, scrollEasing: "swing", zIndex: 100, onscroll: function () {
        }};
        $.extend(settings, s);
        return this.each(function () {
            new RollBar(this, settings)
        })
    }
})(jQuery);


/** File: application/3.0.2/assets/desktop/js/jquery.powertip.js **/

/*!
 PowerTip - v1.2.0 - 2013-04-03
 http://stevenbenner.github.com/jquery-powertip/
 Copyright (c) 2013 Steven Benner (http://stevenbenner.com/).
 Released under MIT license.
 https://raw.github.com/stevenbenner/jquery-powertip/master/LICENSE.txt
*/
(function(factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD. Register as an anonymous module.
		define(['jquery'], factory);
	} else {
		// Browser globals
		factory(jQuery);
	}
}(function($) {

	// useful private variables
	var $document = $(document),
		$window = $(window),
		$body = $('body');

	// constants
	var DATA_DISPLAYCONTROLLER = 'displayController',
		DATA_HASACTIVEHOVER = 'hasActiveHover',
		DATA_FORCEDOPEN = 'forcedOpen',
		DATA_HASMOUSEMOVE = 'hasMouseMove',
		DATA_MOUSEONTOTIP = 'mouseOnToPopup',
		DATA_ORIGINALTITLE = 'originalTitle',
		DATA_POWERTIP = 'powertip',
		DATA_POWERTIPJQ = 'powertipjq',
		DATA_POWERTIPTARGET = 'powertiptarget',
		RAD2DEG = 180 / Math.PI;

	/**
	 * Session data
	 * Private properties global to all powerTip instances
	 */
	var session = {
		isTipOpen: false,
		isFixedTipOpen: false,
		isClosing: false,
		tipOpenImminent: false,
		activeHover: null,
		currentX: 0,
		currentY: 0,
		previousX: 0,
		previousY: 0,
		desyncTimeout: null,
		mouseTrackingActive: false,
		delayInProgress: false,
		windowWidth: 0,
		windowHeight: 0,
		scrollTop: 0,
		scrollLeft: 0
	};

	/**
	 * Collision enumeration
	 * @enum {number}
	 */
	var Collision = {
		none: 0,
		top: 1,
		bottom: 2,
		left: 4,
		right: 8
	};

	/**
	 * Display hover tooltips on the matched elements.
	 * @param {(Object|string)} opts The options object to use for the plugin, or
	 *     the name of a method to invoke on the first matched element.
	 * @param {*=} [arg] Argument for an invoked method (optional).
	 * @return {jQuery} jQuery object for the matched selectors.
	 */
	$.fn.powerTip = function(opts, arg) {
		// don't do any work if there were no matched elements
		if (!this.length) {
			return this;
		}

		// handle api method calls on the plugin, e.g. powerTip('hide')
		if ($.type(opts) === 'string' && $.powerTip[opts]) {
			return $.powerTip[opts].call(this, this, arg);
		}

		// extend options and instantiate TooltipController
		var options = $.extend({}, $.fn.powerTip.defaults, opts),
			tipController = new TooltipController(options);

		// hook mouse and viewport dimension tracking
		initTracking();

		// setup the elements
		this.each(function elementSetup() {
			var $this = $(this),
				dataPowertip = $this.data(DATA_POWERTIP),
				dataElem = $this.data(DATA_POWERTIPJQ),
				dataTarget = $this.data(DATA_POWERTIPTARGET),
				title;

			// handle repeated powerTip calls on the same element by destroying the
			// original instance hooked to it and replacing it with this call
			if ($this.data(DATA_DISPLAYCONTROLLER)) {
				$.powerTip.destroy($this);
			}

			// attempt to use title attribute text if there is no data-powertip,
			// data-powertipjq or data-powertiptarget. If we do use the title
			// attribute, delete the attribute so the browser will not show it
			title = $this.attr('title');
			if (!dataPowertip && !dataTarget && !dataElem && title) {
				$this.data(DATA_POWERTIP, title);
				$this.data(DATA_ORIGINALTITLE, title);
				$this.removeAttr('title');
			}

			// create hover controllers for each element
			$this.data(
				DATA_DISPLAYCONTROLLER,
				new DisplayController($this, options, tipController)
			);
		});

		// attach events to matched elements if the manual options is not enabled
		if (!options.manual) {
			this.on({
				// mouse events
				'mouseenter.powertip': function elementMouseEnter(event) {
					$.powerTip.show(this, event);
				},
				'mouseleave.powertip': function elementMouseLeave() {
					$.powerTip.hide(this);
				},
				// keyboard events
				'focus.powertip': function elementFocus() {
					$.powerTip.show(this);
				},
				'blur.powertip': function elementBlur() {
					$.powerTip.hide(this, true);
				},
				'keydown.powertip': function elementKeyDown(event) {
					// close tooltip when the escape key is pressed
					if (event.keyCode === 27) {
						$.powerTip.hide(this, true);
					}
				}
			});
		}

		return this;
	};

	/**
	 * Default options for the powerTip plugin.
	 */
	$.fn.powerTip.defaults = {
		fadeInTime: 200,
		fadeOutTime: 100,
		followMouse: false,
		popupId: 'powerTip',
		intentSensitivity: 7,
		intentPollInterval: 100,
		closeDelay: 100,
		placement: 'n',
		smartPlacement: false,
		offset: 10,
		mouseOnToPopup: false,
		manual: false
	};

	/**
	 * Default smart placement priority lists.
	 * The first item in the array is the highest priority, the last is the lowest.
	 * The last item is also the default, which will be used if all previous options
	 * do not fit.
	 */
	$.fn.powerTip.smartPlacementLists = {
		n: ['n', 'ne', 'nw', 's'],
		e: ['e', 'ne', 'se', 'w', 'nw', 'sw', 'n', 's', 'e'],
		s: ['s', 'se', 'sw', 'n'],
		w: ['w', 'nw', 'sw', 'e', 'ne', 'se', 'n', 's', 'w'],
		nw: ['nw', 'w', 'sw', 'n', 's', 'se', 'nw'],
		ne: ['ne', 'e', 'se', 'n', 's', 'sw', 'ne'],
		sw: ['sw', 'w', 'nw', 's', 'n', 'ne', 'sw'],
		se: ['se', 'e', 'ne', 's', 'n', 'nw', 'se'],
		'nw-alt': ['nw-alt', 'n', 'ne-alt', 'sw-alt', 's', 'se-alt', 'w', 'e'],
		'ne-alt': ['ne-alt', 'n', 'nw-alt', 'se-alt', 's', 'sw-alt', 'e', 'w'],
		'sw-alt': ['sw-alt', 's', 'se-alt', 'nw-alt', 'n', 'ne-alt', 'w', 'e'],
		'se-alt': ['se-alt', 's', 'sw-alt', 'ne-alt', 'n', 'nw-alt', 'e', 'w']
	};

	/**
	 * Public API
	 */
	$.powerTip = {
		/**
		 * Attempts to show the tooltip for the specified element.
		 * @param {jQuery|Element} element The element to open the tooltip for.
		 * @param {jQuery.Event=} event jQuery event for hover intent and mouse
		 *     tracking (optional).
		 */
		show: function apiShowTip(element, event) {
			if (event) {
				trackMouse(event);
				session.previousX = event.pageX;
				session.previousY = event.pageY;
				$(element).data(DATA_DISPLAYCONTROLLER).show();
			} else {
				$(element).first().data(DATA_DISPLAYCONTROLLER).show(true, true);
			}
			return element;
		},

		/**
		 * Repositions the tooltip on the element.
		 * @param {jQuery|Element} element The element the tooltip is shown for.
		 */
		reposition: function apiResetPosition(element) {
			$(element).first().data(DATA_DISPLAYCONTROLLER).resetPosition();
			return element;
		},

		/**
		 * Attempts to close any open tooltips.
		 * @param {(jQuery|Element)=} element The element with the tooltip that
		 *     should be closed (optional).
		 * @param {boolean=} immediate Disable close delay (optional).
		 */
		hide: function apiCloseTip(element, immediate) {
			if (element) {
				$(element).first().data(DATA_DISPLAYCONTROLLER).hide(immediate);
			} else {
				if (session.activeHover) {
					session.activeHover.data(DATA_DISPLAYCONTROLLER).hide(true);
				}
			}
			return element;
		},

		/**
		 * Destroy and roll back any powerTip() instance on the specified element.
		 * @param {jQuery|Element} element The element with the powerTip instance.
		 */
		destroy: function apiDestroy(element) {
			$(element).off('.powertip').each(function destroy() {
				var $this = $(this),
					dataAttributes = [
						DATA_ORIGINALTITLE,
						DATA_DISPLAYCONTROLLER,
						DATA_HASACTIVEHOVER,
						DATA_FORCEDOPEN
					];

				if ($this.data(DATA_ORIGINALTITLE)) {
					$this.attr('title', $this.data(DATA_ORIGINALTITLE));
					dataAttributes.push(DATA_POWERTIP);
				}

				$this.removeData(dataAttributes);
			});
			return element;
		}
	};

	// API aliasing
	$.powerTip.showTip = $.powerTip.show;
	$.powerTip.closeTip = $.powerTip.hide;

	/**
	 * Creates a new CSSCoordinates object.
	 * @private
	 * @constructor
	 */
	function CSSCoordinates() {
		var me = this;

		// initialize object properties
		me.top = 'auto';
		me.left = 'auto';
		me.right = 'auto';
		me.bottom = 'auto';

		/**
		 * Set a property to a value.
		 * @private
		 * @param {string} property The name of the property.
		 * @param {number} value The value of the property.
		 */
		me.set = function(property, value) {
			if ($.isNumeric(value)) {
				me[property] = Math.round(value);
			}
		};
	}

	/**
	 * Creates a new tooltip display controller.
	 * @private
	 * @constructor
	 * @param {jQuery} element The element that this controller will handle.
	 * @param {Object} options Options object containing settings.
	 * @param {TooltipController} tipController The TooltipController object for
	 *     this instance.
	 */
	function DisplayController(element, options, tipController) {
		var hoverTimer = null;

		/**
		 * Begins the process of showing a tooltip.
		 * @private
		 * @param {boolean=} immediate Skip intent testing (optional).
		 * @param {boolean=} forceOpen Ignore cursor position and force tooltip to
		 *     open (optional).
		 */
		function openTooltip(immediate, forceOpen) {
			cancelTimer();
			if (!element.data(DATA_HASACTIVEHOVER)) {
				if (!immediate) {
					session.tipOpenImminent = true;
					hoverTimer = setTimeout(
						function intentDelay() {
							hoverTimer = null;
							checkForIntent();
						},
						options.intentPollInterval
					);
				} else {
					if (forceOpen) {
						element.data(DATA_FORCEDOPEN, true);
					}
					tipController.showTip(element);
				}
			}
		}

		/**
		 * Begins the process of closing a tooltip.
		 * @private
		 * @param {boolean=} disableDelay Disable close delay (optional).
		 */
		function closeTooltip(disableDelay) {
			cancelTimer();
			session.tipOpenImminent = false;
			if (element.data(DATA_HASACTIVEHOVER)) {
				element.data(DATA_FORCEDOPEN, false);
				if (!disableDelay) {
					session.delayInProgress = true;
					hoverTimer = setTimeout(
						function closeDelay() {
							hoverTimer = null;
							tipController.hideTip(element);
							session.delayInProgress = false;
						},
						options.closeDelay
					);
				} else {
					tipController.hideTip(element);
				}
			}
		}

		/**
		 * Checks mouse position to make sure that the user intended to hover on the
		 * specified element before showing the tooltip.
		 * @private
		 */
		function checkForIntent() {
			// calculate mouse position difference
			var xDifference = Math.abs(session.previousX - session.currentX),
				yDifference = Math.abs(session.previousY - session.currentY),
				totalDifference = xDifference + yDifference;

			// check if difference has passed the sensitivity threshold
			if (totalDifference < options.intentSensitivity) {
				tipController.showTip(element);
			} else {
				// try again
				session.previousX = session.currentX;
				session.previousY = session.currentY;
				openTooltip();
			}
		}

		/**
		 * Cancels active hover timer.
		 * @private
		 */
		function cancelTimer() {
			hoverTimer = clearTimeout(hoverTimer);
			session.delayInProgress = false;
		}

		/**
		 * Repositions the tooltip on this element.
		 * @private
		 */
		function repositionTooltip() {
			tipController.resetPosition(element);
		}

		// expose the methods
		this.show = openTooltip;
		this.hide = closeTooltip;
		this.cancel = cancelTimer;
		this.resetPosition = repositionTooltip;
	}

	/**
	 * Creates a new Placement Calculator.
	 * @private
	 * @constructor
	 */
	function PlacementCalculator() {
		/**
		 * Compute the CSS position to display a tooltip at the specified placement
		 * relative to the specified element.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 * @param {string} placement The placement for the tooltip.
		 * @param {number} tipWidth Width of the tooltip element in pixels.
		 * @param {number} tipHeight Height of the tooltip element in pixels.
		 * @param {number} offset Distance to offset tooltips in pixels.
		 * @return {CSSCoordinates} A CSSCoordinates object with the position.
		 */
		function computePlacementCoords(element, placement, tipWidth, tipHeight, offset) {
			var placementBase = placement.split('-')[0], // ignore 'alt' for corners
				coords = new CSSCoordinates(),
				position;

			if (isSvgElement(element)) {
				position = getSvgPlacement(element, placementBase);
			} else {
				position = getHtmlPlacement(element, placementBase);
			}

			// calculate the appropriate x and y position in the document
			switch (placement) {
			case 'n':
				coords.set('left', position.left - (tipWidth / 2));
				coords.set('bottom', session.windowHeight - position.top + offset);
				break;
			case 'e':
				coords.set('left', position.left + offset);
				coords.set('top', position.top - (tipHeight / 2));
				break;
			case 's':
				coords.set('left', position.left - (tipWidth / 2));
				coords.set('top', position.top + offset);
				break;
			case 'w':
				coords.set('top', position.top - (tipHeight / 2));
				coords.set('right', session.windowWidth - position.left + offset);
				break;
			case 'nw':
				coords.set('bottom', session.windowHeight - position.top + offset);
				coords.set('right', session.windowWidth - position.left - 20);
				break;
			case 'nw-alt':
				coords.set('left', position.left);
				coords.set('bottom', session.windowHeight - position.top + offset);
				break;
			case 'ne':
				coords.set('left', position.left - 20);
				coords.set('bottom', session.windowHeight - position.top + offset);
				break;
			case 'ne-alt':
				coords.set('bottom', session.windowHeight - position.top + offset);
				coords.set('right', session.windowWidth - position.left);
				break;
			case 'sw':
				coords.set('top', position.top + offset);
				coords.set('right', session.windowWidth - position.left - 20);
				break;
			case 'sw-alt':
				coords.set('left', position.left);
				coords.set('top', position.top + offset);
				break;
			case 'se':
				coords.set('left', position.left - 20);
				coords.set('top', position.top + offset);
				break;
			case 'se-alt':
				coords.set('top', position.top + offset);
				coords.set('right', session.windowWidth - position.left);
				break;
			}

			return coords;
		}

		/**
		 * Finds the tooltip attachment point in the document for a HTML DOM element
		 * for the specified placement.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 * @param {string} placement The placement for the tooltip.
		 * @return {Object} An object with the top,left position values.
		 */
		function getHtmlPlacement(element, placement) {
			var objectOffset = element.offset(),
				objectWidth = element.outerWidth(),
				objectHeight = element.outerHeight(),
				left,
				top;

			// calculate the appropriate x and y position in the document
			switch (placement) {
			case 'n':
				left = objectOffset.left + objectWidth / 2;
				top = objectOffset.top;
				break;
			case 'e':
				left = objectOffset.left + objectWidth;
				top = objectOffset.top + objectHeight / 2;
				break;
			case 's':
				left = objectOffset.left + objectWidth / 2;
				top = objectOffset.top + objectHeight;
				break;
			case 'w':
				left = objectOffset.left;
				top = objectOffset.top + objectHeight / 2;
				break;
			case 'nw':
				left = objectOffset.left;
				top = objectOffset.top;
				break;
			case 'ne':
				left = objectOffset.left + objectWidth;
				top = objectOffset.top;
				break;
			case 'sw':
				left = objectOffset.left;
				top = objectOffset.top + objectHeight;
				break;
			case 'se':
				left = objectOffset.left + objectWidth;
				top = objectOffset.top + objectHeight;
				break;
			}

			return {
				top: top,
				left: left
			};
		}

		/**
		 * Finds the tooltip attachment point in the document for a SVG element for
		 * the specified placement.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 * @param {string} placement The placement for the tooltip.
		 * @return {Object} An object with the top,left position values.
		 */
		function getSvgPlacement(element, placement) {
			var svgElement = element.closest('svg')[0],
				domElement = element[0],
				point = svgElement.createSVGPoint(),
				boundingBox = domElement.getBBox(),
				matrix = domElement.getScreenCTM(),
				halfWidth = boundingBox.width / 2,
				halfHeight = boundingBox.height / 2,
				placements = [],
				placementKeys = ['nw', 'n', 'ne', 'e', 'se', 's', 'sw', 'w'],
				coords,
				rotation,
				steps,
				x;

			function pushPlacement() {
				placements.push(point.matrixTransform(matrix));
			}

			// get bounding box corners and midpoints
			point.x = boundingBox.x;
			point.y = boundingBox.y;
			pushPlacement();
			point.x += halfWidth;
			pushPlacement();
			point.x += halfWidth;
			pushPlacement();
			point.y += halfHeight;
			pushPlacement();
			point.y += halfHeight;
			pushPlacement();
			point.x -= halfWidth;
			pushPlacement();
			point.x -= halfWidth;
			pushPlacement();
			point.y -= halfHeight;
			pushPlacement();

			// determine rotation
			if (placements[0].y !== placements[1].y || placements[0].x !== placements[7].x) {
				rotation = Math.atan2(matrix.b, matrix.a) * RAD2DEG;
				steps = Math.ceil(((rotation % 360) - 22.5) / 45);
				if (steps < 1) {
					steps += 8;
				}
				while (steps--) {
					placementKeys.push(placementKeys.shift());
				}
			}

			// find placement
			for (x = 0; x < placements.length; x++) {
				if (placementKeys[x] === placement) {
					coords = placements[x];
					break;
				}
			}

			return {
				top: coords.y + session.scrollTop,
				left: coords.x + session.scrollLeft
			};
		}

		// expose methods
		this.compute = computePlacementCoords;
	}

	/**
	 * Creates a new tooltip controller.
	 * @private
	 * @constructor
	 * @param {Object} options Options object containing settings.
	 */
	function TooltipController(options) {
		var placementCalculator = new PlacementCalculator(),
			tipElement = $('#' + options.popupId);

		// build and append tooltip div if it does not already exist
		if (tipElement.length === 0) {
			tipElement = $('<div/>', { id: options.popupId });
			// grab body element if it was not populated when the script loaded
			// note: this hack exists solely for jsfiddle support
			if ($body.length === 0) {
				$body = $('body');
			}
			$body.append(tipElement);
		}

		// hook mousemove for cursor follow tooltips
		if (options.followMouse) {
			// only one positionTipOnCursor hook per tooltip element, please
			if (!tipElement.data(DATA_HASMOUSEMOVE)) {
				$document.on('mousemove', positionTipOnCursor);
				$window.on('scroll', positionTipOnCursor);
				tipElement.data(DATA_HASMOUSEMOVE, true);
			}
		}

		// if we want to be able to mouse onto the tooltip then we need to attach
		// hover events to the tooltip that will cancel a close request on hover and
		// start a new close request on mouseleave
		if (options.mouseOnToPopup) {
			tipElement.on({
				mouseenter: function tipMouseEnter() {
					// we only let the mouse stay on the tooltip if it is set to let
					// users interact with it
					if (tipElement.data(DATA_MOUSEONTOTIP)) {
						// check activeHover in case the mouse cursor entered the
						// tooltip during the fadeOut and close cycle
						if (session.activeHover) {
							session.activeHover.data(DATA_DISPLAYCONTROLLER).cancel();
						}
					}
				},
				mouseleave: function tipMouseLeave() {
					// check activeHover in case the mouse cursor entered the
					// tooltip during the fadeOut and close cycle
					if (session.activeHover) {
						session.activeHover.data(DATA_DISPLAYCONTROLLER).hide();
					}
				}
			});
		}

		/**
		 * Gives the specified element the active-hover state and queues up the
		 * showTip function.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 */
		function beginShowTip(element) {
			element.data(DATA_HASACTIVEHOVER, true);
			// show tooltip, asap
			tipElement.queue(function queueTipInit(next) {
				showTip(element);
				next();
			});
		}

		/**
		 * Shows the tooltip, as soon as possible.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 */
		function showTip(element) {
			var tipContent;

			// it is possible, especially with keyboard navigation, to move on to
			// another element with a tooltip during the queue to get to this point
			// in the code. if that happens then we need to not proceed or we may
			// have the fadeout callback for the last tooltip execute immediately
			// after this code runs, causing bugs.
			if (!element.data(DATA_HASACTIVEHOVER)) {
				return;
			}

			// if the tooltip is open and we got asked to open another one then the
			// old one is still in its fadeOut cycle, so wait and try again
			if (session.isTipOpen) {
				if (!session.isClosing) {
					hideTip(session.activeHover);
				}
				tipElement.delay(100).queue(function queueTipAgain(next) {
					showTip(element);
					next();
				});
				return;
			}

			// trigger powerTipPreRender event
			element.trigger('powerTipPreRender');

			// set tooltip content
			tipContent = getTooltipContent(element);
			if (tipContent) {
				tipElement.empty().append(tipContent);
			} else {
				// we have no content to display, give up
				return;
			}

			// trigger powerTipRender event
			element.trigger('powerTipRender');

			session.activeHover = element;
			session.isTipOpen = true;

			tipElement.data(DATA_MOUSEONTOTIP, options.mouseOnToPopup);

			// set tooltip position
			if (!options.followMouse) {
				positionTipOnElement(element);
				session.isFixedTipOpen = true;
			} else {
				positionTipOnCursor();
			}

			// fadein
			tipElement.fadeIn(options.fadeInTime, function fadeInCallback() {
				// start desync polling
				if (!session.desyncTimeout) {
					session.desyncTimeout = setInterval(closeDesyncedTip, 500);
				}

				// trigger powerTipOpen event
				element.trigger('powerTipOpen');
			});
		}

		/**
		 * Hides the tooltip.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 */
		function hideTip(element) {
			// reset session
			session.isClosing = true;
			session.activeHover = null;
			session.isTipOpen = false;

			// stop desync polling
			session.desyncTimeout = clearInterval(session.desyncTimeout);

			// reset element state
			element.data(DATA_HASACTIVEHOVER, false);
			element.data(DATA_FORCEDOPEN, false);

			// fade out
			tipElement.fadeOut(options.fadeOutTime, function fadeOutCallback() {
				var coords = new CSSCoordinates();

				// reset session and tooltip element
				session.isClosing = false;
				session.isFixedTipOpen = false;
				tipElement.removeClass();

				// support mouse-follow and fixed position tips at the same time by
				// moving the tooltip to the last cursor location after it is hidden
				coords.set('top', session.currentY + options.offset);
				coords.set('left', session.currentX + options.offset);
				tipElement.css(coords);

				// trigger powerTipClose event
				element.trigger('powerTipClose');
			});
		}

		/**
		 * Moves the tooltip to the users mouse cursor.
		 * @private
		 */
		function positionTipOnCursor() {
			// to support having fixed tooltips on the same page as cursor tooltips,
			// where both instances are referencing the same tooltip element, we
			// need to keep track of the mouse position constantly, but we should
			// only set the tip location if a fixed tip is not currently open, a tip
			// open is imminent or active, and the tooltip element in question does
			// have a mouse-follow using it.
			if (!session.isFixedTipOpen && (session.isTipOpen || (session.tipOpenImminent && tipElement.data(DATA_HASMOUSEMOVE)))) {
				// grab measurements
				var tipWidth = tipElement.outerWidth(),
					tipHeight = tipElement.outerHeight(),
					coords = new CSSCoordinates(),
					collisions,
					collisionCount;

				// grab collisions
				coords.set('top', session.currentY + options.offset);
				coords.set('left', session.currentX + options.offset);
				collisions = getViewportCollisions(
					coords,
					tipWidth,
					tipHeight
				);

				// handle tooltip view port collisions
				if (collisions !== Collision.none) {
					collisionCount = countFlags(collisions);
					if (collisionCount === 1) {
						// if there is only one collision (bottom or right) then
						// simply constrain the tooltip to the view port
						if (collisions === Collision.right) {
							coords.set('left', session.windowWidth - tipWidth);
						} else if (collisions === Collision.bottom) {
							coords.set('top', session.scrollTop + session.windowHeight - tipHeight);
						}
					} else {
						// if the tooltip has more than one collision then it is
						// trapped in the corner and should be flipped to get it out
						// of the users way
						coords.set('left', session.currentX - tipWidth - options.offset);
						coords.set('top', session.currentY - tipHeight - options.offset);
					}
				}

				// position the tooltip
				tipElement.css(coords);
			}
		}

		/**
		 * Sets the tooltip to the correct position relative to the specified target
		 * element. Based on options settings.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 */
		function positionTipOnElement(element) {
			var priorityList,
				finalPlacement;

			if (options.smartPlacement) {
				priorityList = $.fn.powerTip.smartPlacementLists[options.placement];

				// iterate over the priority list and use the first placement option
				// that does not collide with the view port. if they all collide
				// then the last placement in the list will be used.
				$.each(priorityList, function(idx, pos) {
					// place tooltip and find collisions
					var collisions = getViewportCollisions(
						placeTooltip(element, pos),
						tipElement.outerWidth(),
						tipElement.outerHeight()
					);

					// update the final placement variable
					finalPlacement = pos;

					// break if there were no collisions
					if (collisions === Collision.none) {
						return false;
					}
				});
			} else {
				// if we're not going to use the smart placement feature then just
				// compute the coordinates and do it
				placeTooltip(element, options.placement);
				finalPlacement = options.placement;
			}

			// add placement as class for CSS arrows
			tipElement.addClass(finalPlacement);
		}

		/**
		 * Sets the tooltip position to the appropriate values to show the tip at
		 * the specified placement. This function will iterate and test the tooltip
		 * to support elastic tooltips.
		 * @private
		 * @param {jQuery} element The element that the tooltip should target.
		 * @param {string} placement The placement for the tooltip.
		 * @return {CSSCoordinates} A CSSCoordinates object with the top, left, and
		 *     right position values.
		 */
		function placeTooltip(element, placement) {
			var iterationCount = 0,
				tipWidth,
				tipHeight,
				coords = new CSSCoordinates();

			// set the tip to 0,0 to get the full expanded width
			coords.set('top', 0);
			coords.set('left', 0);
			tipElement.css(coords);

			// to support elastic tooltips we need to check for a change in the
			// rendered dimensions after the tooltip has been positioned
			do {
				// grab the current tip dimensions
				tipWidth = tipElement.outerWidth();
				tipHeight = tipElement.outerHeight();

				// get placement coordinates
				coords = placementCalculator.compute(
					element,
					placement,
					tipWidth,
					tipHeight,
					options.offset
				);

				// place the tooltip
				tipElement.css(coords);
			} while (
				// sanity check: limit to 5 iterations, and...
				++iterationCount <= 5 &&
				// try again if the dimensions changed after placement
				(tipWidth !== tipElement.outerWidth() || tipHeight !== tipElement.outerHeight())
			);

			return coords;
		}

		/**
		 * Checks for a tooltip desync and closes the tooltip if one occurs.
		 * @private
		 */
		function closeDesyncedTip() {
			var isDesynced = false;
			// It is possible for the mouse cursor to leave an element without
			// firing the mouseleave or blur event. This most commonly happens when
			// the element is disabled under mouse cursor. If this happens it will
			// result in a desynced tooltip because the tooltip was never asked to
			// close. So we should periodically check for a desync situation and
			// close the tip if such a situation arises.
			if (session.isTipOpen && !session.isClosing && !session.delayInProgress) {
				// user moused onto another tip or active hover is disabled
				if (session.activeHover.data(DATA_HASACTIVEHOVER) === false || session.activeHover.is(':disabled')) {
					isDesynced = true;
				} else {
					// hanging tip - have to test if mouse position is not over the
					// active hover and not over a tooltip set to let the user
					// interact with it.
					// for keyboard navigation: this only counts if the element does
					// not have focus.
					// for tooltips opened via the api: we need to check if it has
					// the forcedOpen flag.
					if (!isMouseOver(session.activeHover) && !session.activeHover.is(':focus') && !session.activeHover.data(DATA_FORCEDOPEN)) {
						if (tipElement.data(DATA_MOUSEONTOTIP)) {
							if (!isMouseOver(tipElement)) {
								isDesynced = true;
							}
						} else {
							isDesynced = true;
						}
					}
				}

				if (isDesynced) {
					// close the desynced tip
					hideTip(session.activeHover);
				}
			}
		}

		// expose methods
		this.showTip = beginShowTip;
		this.hideTip = hideTip;
		this.resetPosition = positionTipOnElement;
	}

	/**
	 * Determine whether a jQuery object is an SVG element
	 * @private
	 * @param {jQuery} element The element to check
	 * @return {boolean} Whether this is an SVG element
	 */
	function isSvgElement(element) {
		return window.SVGElement && element[0] instanceof SVGElement;
	}

	/**
	 * Initializes the viewport dimension cache and hooks up the mouse position
	 * tracking and viewport dimension tracking events.
	 * Prevents attaching the events more than once.
	 * @private
	 */
	function initTracking() {
		if (!session.mouseTrackingActive) {
			session.mouseTrackingActive = true;

			// grab the current viewport dimensions on load
			$(function getViewportDimensions() {
				session.scrollLeft = $window.scrollLeft();
				session.scrollTop = $window.scrollTop();
				session.windowWidth = $window.width();
				session.windowHeight = $window.height();
			});

			// hook mouse move tracking
			$document.on('mousemove', trackMouse);

			// hook viewport dimensions tracking
			$window.on({
				resize: function trackResize() {
					session.windowWidth = $window.width();
					session.windowHeight = $window.height();
				},
				scroll: function trackScroll() {
					var x = $window.scrollLeft(),
						y = $window.scrollTop();
					if (x !== session.scrollLeft) {
						session.currentX += x - session.scrollLeft;
						session.scrollLeft = x;
					}
					if (y !== session.scrollTop) {
						session.currentY += y - session.scrollTop;
						session.scrollTop = y;
					}
				}
			});
		}
	}

	/**
	 * Saves the current mouse coordinates to the session object.
	 * @private
	 * @param {jQuery.Event} event The mousemove event for the document.
	 */
	function trackMouse(event) {
		session.currentX = event.pageX;
		session.currentY = event.pageY;
	}

	/**
	 * Tests if the mouse is currently over the specified element.
	 * @private
	 * @param {jQuery} element The element to check for hover.
	 * @return {boolean}
	 */
	function isMouseOver(element) {
		// use getBoundingClientRect() because jQuery's width() and height()
		// methods do not work with SVG elements
		// compute width/height because those properties do not exist on the object
		// returned by getBoundingClientRect() in older versions of IE
		var elementPosition = element.offset(),
			elementBox = element[0].getBoundingClientRect(),
			elementWidth = elementBox.right - elementBox.left,
			elementHeight = elementBox.bottom - elementBox.top;

		return session.currentX >= elementPosition.left &&
			session.currentX <= elementPosition.left + elementWidth &&
			session.currentY >= elementPosition.top &&
			session.currentY <= elementPosition.top + elementHeight;
	}

	/**
	 * Fetches the tooltip content from the specified element's data attributes.
	 * @private
	 * @param {jQuery} element The element to get the tooltip content for.
	 * @return {(string|jQuery|undefined)} The text/HTML string, jQuery object, or
	 *     undefined if there was no tooltip content for the element.
	 */
	function getTooltipContent(element) {
		var tipText = element.data(DATA_POWERTIP),
			tipObject = element.data(DATA_POWERTIPJQ),
			tipTarget = element.data(DATA_POWERTIPTARGET),
			targetElement,
			content;

		if (tipText) {
			if ($.isFunction(tipText)) {
				tipText = tipText.call(element[0]);
			}
			content = tipText;
		} else if (tipObject) {
			if ($.isFunction(tipObject)) {
				tipObject = tipObject.call(element[0]);
			}
			if (tipObject.length > 0) {
				content = tipObject.clone(true, true);
			}
		} else if (tipTarget) {
			targetElement = $('#' + tipTarget);
			if (targetElement.length > 0) {
				content = targetElement.html();
			}
		}

		return content;
	}

	/**
	 * Finds any viewport collisions that an element (the tooltip) would have if it
	 * were absolutely positioned at the specified coordinates.
	 * @private
	 * @param {CSSCoordinates} coords Coordinates for the element.
	 * @param {number} elementWidth Width of the element in pixels.
	 * @param {number} elementHeight Height of the element in pixels.
	 * @return {number} Value with the collision flags.
	 */
	function getViewportCollisions(coords, elementWidth, elementHeight) {
		var viewportTop = session.scrollTop,
			viewportLeft =  session.scrollLeft,
			viewportBottom = viewportTop + session.windowHeight,
			viewportRight = viewportLeft + session.windowWidth,
			collisions = Collision.none;

		if (coords.top < viewportTop || Math.abs(coords.bottom - session.windowHeight) - elementHeight < viewportTop) {
			collisions |= Collision.top;
		}
		if (coords.top + elementHeight > viewportBottom || Math.abs(coords.bottom - session.windowHeight) > viewportBottom) {
			collisions |= Collision.bottom;
		}
		if (coords.left < viewportLeft || coords.right + elementWidth > viewportRight) {
			collisions |= Collision.left;
		}
		if (coords.left + elementWidth > viewportRight || coords.right < viewportLeft) {
			collisions |= Collision.right;
		}

		return collisions;
	}

	/**
	 * Counts the number of bits set on a flags value.
	 * @param {number} value The flags value.
	 * @return {number} The number of bits that have been set.
	 */
	function countFlags(value) {
		var count = 0;
		while (value) {
			value &= value - 1;
			count++;
		}
		return count;
	}

}));
