{"classes":[{"desc":"Creates a chart component which has a chart","class":"ChartComponent","param":{"paramType":"String","name":"$id","desc":"Uniquely identifies the instance of this class","optional":false},"augments":"Component","signature":"new ChartComponent($id)","access":"public","methods":[{"desc":"Adds a series to the chart. The number of data points provided using the seriesData array should be the same as the other series and the number of labels","method":"addSeries","param":[{"paramType":"String","name":"$id","desc":"Unique id of the series. This will be used for updating the series data","optional":false},{"paramType":"String","name":"$name","desc":"The name of this series","optional":false},{"paramType":"Array","name":"$seriesData","desc":"The series data","optional":false},{"paramType":"Array","name":"$opts","desc":"A bunch of options passed to as an associative array","optional":false}],"example":"$chart1 = new ChartComponent('my_chart1');\n$chart1->addSeries('sales', 'Sales', array(826.25, 382.14, 261.36, 241.56, 93.53, 79.20, 60.39, 57.71, 40.59, 40.59));","signature":"addSeries($id, $name, $seriesData, $opts)"},{"desc":"Set an array of data points which will be used for the pie chart","method":"setPieValues","param":[{"paramType":"Array","name":"$seriesData","desc":"The series data array","optional":false},{"paramType":"Array","name":"$opts","desc":"The series options as an associative array","optional":false}],"signature":"setPieValues($seriesData, $opts)"},{"desc":"Updates a series","method":"updateSeries","param":[{"paramType":"String","name":"$id","desc":"The id of the series","optional":false},{"paramType":"Array","name":"$newData","desc":"The update data array","optional":false}],"signature":"updateSeries($id, $newData)"},{"desc":"Set the labels of the chart, which are the names on the X-Axis","method":"setLables","param":{"paramType":"Array","name":"$labelArray","desc":"An array of labels as strings","optional":false},"signature":"setLables($labelArray)"},{"desc":"Configure the Y-Axis of the chart","method":"setYAxis","param":[{"paramType":"String","name":"$name","desc":"The name of the y axis","optional":false},{"paramType":"Array","name":"$options","desc":"Options array. See the guide for available options","optional":false}],"signature":"setYAxis($name, $options)"},{"desc":"Configure the X-Axis of the chart","method":"setXAxis","param":[{"paramType":"String","name":"$name","desc":"The name of the x axis","optional":false},{"paramType":"Array","name":"$options","desc":"Options array. See the guide for available options","optional":false}],"signature":"setXAxis($name, $options)"},{"desc":"Configure the Y-Axis of the chart","method":"addYAxis","param":[{"paramType":"String","name":"$id","desc":"The unique id of this axis","optional":false},{"paramType":"String","name":"$name","desc":"The name of the y axis","optional":false},{"paramType":"Array","name":"$options","desc":"Options array. See the guide for available options","optional":false}],"signature":"addYAxis($id, $name, $options)"},{"desc":"Attach a handler for the event when a chart plot item is clicked","method":"onItemClick","param":[{"paramType":"Array","name":"$lockedComponents","desc":"Components to be locked","optional":false},{"paramType":"String","name":"$func","desc":"Function name to be executed on item click","optional":false},{"paramType":"Object","name":"$db","desc":"THe dashboard object","optional":false}],"signature":"onItemClick($lockedComponents, $func, $db)"},{"desc":"Clears all the data in the chart. Use this function if you want to update the chart with new data and labels. Be sure to lock the component before","method":"clearChart","signature":"clearChart()"},{"desc":"Add a drill step for chart drilldown","method":"addDrillStep","param":[{"paramType":"String","name":"$func","desc":"Function name to be executed on a drill step","optional":false},{"paramType":"Object","name":"$db","desc":"The dashboard object","optional":false}],"signature":"addDrillStep($func, $db)"},{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Base Component Class containing functions shared across all components.\n\n**This is an abstract class. You cannot create instances of this.*","class":"Component","signature":"new Component()","access":"public","methods":[{"desc":"Set the caption of this component which is the text displayed on top of the component","method":"setCaption","param":{"paramType":"String","name":"$caption","desc":"Caption text to be displayed on the component","optional":false},"signature":"setCaption($caption)"},{"desc":"Set the dimensions of the component. The dimensions are based on a 12-column grid","method":"setDimensions","param":[{"paramType":"Number","name":"$w","desc":"Width of the Component in Units","optional":false},{"paramType":"Number","name":"$h","desc":"Height of the Component in Units","optional":false}],"signature":"setDimensions($w, $h)"},{"desc":"Hides a component from the dashboard","method":"hideComponent","signature":"hideComponent()"},{"desc":"Show a hidden component in a modal","method":"showAsModal","signature":"showAsModal()"},{"desc":"Add a simple Key Performance Indicator (KPI/Metric) attached to the\nbottom of the component.","method":"addComponentKPI","param":[{"paramType":"String","name":"$id","desc":"A unique ID to identify the component KPI","optional":false},{"paramType":"ComponentKPIProperties","name":"$options","desc":"The options as an Associative Array","optional":false}],"signature":"addComponentKPI($id, $options)"},{"desc":"Updates the Component KPI","method":"updateComponentKPI","param":[{"paramType":"String","name":"$id","desc":"A unique ID to identify the component KPI. This has to be the same as the one used to add the component kpi","optional":false},{"paramType":"Array","name":"$options","desc":"Array with the new value to set","optional":false}],"signature":"updateComponentKPI($id, $options)"},{"desc":"Removes a Component KPI","method":"removeComponentKPI","param":{"paramType":"String","name":"$id","desc":"A unique ID to identify the component KPI. This has to be the same as the one used to add the component kpi","optional":false},"signature":"removeComponentKPI($id)"},{"desc":"Sets the index of the component on the dashboard. The component order on the dashboard is based on this index.","method":"overrideDisplayOrderIndex","param":{"paramType":"Number","name":"$idx","desc":"The index for this component","optional":false},"signature":"overrideDisplayOrderIndex($idx)"},{"desc":"Set the value to the key passed for the particular component.","method":"setOption","param":[{"paramType":"String","name":"key","desc":"variable which needs to be assigned","optional":false},{"paramType":"String","name":"value","desc":"value to be assigned to the key","optional":false}],"signature":"setOption(key, value)"},{"desc":"Get the id for this component","method":"getID","signature":"getID()"}]},{"desc":"Creates a Form Component","class":"FormComponent","param":{"paramType":"String","name":"$id","desc":"Uniquely identifies the instance of this class","optional":false},"augments":"Component","signature":"new FormComponent($id)","access":"public","methods":[{"desc":"Add a text field represented by a HTML Text input on the form","method":"addTextField","param":[{"paramType":"String","name":"$id","desc":"Id for this field used to retrieve the value","optional":false},{"paramType":"String","name":"$label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Array","name":"$options","desc":"The options as an associative array","optional":false}],"signature":"addTextField($id, $label, $options)"},{"desc":"Add a select/dropdown field which allows the user to select one option from a list of pre-defined options. This is displayed as a HTML Select input on the form","method":"addSelectField","param":[{"paramType":"String","name":"$id","desc":"Id for this field used to retrieve the value","optional":false},{"paramType":"String","name":"$label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Array","name":"$list","desc":"An array of strings which are the options in the select items","optional":false},{"paramType":"Array","name":"$options","desc":"The options as an associative array","optional":false}],"signature":"addSelectField($id, $label, $list, $options)"},{"desc":"Add a multi-select field which allows the user to select one option from a list of pre-defined options. This is displayed as a HTML multi select input on the form","method":"addMultiSelectField","param":[{"paramType":"String","name":"$id","desc":"Id for this field item used to retrieve the value","optional":false},{"paramType":"String","name":"$label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Array","name":"$list","desc":"An array of strings which are the options in the select items","optional":false},{"paramType":"Array","name":"$options","desc":"The options as an associative array","optional":false}],"signature":"addMultiSelectField($id, $label, $list, $options)"},{"desc":"Add a select/dropdown field which allows the user to select a single date. This is displayed with a date picker.","method":"addDateField","param":[{"paramType":"String","name":"$id","desc":"Id for this field used to retrieve the value","optional":false},{"paramType":"String","name":"$label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Array","name":"$options","desc":"The options as an associative array","optional":false}],"signature":"addDateField($id, $label, $options)"},{"desc":"Adds a Date Range field to the component. This field can be used to select a date range, a start date and an end date.","method":"addDateRangeField","param":[{"paramType":"String","name":"$id","desc":"Id for this field item used to retrieve the value","optional":false},{"paramType":"String","name":"$label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Array","name":"$options","desc":"The options as an associative array","optional":false}],"signature":"addDateRangeField($id, $label, $options)"},{"desc":"Adds a Numeric Range field to the component. This field can be used to select a numeric range, a start number and an end number.","method":"addNumericRangeField","param":[{"paramType":"String","name":"$id","desc":"Unique id for this field","optional":false},{"paramType":"String","name":"$label","desc":"The name displayed on the control","optional":false},{"paramType":"Array","name":"$values","desc":"The default values for the start and end numbers","optional":false},{"paramType":"Array","name":"$options","desc":"Array of options","optional":false}],"signature":"addNumericRangeField($id, $label, $values, $options)"},{"desc":"Add a checkbox field displayed as a HTML checkbox in the form.","method":"addCheckboxField","param":[{"paramType":"String","name":"$id","desc":"Id for this field item used to retrieve the value","optional":false},{"paramType":"String","name":"$label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Boolean","name":"$value","desc":"If the checkbox is supposed to be checked by default","optional":false}],"signature":"addCheckboxField($id, $label, $value)"},{"desc":"Adds an on apply click handler","method":"onApplyClick","param":[{"paramType":"Array","name":"$lockedComponents","desc":"Components to be locked","optional":false},{"paramType":"String","name":"$func","desc":"Function name to be executed on apply form","optional":false}],"signature":"onApplyClick($lockedComponents, $func)"},{"desc":"Get all the input values","method":"getAllInputValues","signature":"getAllInputValues()"},{"desc":"Get input value by id","method":"getInputValue","param":{"paramType":"String","name":"$id","desc":"The id of a specific field item","optional":false},"signature":"getInputValue($id)"},{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Creates a Gauge Component","class":"GaugeComponent","param":{"paramType":"String","name":"$id","desc":"Uniquely identifies the instance of this class","optional":false},"augments":"KPIComponent","signature":"new GaugeComponent($id)","access":"public","methods":[{"desc":"Sets the maximum and minimum values of the gauge.","method":"setLimits","param":[{"paramType":"Number","name":"min","desc":"Lower bound of the gauge","optional":false},{"paramType":"Number","name":"max","desc":"Upper bound of the gauge","optional":false}],"signature":"setLimits(min, max)"},{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Creates a KPI Component","class":"KPIComponent","param":{"paramType":"String","name":"$id","desc":"Uniquely identifies the instance of this class","optional":false},"augments":"Component","signature":"new KPIComponent($id)","access":"public","methods":[{"desc":"Sets a numeric value to the KPI which is displayed on the dashboard.","method":"setValue","param":[{"paramType":"Number","name":"$value","desc":"The value to be displayed","optional":false},{"paramType":"Array","name":"$options","desc":"A bunch of options to configure the display passed to as an associative array","optional":false}],"signature":"setValue($value, $options)"},{"desc":"Sets the values to be displayed by the spark","method":"setSparkValues","param":[{"paramType":"Array","name":"$labels","desc":"Array of labels as strings","optional":false},{"paramType":"Array","name":"$values","desc":"The values used by the spark","optional":false}],"signature":"setSparkValues($labels, $values)"},{"desc":"Handles Click function on a value","method":"onValueClick","param":{"paramType":"String","name":"$url","desc":"Remote Url that updates the value","optional":false},"signature":"onValueClick($url)"},{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Creates a KPI Group Component","class":"KPIGroupComponent","param":{"paramType":"String","name":"$id","desc":"Uniquely identifies the instance of this class","optional":false},"augments":"MultiKPIComponent","signature":"new KPIGroupComponent($id)","access":"public","methods":[{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Creates a KPI Table Component","class":"KPITableComponent","param":{"paramType":"String","name":"$id","desc":"Uniquely identifies the instance of this class","optional":false},"augments":"MultiKPIComponent","signature":"new KPITableComponent($id)","access":"public","methods":[{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Base MultiKPIComponent Class containing functions shared across KPITable and KPIGroup.\n\n**This is an abstract class. You cannot create instances of this.*","class":"MultiKPIComponent","signature":"new MultiKPIComponent()","access":"public","methods":[{"desc":"Adds an individual KPI","method":"addKPI","param":[{"paramType":"String","name":"$id","desc":"A unique id for the KPI","optional":false},{"paramType":"ComponentKPIProperties","name":"$opts","desc":"Array of options","optional":false}],"signature":"addKPI($id, $opts)"},{"desc":"Updates an existing KPI","method":"updateKPI","param":[{"paramType":"String","name":"$id","desc":"The unique id for the individual KPI","optional":false},{"paramType":"ComponentKPIProperties","name":"$opts","desc":"Array of options","optional":false}],"signature":"updateKPI($id, $opts)"},{"desc":"Deletes an existing KPI","method":"deleteKPI","param":{"paramType":"String","name":"$id","desc":"The unique id for the individual KPI","optional":false},"signature":"deleteKPI($id)"},{"desc":"Sets a caption color for a KPI","method":"setKPICaptionColor","param":[{"paramType":"String","name":"$id","desc":"The unique id for the individual KPI","optional":false},{"paramType":"String","name":"$color","desc":"Color for the caption","optional":false}],"signature":"setKPICaptionColor($id, $color)"},{"desc":"Sets a value color for a KPI","method":"setKPIValueColor","param":[{"paramType":"String","name":"$id","desc":"The unique id for the individual KPI","optional":false},{"paramType":"String","name":"$opts","desc":"Color for the value","optional":false}],"signature":"setKPIValueColor($id, $opts)"},{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Creates a table component","class":"TableComponent","param":{"paramType":"String","name":"$id","desc":"Uniquely identifies the instance of this class","optional":false},"augments":"Component","signature":"new TableComponent($id)","access":"public","methods":[{"desc":"Adds a column to the table","method":"addColumn","param":[{"paramType":"String","name":"$id","desc":"A unique id for this column which also corrresponds to the keys of row array","optional":false},{"paramType":"String","name":"$name","desc":"The name of the column which is displayed in the table","optional":false},{"paramType":"String","name":"$opts","desc":"Array of options","optional":false}],"signature":"addColumn($id, $name, $opts)"},{"desc":"Add a row of data to the table. This will need to be provided as an associative array whose keys correspond to individual column keys.","method":"addRow","param":{"paramType":"Array","name":"$row","desc":"An associative array containing the data to be displayed in a row","optional":false},"signature":"addRow($row)"},{"desc":"Sets the number of rows per page in the table","method":"setRowsPerPage","param":{"paramType":"Number","name":"$numRows","desc":"The number of rows in a single page on the table","optional":false},"signature":"setRowsPerPage($numRows)"},{"desc":"Adds multiple rows of data to the table at once. Note that the each row need to be provided as an associative array whose keys match the column keys","method":"addMultipleRows","param":{"paramType":"Array","name":"$rows","desc":"Array of row arrays, where each row is an associative array","optional":false},"signature":"addMultipleRows($rows)"},{"desc":"Clears all the rows in the table.","method":"clearRows","signature":"clearRows()"},{"desc":"Gets the type of this component","method":"getType","signature":"getType()"}]},{"desc":"Array Utility class","class":"ArrayUtils","signature":"new ArrayUtils()","access":"public","methods":[{"desc":"This is a static method and can be used to extract a column from the result of a SQL query fetched as an associative array","method":"pluck","param":[{"paramType":"Array","name":"$data","desc":"The data","optional":false},{"paramType":"String","name":"$columnKey","desc":"The key of the column to pluck","optional":false},{"paramType":"Boolean","name":"$replaceEmptyWithNull","desc":"If there is no item found on that key, replace with a null (default true)","optional":false}],"example":"$names = array(\n   array('name' => 'moe', 'age' => 40),\n   array('name' => 'larry', 'age' => 50),\n   array('name' => 'curly', 'age' => 60)\n);\nArrayUtils::pluck($names, 'name');\n\n==> [\"moe\", \"larry\", \"curly\"]","signature":"pluck($data, $columnKey, $replaceEmptyWithNull)"}]}]}